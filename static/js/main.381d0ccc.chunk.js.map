{"version":3,"sources":["modules/redux/index.ts","components/elements/LoadingSpinner.tsx","components/elements/form/LoginForm.tsx","components/elements/form/UserDetailForm.tsx","components/elements/form/BookCreateForm.tsx","components/elements/table/DefaultUserListTable.tsx","components/elements/table/BookSearchListTable.tsx","components/elements/table/BooksListTable.tsx","components/elements/table/RecommendBooksListTable.tsx","components/elements/table/BooksActivityListTable.tsx","components/elements/table/UserInfoTable.tsx","components/elements/common/Sidebar.tsx","components/elements/common/Topbar.tsx","components/elements/common/Footer.tsx","components/elements/common/topbar/TopbarMessages.tsx","components/elements/common/topbar/TopbarInformation.tsx","components/elements/common/Pagination.tsx","components/elements/ListSkeletonComponent.tsx","components/elements/InfoSkeletonComponent.tsx","components/elements/SearchSkeletonComponent.tsx","components/pages/LoginPage.tsx","hook/useLogin.ts","components/pages/UsersPage.tsx","hook/useUserPage.ts","components/pages/BooksListPage.tsx","hook/useBooksList.ts","components/pages/RecommendBooksListPage.tsx","hook/useRecommendBooksList.ts","components/pages/BookActivityListPage.tsx","hook/useActivity.ts","components/pages/UserDetail.tsx","hook/useDetail.ts","hook/useUserInfo.ts","components/pages/UserInfoPage.tsx","components/pages/BookCreatePage.tsx","hook/useBookCreate.ts","components/pages/TestPage.tsx","components/pages/sample/BlankPage.tsx","routes/Root.tsx","App.tsx","modules/configureStore.ts","serviceWorker.ts","index.tsx","modules/redux/pages/index.ts","lib/Helper.ts","lib/API.ts","routes/History.tsx","lib/GlobalAxios.ts","lib/GlobalAlert.ts","modules/redux/logins/index.ts","modules/ActionType.ts","modules/redux/sitedatas/sagas.ts","modules/redux/logins/sagas.ts","modules/redux/pages/sagas.ts","modules/redux/sitedatas/index.ts","modules/redux/sitedatas/reducer.ts","modules/redux/sitedatas/actions.ts","modules/redux/logins/reducer.ts","modules/redux/logins/actions.ts","modules/redux/pages/reducer.ts","modules/redux/pages/actions.ts"],"names":["rootSaga","rootReducer","history","combineReducers","router","connectRouter","sitedata","sitedatas","login_state","logins","pages_state","pages","all","SitedatasSaga","loginActionSaga","PageActionSaga","LoadingSpinner","radius","color","stroke","visible","LoginForm","inputEmail","inputPassword","handelRememberme","handleChangeEmail","handleChangePassword","handleClickLoginLink","handleRememberMeCheckbox","handleEnterKeyPress","onEnter","event","key","className","type","id","aria-describedby","placeholder","value","onChange","e","target","onKeyPress","checked","htmlFor","href","onClick","UserDetailForm","useformcode","userdetaildata","handleUserEmailChange","handleUserNameChange","handleUserTypeChange","handleUserStateChange","handleUserLevelChange","handleUseDataSubmit","user_email","user_name","user_type","type_code","map","item","i","user_state","state_code","user_level","level_code","BookCreateForm","bookSearchString","handleBookSearchButtonClick","handleBookSearchInputCange","preventDefault","DefaultUserListTable","isloading","items","handleUserInfoLink","handleUserInfoPageLink","handleUserActiveUpdateLink","handleUserActiveDeleteLink","colSpan","style","height","display","justifyContent","alignItems","email","uuid","name","code_name","state","level","read_book_count","activity_count","created_at_atring","active","DefaultSearchListTable","handleClickBookCreate","src","thumbnail","alt","title","status","isbn","contents","authors","BooksListTable","handleClickRecommendAddButton","handleClickRecommendDeleteButton","recommend","RecommendBooksListTable","handleClickDeleteButton","book_thumbnail","book_title","book_user_name","book_contents","book_id","BooksActivityListTable","handleClickActivityDeleteButton","gubun_name","created_at_string","list_uid","UserInfoTable","userInfoData","user_uuid","user_activity_state","upload_book_count","updated_at_string","email_verified_at_string","Sidebar","to","data-toggle","data-target","aria-expanded","aria-controls","Topbar","role","aria-haspopup","aria-labelledby","aria-label","Footer","TopbarMessages","TopbarInformation","Helper","GlobalAlert","thenLocationReload","text","Pagination","handlePaginate","listpagedata","previousLabel","nextLabel","breakLabel","pageCount","Number","next_page","marginPagesDisplayed","pageRangeDisplayed","onPageChange","breakClassName","breakLinkClassName","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","activeClassName","ListSkeletonComponent","props","ListTable","InfoSkeletonComponent","InfoTable","SearchSkeletonComponent","SearchTable","LoginPage","document","body","classList","add","useSelector","loginState","useMemo","dispatch","useDispatch","useState","setInputEmail","setInputPassword","rememberme","setRememberme","__handleChangeEmail","useEffect","cookieManager","get","Promise","resolve","reject","setLoginInfo","token_type","data","expires_in","access_token","refresh_token","attemptLoginResetAction","then","__handleChangePassword","password","__handleClickLoginLink","set","dataObject","attemptLoginAction","__handleRememberMeCheckbox","remove","__handleEnterKeyPress","useLogin","message","error","thenHistoryPush","push_router","push","UsersPage","params","useParams","state_user_list","users","user_list","state_user_info","user_info","state_user_active_update","user_active_update","userListItems","setUserListItems","setUserInfoData","current_page","from","last_page","per_page","prev_page_url","total","first_page","prev_page","listPageData","setlistPageData","isLoading","setIsLoading","__handleClickUserInfoConfirmButton","a","attemptGetUserInfoResetAction","undefined","list","attemptGetUserListAction","pageNumber","page_number","loadingState","idleState","console","debug","__handleClickUserInfoLink","__handlePaginate","selected_page","selected","__handleClickUserInfoPage","__handleUserActiveUpdateLink","attemptUserActiveUpdateAction","__handleUserActiveDeleteLink","alert","useUserPage","BooksListPage","state_book_list","books","book_list","state_add_recommend_book","add_recommend_book","state_delete_recommend_book","delete_recommend_book","state_sitedata","booksListItems","setBooksListItems","__handleClickRecommendAddButton","Swal","fire","input","inputOptions","code_list","code","inputPlaceholder","showCancelButton","inputValidator","gubun","select_gubun","attemptAddRecommendBookAction","attemptGetBooksListAction","__handleClickRecommendDeleteButton","attemptDeleteRecommendBookAction","useBooksList","RecommendBooksListPage","recommend_book_list","attemptRecommendBookListAction","__handleClickDeleteButton","useRecommendBooksList","BookActivityListPage","state_book_activity_list","book_activity_list","dtate_delete_book_activity","delete_book_activity","booksActivityListItems","setBooksActivityListItems","attemptGetBookActivityListAction","__handleClickActivityDeleteButton","attemptDeleteBookActivityAction","activity_uuid","useActivity","UserDetail","state_user_data_update","user_data_update","useFormCode","setUserFormCode","user_id","userDetailPageData","setUserDetailPageData","user_type_code","user_state_code","user_level_code","attemptGetUserInfoAction","__handleUserEmailChange","__handleUserNameChange","__handleUserTypeChange","__handleUserStateChange","__handleUserLevelChange","__handleUseDataSubmit","attemptUserDataUpdateAction","__handleUserInfoReset","useDetail","user_active","user_created_at","updated_at","userInfoItems","setUserInfoItems","UserInfoPage","useUserInfo","BookCreatePage","state_books","setBookSearchString","bookSearchResultItem","setBookSearchResultItem","searchDaumBookApi","length","axios","headers","res","documents","default","book_create","__handleBookSearchButtonClick","__handleBookSearchInputCange","__handleClickBookServerCreate","state_key","book_info","split","n","API","book_uuid","info","attemptBookCreateAction","join","publisher","useBookCreate","BookSearchListTable","TestPage","BlankPage","data-parent","tabIndex","aria-hidden","data-dismiss","Root","Routerhistory","router_state","sitedata_state","location","pathname","GlobalAxios","getRootDataAction","fetchData","path","exact","component","store","initialState","compose","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","applyMiddleware","routerMiddleware","createStore","run","configureStore","createBrowserHistory","window","INITIAL_REDUX_STATE","App","History","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","getAccessToken","getRefreshToken","payload","setLoginInfoRefresh","removeLoginInfo","cname","cvalue","hours","d","Date","setTime","getTime","expires","toUTCString","cookie","ca","c","charAt","substring","indexOf","attemptLogin","init","getSiteData","attemptGetUserList","attemptGetUserInfo","attemptUserDataUpdate","attemptUserActiveUpdate","attemptBookExitsCheckRequest","attemptBookCreateRequest","attemptGetBookListRequest","attemptGetRecommendBookListRequest","attemptAddRecommendBookRequest","attemptDeleteRecommendBookRequest","attemptGetBookActivityListRequest","attemptDeleteBookActivityRequest","defaultAxiosinstance","user_access_token","promise","axiosPromise","response","error_message","request","post","auth","method","url","axiosinstance","create","baseURL","process","timeout","put","delete","this","Error","SwalAlert","alertOption","push_target","reload","defaultUserInfo","html","cancelButtonText","cancelButtonAriaLabel","icon","withReactContent","ActionType","getSiteDataSaga","onSiteDataRequestWatcher","call","GET_ROOTDATA_SUCCESS","GET_ROOTDATA_ERROR","takeLatest","GET_ROOTDATA_REQUEST","fork","onLoginRequestWatcher","LOGIN_DATA_SUCCESS","LOGIN_DATA_ERROR","LOGIN_DATA_REQUEST","getUserListActionSaga","getUserInfoActionSaga","userUpdateActionSaga","userUpdateActiveActionSaga","bookCreateActionSaga","getBookListActionSaga","getRecommendBookListActionSaga","recommendBookAddActionSaga","recommendBookDeleteActionSaga","getBookActivityListActionSaga","deleteBookActivityActionSaga","onPagesRequestWatcher","GET_USER_LIST_SUCCESS","GET_USER_LIST_ERROR","GET_USER_INFO_SUCCESS","GET_USER_INFO_ERROR","USER_DATA_UPDATE_SUCCESS","USER_DATA_UPDATE_ERROR","USER_ACTIVE_UPDATE_SUCCESS","USER_ACTIVE_UPDATE_ERROR","BOOK_CREATE_SUCCESS","BOOK_CREATE_ERROR","GET_BOOKS_LIST_SUCCESS","GET_BOOKS_LIST_ERROR","GET_RECOMMEND_BOOKS_LIST_SUCCESS","GET_RECOMMEND_BOOKS_LIST_ERROR","ADD_RECOMMEND_BOOKS_SUCCESS","ADD_RECOMMEND_BOOKS_ERROR","DELETE_RECOMMEND_BOOKS_SUCCESS","DELETE_RECOMMEND_BOOKS_ERROR","GET_BOOKS_ACTIVITY_LIST_SUCCESS","GET_BOOKS_ACTIVITY_LIST_ERROR","DELETE_BOOKS_ACTIVITY_LIST_SUCCESS","DELETE_BOOKS_ACTIVITY_LIST_ERROR","GET_USER_LIST_REQUEST","GET_USER_INFO_REQUEST","USER_DATA_UPDATE_REQUEST","USER_ACTIVE_UPDATE_REQUEST","BOOK_CREATE_REQUEST","GET_BOOKS_LIST_REQUEST","GET_RECOMMEND_BOOKS_LIST_REQUEST","ADD_RECOMMEND_BOOKS_REQUEST","DELETE_RECOMMEND_BOOKS_REQUEST","GET_BOOKS_ACTIVITY_LIST_REQUEST","DELETE_BOOKS_ACTIVITY_LIST_REQUEST","getSiteDataReducer","createReducer","action","loginActionReducer","LOGIN_DATA_RESET","pagesActionReducer","GET_USER_INFO_RESET"],"mappings":"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","file":"static/js/main.381d0ccc.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { connectRouter, RouterState } from 'connected-react-router'\nimport { History } from 'history'\nimport { all } from 'redux-saga/effects';\nimport sitedatas, { SiteDataState } from './sitedatas';\nimport  SitedatasSaga from './sitedatas/sagas';\n\nimport logins ,{ LoginState } from './logins';\nimport loginActionSaga from './logins/sagas';\n\nimport pages ,{ PageState } from './pages';\nimport PageActionSaga from './pages/sagas';\n\nexport interface RootState {\n    router: RouterState,\n    sitedata: SiteDataState,\n    login_state: LoginState\n    pages_state: PageState\n}\n\nconst rootReducer = (history: History) => combineReducers({\n    router: connectRouter(history),\n    sitedata: sitedatas,\n    login_state: logins,\n    pages_state: pages,\n});\n\nexport default rootReducer;\n\nexport function* rootSaga() {\n    yield all(\n        [\n            // getSiteDataSaga(),\n            ...SitedatasSaga,\n            ...loginActionSaga,\n            ...PageActionSaga\n        ]\n    );\n}","import React from 'react';\nimport Spinner from 'react-spinner-material';\n\n/**\n * 런치 스크린용 로딩 페이지.\n */\nexport default function LoadingSpinner() {\n    return (\n        <>\n            <Spinner radius={30} color={\"#333333\"} stroke={5} visible={true} />\n        </>\n    );\n}","import React, {MouseEvent, ChangeEvent, KeyboardEvent} from 'react';\n\ninterface LoginFormProps  {\n    inputEmail: string;\n    inputPassword: string;\n    handelRememberme: boolean;\n    handleChangeEmail: ( email: string ) => void;\n    handleChangePassword: ( password: string ) => void;\n    handleClickLoginLink: ( event: MouseEvent ) => void;\n    handleEnterKeyPress: () => void;\n    handleRememberMeCheckbox: ( event: ChangeEvent<HTMLInputElement> ) => void;\n};\n\nfunction LoginForm({inputEmail, inputPassword, handelRememberme, handleChangeEmail, handleChangePassword, handleClickLoginLink, handleRememberMeCheckbox, handleEnterKeyPress}: LoginFormProps ) {\n    const onEnter = (event: KeyboardEvent<HTMLInputElement>) => event.key === 'Enter' && handleEnterKeyPress();\n\n    return (\n        <>\n            <form className=\"user\">\n                <div className=\"form-group\">\n                    <input\n                        type=\"email\"\n                        className=\"form-control form-control-user\"\n                        id=\"exampleInputEmail\"\n                        aria-describedby=\"emailHelp\"\n                        placeholder=\"이메일을 입력해 주세요....\"\n                        value={inputEmail}\n                        onChange={ e => handleChangeEmail(e.target.value) }\n                        onKeyPress={e => onEnter(e)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        className=\"form-control form-control-user\"\n                        id=\"exampleInputPassword\"\n                        placeholder=\"비밀번호를 입력해 주세요...\"\n                        value={inputPassword}\n                        onChange={ e => handleChangePassword(e.target.value) }\n                        onKeyPress={e => onEnter(e)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox small\">\n                        <input\n                            type=\"checkbox\"\n                            className=\"custom-control-input\"\n                            id=\"customCheck\"\n                            checked={handelRememberme}\n                            onChange={ e => handleRememberMeCheckbox(e)}\n                        />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck\">Remember Me</label>\n                    </div>\n                </div>\n                <a href=\"null\"\n                    className=\"btn btn-primary btn-user btn-block\"\n                    onClick={(e: MouseEvent) => handleClickLoginLink(e)}\n                >Login</a>\n            </form>\n        </>\n    );\n}\n\nexport default LoginForm;","import React, { MouseEvent} from 'react';\n// import { defaultServerResponse, userDetailData } from 'modules/Interfaces';\n\ninterface initialProps  {\n    useformcode: any;\n    userdetaildata: any;\n\n    handleUserEmailChange: (e: string) => void;\n    handleUserNameChange: (e: string) => void;\n    handleUserTypeChange: (e: string) => void;\n    handleUserStateChange: (e: string) => void;\n    handleUserLevelChange: (e: string) => void;\n\n    handleUseDataSubmit: ( event: MouseEvent) => void;\n};\n\nfunction UserDetailForm({\n    useformcode,\n    userdetaildata,\n    handleUserEmailChange,\n    handleUserNameChange,\n    handleUserTypeChange,\n    handleUserStateChange,\n    handleUserLevelChange,\n    handleUseDataSubmit,\n } : initialProps) {\n    return (\n        <>\n            <form className=\"user\">\n                <div className=\"form-group\">\n                    <div className=\"mb-3 mb-sm-0\">\n                        <input type=\"text\" className=\"form-control form-control-user\" placeholder=\"사용자 이메일\" onChange={ e => handleUserEmailChange(e.target.value)} value={userdetaildata.user_email}/>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"mb-3 mb-sm-0\">\n                        <input type=\"text\" className=\"form-control form-control-user\" placeholder=\"사용자 이름\" onChange={ e => handleUserNameChange(e.target.value)} value={userdetaildata.user_name}/>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"mb-3 mb-sm-0\">\n                        <select className=\"form-control\" id=\"user_type\"\n                            onChange={ e => handleUserTypeChange(e.target.value)}\n                            value={userdetaildata.user_type}\n                        >\n                        {useformcode && useformcode.type_code.map((item: any, i: any) => {\n                                return <option key={item['code_id']} value={item['code_id']}>{item['code_name']}</option>\n                            })\n                        }\n                        </select>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"mb-3 mb-sm-0\">\n                    <select className=\"form-control\" id=\"user_state\"\n                            onChange={ e => handleUserStateChange(e.target.value)}\n                            value={userdetaildata.user_state}\n                        >\n                        {useformcode && useformcode.state_code.map((item: any, i: any) => {\n                                return <option key={item['code_id']} value={item['code_id']}>{item['code_name']}</option>\n                            })\n                        }\n                        </select>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"mb-3 mb-sm-0\">\n                    <select className=\"form-control\" id=\"user_level\"\n                            onChange={ e => handleUserLevelChange(e.target.value)}\n                            value={userdetaildata.user_level}\n                        >\n                        {useformcode && useformcode.level_code.map((item: any, i: any) => {\n                                return <option key={item['code_id']} value={item['code_id']}>{item['code_name']}</option>\n                            })\n                        }\n                        </select>\n                    </div>\n                </div>\n                <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\" onClick={e => handleUseDataSubmit(e)}>Block level button</button>\n            </form>\n        </>\n    );\n}\n\nexport default UserDetailForm;","import React, {MouseEvent, KeyboardEvent} from 'react';\n\ninterface initialProps  {\n    bookSearchString: string;\n    handleBookSearchButtonClick: ( event: MouseEvent ) => void;\n    handleBookSearchInputCange: ( event: string ) => void;\n    handleEnterKeyPress: () => void;\n};\n\nfunction BookCreateForm({bookSearchString, handleBookSearchButtonClick, handleBookSearchInputCange, handleEnterKeyPress} : initialProps) {\n    const onEnter = (event: KeyboardEvent<HTMLInputElement>) => {\n        event.preventDefault();\n        event.key === 'Enter' && handleEnterKeyPress();\n    }\n\n    return (\n        <>\n            <div className=\"card o-hidden border-0 shadow-lg my-5\">\n                <div className=\"card-body p-0\">\n                    {/* <!-- Nested Row within Card Body --> */}\n                    <div className=\"p-5\">\n                        <div className=\"text-center\">\n                            <h1 className=\"h4 text-gray-900 mb-4\">책검색</h1>\n                        </div>\n                        <form className=\"user\">\n                            <div className=\"form-group\">\n                                <input type=\"text\" className=\"form-control form-control-user\" id=\"exampleInputEmail\" placeholder=\"검색어를 입력해 주세요.\"\n                                    onChange={ e => handleBookSearchInputCange(e.target.value) }\n                                    value={bookSearchString}\n                                    onKeyPress={e => onEnter(e)}\n                                />\n                            </div>\n                            <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\"\n                                onClick={(e: MouseEvent) => handleBookSearchButtonClick(e)}\n                            >검색</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default BookCreateForm;","import React from 'react';\nimport * as Interfaces from 'modules/Interfaces';\nimport {LoadingSpinner} from 'components/elements';\n\ninterface initialProps {\n    isloading: Interfaces.baseSagaStateType;\n    items: Interfaces.defaultListItem[] | undefined;\n    handleUserInfoLink: ( user_uuid: string) => void;\n    handleUserInfoPageLink: ( user_uuid: string) => void;\n    handleUserActiveUpdateLink: ( user_uuid: string, active: 'Y' | 'N') => void;\n    handleUserActiveDeleteLink: ( user_uuid: string) => void;\n}\n\nfunction DefaultUserListTable({ isloading, items, handleUserInfoLink, handleUserInfoPageLink, handleUserActiveUpdateLink, handleUserActiveDeleteLink } : initialProps) {\n    return (\n        <>\n            {/* <!-- Begin table --> */}\n            {/* <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\"> */}\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th>이메일</th>\n                        <th>이름</th>\n                        <th>가입형태</th>\n                        <th>상태</th>\n                        <th>등급</th>\n                        <th>올린책</th>\n                        <th>활동수</th>\n                        <th>가입일</th>\n                        <th>중지</th>\n                        <th>탈퇴</th>\n                    </tr>\n                </thead>\n                <tfoot>\n                    <tr>\n                        <th>이메일</th>\n                        <th>이름</th>\n                        <th>가입형태</th>\n                        <th>상태</th>\n                        <th>등급</th>\n                        <th>올린책</th>\n                        <th>활동수</th>\n                        <th>가입일</th>\n                        <th>중지</th>\n                        <th>탈퇴</th>\n                    </tr>\n                </tfoot>\n                {isloading === 'loading'\n                    ?\n                    <tbody><tr><td colSpan={10}><div style={{ height: '10vh', display: 'flex', justifyContent: 'center', alignItems: 'center',}}><LoadingSpinner /></div></td></tr></tbody>\n                    :\n                    <tbody>\n                    {\n                    items && items.map((item: Interfaces.defaultListItem, i:number) =>\n                        <tr key={i}>\n                            <td>{item.email}&nbsp;<span className=\"badge badge-pill badge-primary\" onClick={() => handleUserInfoLink(item.uuid)}>정보</span>&nbsp;<span className=\"badge badge-pill badge-primary\" onClick={() => handleUserInfoPageLink(item.uuid)}>수정</span></td>\n                            <td>{item.name}</td>\n                            <td>{item.type.code_name}</td>\n                            <td>{item.state.code_name}</td>\n                            <td>{item.level.code_name}</td>\n                            <td>{item.read_book_count}</td>\n                            <td>{item.activity_count}</td>\n                            <td>{item.created_at_atring}</td>\n                            {\n                                (function(){\n                                    switch(item.active) {\n                                        case 'Y' :\n                                            return <td><button type=\"button\" className=\"btn btn-primary\" onClick={() => handleUserActiveUpdateLink(item.uuid, 'N')}>중지</button></td>\n                                        case 'N' :\n                                            return <td><button type=\"button\" className=\"btn btn-danger\" onClick={() => handleUserActiveUpdateLink(item.uuid, 'Y')}>활성</button></td>\n                                    }\n                                })()\n                            }\n                            <td><button type=\"button\" className=\"btn btn-danger\" onClick={() => handleUserActiveDeleteLink(item.uuid)}>탈퇴</button></td>\n                        </tr>\n                    )\n                    }\n                    </tbody>\n                }\n            </table>\n        </>\n    );\n}\n\nexport default DefaultUserListTable;","import React from 'react';\nimport * as Interfaces from 'modules/Interfaces';\nimport {LoadingSpinner} from 'components/elements';\n\ninterface initialProps {\n    isloading: Interfaces.baseSagaStateType;\n    items: Interfaces.searchBookInfoInterface[];\n    handleClickBookCreate: ( book_key: number ) => void;\n}\n\nfunction DefaultSearchListTable({isloading, items, handleClickBookCreate}: initialProps) {\n    return (\n        <>\n            {/* <!-- Begin table --> */}\n            {/* <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\"> */}\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th>thumbnail</th>\n                        <th>title</th>\n                        <th>status</th>\n                        <th>isbn</th>\n                        <th>contents</th>\n                        <th>authors</th>\n                    </tr>\n                </thead>\n                <tfoot>\n                    <tr>\n                        <th>thumbnail</th>\n                        <th>title</th>\n                        <th>status</th>\n                        <th>isbn</th>\n                        <th>contents</th>\n                        <th>authors</th>\n                    </tr>\n                </tfoot>\n                {isloading === 'loading'\n                    ?\n                    <tbody><tr><td colSpan={10}><div style={{ height: '10vh', display: 'flex', justifyContent: 'center', alignItems: 'center',}}><LoadingSpinner /></div></td></tr></tbody>\n                    :\n                    <tbody>\n                    {\n                        items && items.map((item: Interfaces.searchBookInfoInterface, i:number) =>\n                            <tr key={i}>\n                                <td><img src={item.thumbnail} alt=\"thumbnail\" onClick={() => handleClickBookCreate(i)}/></td>\n                                <td>{item.title}</td>\n                                <td>{item.status}</td>\n                                <td>{item.isbn}</td>\n                                <td>{item.contents}</td>\n                                <td>{item.authors}</td>\n                            </tr>\n                        )\n                    }\n                    </tbody>\n                }\n            </table>\n        </>\n    );\n}\n\nexport default DefaultSearchListTable;","import React from 'react';\nimport * as Interfaces from 'modules/Interfaces';\nimport {LoadingSpinner} from 'components/elements';\n\ninterface initialProps {\n    isloading: Interfaces.baseSagaStateType;\n    items: Interfaces.bookListItem[];\n    handleClickRecommendAddButton: (book_id: number) => void;\n    handleClickRecommendDeleteButton: (book_id: number) => void;\n}\n\nfunction BooksListTable({ isloading, items, handleClickRecommendAddButton, handleClickRecommendDeleteButton }: initialProps) {\n    return (\n        <>\n            {/* <!-- Begin table --> */}\n            {/* <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\"> */}\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th>추천등록</th>\n                        <th>thumbnail</th>\n                        <th>title</th>\n                        <th>올린이사람</th>\n                        <th>isbn</th>\n                        <th>contents</th>\n                        <th>authors</th>\n                    </tr>\n                </thead>\n                <tfoot>\n                    <tr>\n                        <th>추천등록</th>\n                        <th>thumbnail</th>\n                        <th>title</th>\n                        <th>status</th>\n                        <th>isbn</th>\n                        <th>contents</th>\n                        <th>authors</th>\n                    </tr>\n                </tfoot>\n                {isloading === 'loading'\n                    ?\n                    <tbody><tr><td colSpan={10}><div style={{ height: '10vh', display: 'flex', justifyContent: 'center', alignItems: 'center',}}><LoadingSpinner /></div></td></tr></tbody>\n                    :\n                    <tbody>\n                    {\n                        items && items.map((item: Interfaces.bookListItem, i:number) =>\n                        <tr key={i}>\n                            {/* <td><button type=\"button\" className=\"btn btn-primary\" onClick={() => handleClickRecommendAddButton(item.id)}>등록</button></td> */}\n                            {\n                                (function(){\n                                    switch(item.recommend) {\n                                        case true :\n                                            return <td><button type=\"button\" className=\"btn btn-danger\" onClick={() => handleClickRecommendDeleteButton(item.id)}>삭제</button></td>\n                                        case false :\n                                            return <td><button type=\"button\" className=\"btn btn-primary\" onClick={() => handleClickRecommendAddButton(item.id)}>등록</button></td>\n                                    }\n                                })()\n                            }\n                            <td>{item.thumbnail && <img src={item.thumbnail} alt=\"thumbnail\" />}</td>\n                            <td>{item.title}</td>\n                            <td>{item.user_name}</td>\n                            <td>{item.isbn}</td>\n                            <td>{item.contents}</td>\n                            <td>{item.authors}</td>\n                        </tr>\n                    )\n                    }\n                    </tbody>\n                }\n            </table>\n        </>\n    );\n}\n\nexport default BooksListTable;","import React from 'react';\nimport * as Interfaces from 'modules/Interfaces';\nimport {LoadingSpinner} from 'components/elements';\n\ninterface initialProps {\n    isloading: Interfaces.baseSagaStateType;\n    items: Interfaces.RecommendbookListItem[];\n    handleClickDeleteButton: ( book_id: number ) => void;\n}\n\nfunction RecommendBooksListTable({ isloading,items, handleClickDeleteButton }: initialProps) {\n    return (\n        <>\n            {/* <!-- Begin table --> */}\n            {/* <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\"> */}\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th>thumbnail</th>\n                        <th>title</th>\n                        <th>올린이사람</th>\n                        <th>contents</th>\n                        <th>삭제</th>\n                    </tr>\n                </thead>\n                <tfoot>\n                    <tr>\n                        <th>thumbnail</th>\n                        <th>title</th>\n                        <th>status</th>\n                        <th>contents</th>\n                        <th>삭제</th>\n                    </tr>\n                </tfoot>\n\n                {isloading === 'loading'\n                    ?\n                    <tbody><tr><td colSpan={10}><div style={{ height: '10vh', display: 'flex', justifyContent: 'center', alignItems: 'center',}}><LoadingSpinner /></div></td></tr></tbody>\n                    :\n                    <tbody>\n                    {\n                        items && items.map((item: Interfaces.RecommendbookListItem, i:number) =>\n                            <tr key={i}>\n                                <td>{item.book_thumbnail && <img src={item.book_thumbnail} alt=\"thumbnail\" />}</td>\n                                <td>{item.book_title}</td>\n                                <td>{item.book_user_name}</td>\n                                <td>{item.book_contents}</td>\n                                <td><button type=\"button\" className=\"btn btn-danger\" onClick={() => handleClickDeleteButton(item.book_id)}>삭제</button></td>\n                            </tr>\n                        )\n                    }\n                    </tbody>\n                }\n            </table>\n        </>\n    );\n}\n\nexport default RecommendBooksListTable;","import React from 'react';\nimport * as Interfaces from 'modules/Interfaces';\nimport {LoadingSpinner} from 'components/elements';\n\ninterface initialProps {\n    isloading: Interfaces.baseSagaStateType;\n    items: Interfaces.activityListItem[];\n    handleClickActivityDeleteButton: ( list_uid: string ) => void;\n}\n\nfunction BooksActivityListTable({isloading, items, handleClickActivityDeleteButton}: initialProps) {\n    return (\n        <>\n            {/* <!-- Begin table --> */}\n            {/* <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\"> */}\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th>thumbnail</th>\n                        <th>책 제목</th>\n                        <th>올린이사람</th>\n                        <th>구분</th>\n                        <th>내용</th>\n                        <th>날짜</th>\n                        <th>삭제</th>\n                    </tr>\n                </thead>\n                <tfoot>\n                    <tr>\n                        <th>thumbnail</th>\n                        <th>책 제목</th>\n                        <th>올린이사람</th>\n                        <th>구분</th>\n                        <th>내용</th>\n                        <th>날짜</th>\n                        <th>삭제</th>\n                    </tr>\n                </tfoot>\n\n                {isloading === 'loading'\n                    ?\n                    <tbody><tr><td colSpan={10}><div style={{ height: '10vh', display: 'flex', justifyContent: 'center', alignItems: 'center',}}><LoadingSpinner /></div></td></tr></tbody>\n                    :\n                    <tbody>\n                    {\n                        items && items.map((item: Interfaces.activityListItem, i:number) =>\n                            <tr key={i}>\n                                <td><img src={item.book_thumbnail} alt=\"thumbnail\"/></td>\n                                <td>{item.book_title}</td>\n                                <td>{item.user_name}</td>\n                                <td>{item.gubun_name}</td>\n                                <td>{item.contents}</td>\n                                <td>{item.created_at_string}</td>\n                                <td><button type=\"button\" className=\"btn btn-danger\" onClick={() => handleClickActivityDeleteButton(item.list_uid)}>삭제</button></td>\n                            </tr>\n                        )\n                    }\n                    </tbody>\n                }\n            </table>\n        </>\n    );\n}\n\nexport default BooksActivityListTable;","import React from 'react';\nimport * as Interfaces from 'modules/Interfaces';\n\ninterface initialProps {\n    userInfoData: Interfaces.userDetailData | undefined\n}\n\nfunction UserInfoTable({userInfoData} : initialProps) {\n    return (\n        <>\n            {/* <!-- DataTales Example --> */}\n            <div className=\"card shadow mb-4\">\n                <div className=\"card-header py-3\">\n                    <h6 className=\"m-0 font-weight-bold text-primary\">사용자 정보</h6>\n                </div>\n                <div className=\"card-body\">\n                    <div className=\"table-responsive\">\n                        {/* <!-- Begin table --> */}\n                        {/* <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\"> */}\n                        <table className=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>구분</th>\n                                <th>정보</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>user_uuid</td>\n                                <td>{userInfoData && userInfoData.user_uuid}</td>\n                            </tr>\n                            <tr>\n                                <td>이름</td>\n                                <td>{userInfoData && userInfoData.user_name}</td>\n                            </tr>\n                            <tr>\n                                <td>이메일</td>\n                                <td>{userInfoData && userInfoData.user_email}</td>\n                            </tr>\n                            <tr>\n                                <td>가입경로</td>\n                                <td>{userInfoData && userInfoData.user_type}</td>\n                            </tr>\n                            <tr>\n                                <td>사용자 상태</td>\n                                <td>{userInfoData && userInfoData.user_state}</td>\n                            </tr>\n                            <tr>\n                                <td>사용자 레벨</td>\n                                <td>{userInfoData && userInfoData.user_level}</td>\n                            </tr>\n                            <tr>\n                                <td>활동 공개 여부</td>\n                                <td>{userInfoData && userInfoData.user_activity_state}</td>\n                            </tr>\n                            <tr>\n                                <td>독서 활동 등록수</td>\n                                <td>{userInfoData && userInfoData.activity_count}</td>\n                            </tr>\n                            <tr>\n                                <td>읽은 책수</td>\n                                <td>{userInfoData && userInfoData.read_book_count}</td>\n                            </tr>\n                            <tr>\n                                <td>업로드 책 수</td>\n                                <td>{userInfoData && userInfoData.upload_book_count}</td>\n                            </tr>\n                            <tr>\n                                <td>가입일</td>\n                                <td>{userInfoData && userInfoData.created_at_string}</td>\n                            </tr>\n                            <tr>\n                                <td>수정일</td>\n                                <td>{userInfoData && userInfoData.updated_at_string}</td>\n                            </tr>\n                            <tr>\n                                <td>이메일 인증일</td>\n                                <td>{userInfoData && userInfoData.email_verified_at_string}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                        {/* <!-- End of table --> */}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default UserInfoTable;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Sidebar() {\n    return (\n        <>\n            {/* <!-- Sidebar --> */}\n            <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n\n                {/* <!-- Sidebar - Brand --> */}\n                <Link to=\"/\" className=\"sidebar-brand d-flex align-items-center justify-content-center\">\n                    <div className=\"sidebar-brand-icon rotate-n-15\">\n                        <i className=\"fas fa-laugh-wink\"></i>\n                    </div>\n                    <div className=\"sidebar-brand-text mx-10\">JooJang Admin<sup>v1</sup></div>\n                </Link>\n\n                {/* <!-- Divider --> */}\n                <hr className=\"sidebar-divider my-0\"></hr>\n\n                {/* <!-- Nav Item - Dashboard --> */}\n                <li className=\"nav-item\">\n                    <Link to=\"/\" className=\"nav-link\" ><i className=\"fas fa-fw fa-tachometer-alt\"></i><span>Dashboard</span></Link>\n                </li>\n\n                {/* <!-- Divider --> */}\n                <hr className=\"sidebar-divider\"></hr>\n\n                {/* <!-- Heading --> */}\n                <div className=\"sidebar-heading\">회원</div>\n\n                {/* <!-- Nav Item - Pages Collapse Menu --> */}\n                <li className=\"nav-item\">\n                    <Link to=\"/joojang.front.admin/users/1\" className=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\"><i className=\"fas fa-fw fa-cog\"></i><span>회원 리스트</span></Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/joojang.front.admin/books/activity/C11110/1\" className=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\"><i className=\"fas fa-fw fa-cog\"></i><span>독서 활동 리스트</span></Link>\n                </li>\n\n                {/* <!-- Divider --> */}\n                <hr className=\"sidebar-divider\"></hr>\n\n                {/* <!-- Heading --> */}\n                <div className=\"sidebar-heading\"> 책 </div>\n                <li className=\"nav-item\">\n                    <Link to=\"/joojang.front.admin/books/recommend/B11000/1\" className=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\"><i className=\"fas fa-fw fa-cog\"></i><span>추천 도서</span></Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/joojang.front.admin/book/create\" className=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\"><i className=\"fas fa-fw fa-cog\"></i><span>책 등록</span></Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/joojang.front.admin/books/1\" className=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\"><i className=\"fas fa-fw fa-cog\"></i><span>책 리스트</span></Link>\n                </li>\n\n                {/* <!-- Divider --> */}\n                <hr className=\"sidebar-divider d-none d-md-block\"></hr>\n\n            </ul>\n            {/* <!-- End of Sidebar --> */}\n        </>\n    );\n}\n\nexport default Sidebar;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    // TopbarSearch,\n    // TopbarAlerts,\n    // TopbarMessages,\n    TopbarInformation,\n} from 'components/elements';\nfunction Topbar() {\n    return (\n        <>\n            {/* <!-- Topbar --> */}\n            <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n\n                {/* <!-- Sidebar Toggle (Topbar) --> */}\n                <button id=\"sidebarToggleTop\" className=\"btn btn-link d-md-none rounded-circle mr-3\">\n                    <i className=\"fa fa-bars\"></i>\n                </button>\n\n                {/* <!-- Topbar Search --> */}\n                {/* <TopbarSearch/> */}\n\n                {/* <!-- Topbar Navbar --> */}\n                <ul className=\"navbar-nav ml-auto\">\n\n                    {/* <!-- Nav Item - Search Dropdown (Visible Only XS) --> */}\n                    <li className=\"nav-item dropdown no-arrow d-sm-none\">\n                        <Link to=\"/\" className=\"nav-link dropdown-toggle\" id=\"searchDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i className=\"fas fa-search fa-fw\"></i> </Link>\n                        {/* <!-- Dropdown - Messages --> */}\n                        <div className=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\" aria-labelledby=\"searchDropdown\">\n                            <form className=\"form-inline mr-auto w-100 navbar-search\">\n                                <div className=\"input-group\">\n                                    <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\"/>>\n                                    <div className=\"input-group-append\">\n                                        <button className=\"btn btn-primary\" type=\"button\">\n                                            <i className=\"fas fa-search fa-sm\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </li>\n\n                    {/* <!-- Nav Item - Alerts --> */}\n                    {/* <TopbarAlerts/> */}\n\n                    {/* <!-- Nav Item - Messages --> */}\n                    {/* <TopbarMessages/> */}\n\n                    <div className=\"topbar-divider d-none d-sm-block\"></div>\n\n                    {/* <!-- Nav Item - User Information --> */}\n                    <TopbarInformation/>\n\n                </ul>\n\n            </nav>\n            {/* <!-- End of Topbar --> */}\n        </>\n    );\n}\n\nexport default Topbar;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <>\n            {/* <!-- Footer --> */}\n            <footer className=\"sticky-footer bg-white\">\n                <div className=\"container my-auto\">\n                    <div className=\"copyright text-center my-auto\">\n                        <span>Copyright &copy; JooJang Help 2020</span>\n                    </div>\n                </div>\n            </footer>\n            {/* <!-- End of Footer --> */}\n        </>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction TopbarMessages() {\n    return (\n        <>\n        <li className=\"nav-item dropdown no-arrow mx-1\">\n                        <Link to=\"/\" className=\"nav-link dropdown-toggle\" id=\"messagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <i className=\"fas fa-envelope fa-fw\"></i>\n                            {/* <!-- Counter - Messages --> */}\n                            <span className=\"badge badge-danger badge-counter\">7</span>\n                        </Link>\n                        {/* <!-- Dropdown - Messages --> */}\n                        <div className=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"messagesDropdown\">\n                            <h6 className=\"dropdown-header\"> Message Center </h6>\n                            <Link to=\"/\" className=\"dropdown-item d-flex align-items-center\" href=\"{null}\">\n                                <div className=\"dropdown-list-image mr-3\">\n                                    <img className=\"rounded-circle\" src=\"https://source.unsplash.com/fn_BT9fwg_E/60x60\" alt=\"\"/>\n                                    <div className=\"status-indicator bg-success\"></div>\n                                </div>\n                                <div className=\"font-weight-bold\">\n                                    <div className=\"text-truncate\">Hi there! I am wondering if you can help me with a problem I've been having.</div>\n                                    <div className=\"small text-gray-500\">Emily Fowler · 58m</div>\n                                </div>\n                            </Link>\n                            <Link to=\"/\" className=\"dropdown-item d-flex align-items-center\" href=\"{null}\">\n                                <div className=\"dropdown-list-image mr-3\">\n                                    <img className=\"rounded-circle\" src=\"https://source.unsplash.com/AU4VPcFN4LE/60x60\" alt=\"\"/>>\n                                    <div className=\"status-indicator\"></div>\n                                </div>\n                                <div>\n                                    <div className=\"text-truncate\">I have the photos that you ordered last month, how would you like them sent to you?</div>\n                                    <div className=\"small text-gray-500\">Jae Chun · 1d</div>\n                                </div>\n                            </Link>\n                            <Link to=\"/\" className=\"dropdown-item d-flex align-items-center\" href=\"{null}\">\n                                <div className=\"dropdown-list-image mr-3\">\n                                    <img className=\"rounded-circle\" src=\"https://source.unsplash.com/CS2uCrpNzJY/60x60\" alt=\"\"/>\n                                    <div className=\"status-indicator bg-warning\"></div>\n                                </div>\n                                <div>\n                                    <div className=\"text-truncate\">Last month's report looks great, I am very happy with the progress so far, keep up the good work!</div>\n                                    <div className=\"small text-gray-500\">Morgan Alvarez · 2d</div>\n                                </div>\n                            </Link>\n                            <Link to=\"/\" className=\"dropdown-item d-flex align-items-center\" href=\"{null}\">\n                                <div className=\"dropdown-list-image mr-3\">\n                                    <img className=\"rounded-circle\" src=\"https://source.unsplash.com/Mv9hjnEUHR4/60x60\" alt=\"\"/>\n                                    <div className=\"status-indicator bg-success\"></div>\n                                </div>\n                                <div>\n                                    <div className=\"text-truncate\">Am I a good boy? The reason I ask is because someone told me that people say this to all dogs, even if they aren't good...</div>\n                                    <div className=\"small text-gray-500\">Chicken the Dog · 2w</div>\n                                </div>\n                            </Link>\n                            <Link to=\"/\" className=\"dropdown-item text-center small text-gray-500\" href=\"{null}\">Read More Messages</Link>\n                        </div>\n                    </li>\n        </>\n    );\n}\n\nexport default TopbarMessages;","import React from 'react';\nimport * as Helper from 'lib/Helper';\nimport GlobalAlert from 'lib/GlobalAlert';\n\nfunction TopbarInformation() {\n\n    const handleLogOutClick = () => {\n        Helper.removeLoginInfo();\n        GlobalAlert.thenLocationReload({\n            text: '로그아웃 되었습니다.'\n        });\n    }\n\n    return (\n        <>\n            <li className=\"nav-item dropdown no-arrow\">\n\n                <button type=\"button\" className=\"btn btn-primary btn-sm btn-block\" onClick={() => handleLogOutClick()}>로그아웃</button>\n                {/* <Link to=\"/\" className=\"nav-link dropdown-toggle\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\" onClick={() => handleLogOutClick}>로그아웃</span>\n                    <img className=\"img-profile rounded-circle\" src=\"https://source.unsplash.com/QAB-WJcbgJk/60x60\" alt=\"\"/>\n                </Link> */}\n                {/* <!-- Dropdown - User Information --> */}\n                {/* <div className=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"userDropdown\">\n                    <Link to=\"/\" className=\"dropdown-item\" href=\"{null}\"> <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"></i> Profile </Link>\n                    <Link to=\"/\" className=\"dropdown-item\" href=\"{null}\"> <i className=\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\"></i> Settings </Link>\n                    <Link to=\"/\" className=\"dropdown-item\" href=\"{null}\"> <i className=\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\"></i> Activity Log </Link>\n                    <div className=\"dropdown-divider\"></div>\n                    <Link to=\"/\" className=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#logoutModal\"> <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i> Logout </Link>\n                </div> */}\n            </li>\n        </>\n    );\n}\n\nexport default TopbarInformation;","import React from 'react';\nimport ReactPaginate from 'react-paginate';\nimport {defaultPaginationData} from 'modules/Interfaces';\n\ninterface initialProps  {\n    handlePaginate: (e: any) => void;\n    listpagedata: defaultPaginationData\n};\n\nfunction Pagination({\n    handlePaginate,\n    listpagedata\n } : initialProps) {\n\n    // return (\n    //     <>\n    //         <div className=\"col-sm-12 col-md-7\">\n    //             <div className=\"dataTables_paginate paging_simple_numbers\">\n    //                 <ul className=\"pagination\">\n    //                     <li className=\"paginate_button page-item previous disabled\"><a href=\"#\" className=\"page-link\">Previous</a></li>\n    //                     <li className=\"paginate_button page-item active\"><a href=\"#\" className=\"page-link\">1</a></li>\n    //                     <li className=\"paginate_button page-item \"><a href=\"#\" className=\"page-link\">2</a></li>\n    //                     <li className=\"paginate_button page-item \"><a href=\"#\" className=\"page-link\">3</a></li>\n    //                     <li className=\"paginate_button page-item \"><a href=\"#\" className=\"page-link\">4</a></li>\n    //                     <li className=\"paginate_button page-item \"><a href=\"#\" className=\"page-link\">5</a></li>\n    //                     <li className=\"paginate_button page-item \"><a href=\"#\" className=\"page-link\">6</a></li>\n    //                     <li className=\"paginate_button page-item next\" id=\"dataTable_next\"><a href=\"#\" className=\"page-link\">Next</a></li>\n    //                 </ul>\n    //             </div>\n    //         </div>\n    //     </>\n    // );\n\n    return (\n        <>\n            <div className=\"col-sm-12 col-md-7\">\n                <div className=\"dataTables_paginate paging_simple_numbers\">\n                        <ReactPaginate\n                                previousLabel={'<'}\n                                nextLabel={'>'}\n                                breakLabel={'...'}\n                                pageCount={Number(listpagedata.next_page)}\n                                marginPagesDisplayed={2}\n                                pageRangeDisplayed={5}\n                                onPageChange={handlePaginate}\n                                breakClassName={'page-item'}\n                                breakLinkClassName={'page-link'}\n                                containerClassName={'pagination'}\n                                pageClassName={'page-item'}\n                                pageLinkClassName={'page-link'}\n                                previousClassName={'page-item'}\n                                previousLinkClassName={'page-link'}\n                                nextClassName={'page-item'}\n                                nextLinkClassName={'page-link'}\n                                activeClassName={'active'}\n                            />\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Pagination;","import React from 'react';\n\nimport {\n    Sidebar,\n    Topbar,\n    Footer\n} from 'components/elements';\n\nfunction ListSkeletonComponent(props: any) {\n    return (\n        <>\n            <div id=\"wrapper\">\n\n                <Sidebar />\n\n                {/* <!-- Content Wrapper --> */}\n                <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n\n                    {/* <!-- Main Content --> */}\n                    <div id=\"content\">\n\n                        <Topbar />\n\n                        {/* <!-- Begin Page Content --> */}\n                        <div className=\"container-fluid\">\n\n                            {/* <!-- Page Heading --> */}\n                            <h1 className=\"h3 mb-2 text-gray-800\">회원</h1>\n                            <p className=\"mb-4\"></p>\n\n                            <div className=\"card shadow mb-4\">\n                                <div className=\"card-header py-3\">\n                                    <h6 className=\"m-0 font-weight-bold text-primary\">회원 리스트</h6>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"table-responsive\">\n                                        {props.ListTable}\n                                    </div>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        {props.Pagination}\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                        {/* <!-- /.container-fluid --> */}\n\n                    </div>\n                    {/* <!-- End of Main Content --> */}\n\n                    <Footer/>\n\n                </div>\n                {/* <!-- End of Content Wrapper --> */}\n\n            </div>\n            {/* <!-- End of Page Wrapper --> */}\n        </>\n    );\n}\n\nexport default ListSkeletonComponent;","import React from 'react';\n\nimport {\n    Sidebar,\n    Topbar,\n    Footer\n} from 'components/elements';\n\nfunction InfoSkeletonComponent(props: any) {\n    return (\n        <>\n            <div id=\"wrapper\">\n\n                <Sidebar />\n\n                {/* <!-- Content Wrapper --> */}\n                <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n\n                    {/* <!-- Main Content --> */}\n                    <div id=\"content\">\n\n                        <Topbar />\n\n                        {/* <!-- Begin Page Content --> */}\n                        <div className=\"container-fluid\">\n\n                            {/* <!-- Page Heading --> */}\n                            <h1 className=\"h3 mb-2 text-gray-800\">정보</h1>\n                            <p className=\"mb-4\"></p>\n\n                            <div className=\"card shadow mb-4\">\n                                <div className=\"card-body\">\n                                    <div className=\"table-responsive\">\n                                        {props.InfoTable}\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                        {/* <!-- /.container-fluid --> */}\n\n                    </div>\n                    {/* <!-- End of Main Content --> */}\n\n                    <Footer/>\n\n                </div>\n                {/* <!-- End of Content Wrapper --> */}\n\n            </div>\n            {/* <!-- End of Page Wrapper --> */}\n        </>\n    );\n}\n\nexport default InfoSkeletonComponent;","import React from 'react';\n\nimport {\n    Sidebar,\n    Topbar,\n    Footer\n} from 'components/elements';\n\nfunction SearchSkeletonComponent(props: any) {\n    return (\n        <>\n            <div id=\"wrapper\">\n\n                <Sidebar />\n\n                {/* <!-- Content Wrapper --> */}\n                <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n\n                    {/* <!-- Main Content --> */}\n                    <div id=\"content\">\n\n                        <Topbar />\n\n                        {/* <!-- Begin Page Content --> */}\n                        <div className=\"container-fluid\">\n\n                            {/* <!-- Page Heading --> */}\n                            <h1 className=\"h3 mb-2 text-gray-800\">회원</h1>\n                            <p className=\"mb-4\"></p>\n\n                            <div className=\"card shadow mb-4\">\n                                <div className=\"card-header py-3\">\n                                    <h6 className=\"m-0 font-weight-bold text-primary\">회원 리스트</h6>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"table-responsive\">\n                                        {props.SearchTable}\n                                    </div>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        {props.ListTable}\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                        {/* <!-- /.container-fluid --> */}\n\n                    </div>\n                    {/* <!-- End of Main Content --> */}\n\n                    <Footer/>\n\n                </div>\n                {/* <!-- End of Content Wrapper --> */}\n\n            </div>\n            {/* <!-- End of Page Wrapper --> */}\n        </>\n    );\n}\n\nexport default SearchSkeletonComponent;","import React, {useEffect} from 'react';\n\nimport { LoginForm } from 'components/elements';\nimport useLogin from 'hook/useLogin';\nimport GlobalAlert from 'lib/GlobalAlert';\nimport {\n    LoadingSpinner\n} from 'components/elements';\nimport * as Helper from 'lib/Helper';\nimport history from 'routes/History';\n\nfunction LoginPage() {\n    document.body.classList.add(\"bg-gradient-primary\");\n\n    const {\n        inputEmail,\n        inputPassword,\n        rememberme,\n        __handleChangeEmail,\n        __handleChangePassword,\n        __handleClickLoginLink,\n        __handleRememberMeCheckbox,\n        __handleEnterKeyPress,\n        loginState\n    } = useLogin();\n\n\n    useEffect(() => {\n\n        if(loginState.state === \"failure\" && loginState.message) {\n            GlobalAlert.error({\n                text: loginState.message\n            });\n        } else if(loginState.state === \"success\") {\n            GlobalAlert.thenHistoryPush({\n                text: '로그인이 완료 되었습니다.',\n                push_router: '/'\n            });\n        }\n\n    }, [loginState])\n\n    useEffect(() => {\n        if(Helper.getAccessToken()) {\n            history.push('/joojang.front.admin/');\n        }\n    });\n\n    return (\n        <>\n            <div className=\"container\">\n                {/* <!-- Outer Row --> */}\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-xl-10 col-lg-12 col-md-9\">\n                        <div className=\"card o-hidden border-0 shadow-lg my-5\">\n                            <div className=\"card-body p-0\">\n                                {/* <!-- Nested Row within Card Body --> */}\n                                <div className=\"row\">\n                                    <div className=\"col-lg-6 d-none d-lg-block bg-login-image\"></div>\n                                    <div className=\"col-lg-6\">\n                                        <div className=\"p-5\">\n                                            <div className=\"text-center\">\n                                                <h1 className=\"h4 text-gray-900 mb-4\">Welcome JoojangHelp Admin!</h1>\n                                            </div>\n                                            {loginState.state === \"loading\"\n                                                ? <LoadingSpinner/>\n                                                :<LoginForm\n                                                    inputEmail = {inputEmail}\n                                                    inputPassword = {inputPassword}\n                                                    handelRememberme = {rememberme}\n                                                    handleChangeEmail={ __handleChangeEmail }\n                                                    handleChangePassword = { __handleChangePassword }\n                                                    handleClickLoginLink = { __handleClickLoginLink }\n                                                    handleRememberMeCheckbox = { __handleRememberMeCheckbox }\n                                                    handleEnterKeyPress = { __handleEnterKeyPress }\n                                                />\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default LoginPage;","import { MouseEvent, ChangeEvent,  useState, useEffect, useMemo } from 'react';\nimport { loginRequest } from 'modules/Interfaces';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { attemptLoginAction, attemptLoginResetAction } from 'modules/redux/logins';\nimport { RootState } from 'modules/redux';\nimport { cookieManager, setLoginInfo } from 'lib/Helper';\n\nexport default function useLogin() {\n\n    const login_state = useSelector((state: RootState) => state.login_state);\n    const loginState = useMemo(() => login_state, [login_state]);\n\n    const dispatch = useDispatch();\n    const [ inputEmail, setInputEmail ] = useState('');\n    const [ inputPassword, setInputPassword ] = useState('');\n    const [ rememberme, setRememberme ] = useState(false);\n\n    const __handleChangeEmail = (email: string) => {\n        setInputEmail(email);\n    };\n\n    const __handleChangePassword = (password: string) => {\n        setInputPassword(password);\n    };\n\n    const __handleClickLoginLink = (e: MouseEvent) => {\n        e.preventDefault();\n        if(rememberme) {\n            cookieManager.set('rememberme', inputEmail);\n        }\n        const dataObject: loginRequest = {\n            email: inputEmail,\n            password: inputPassword\n        }\n        dispatch(attemptLoginAction(dataObject));\n    }\n\n    const __handleRememberMeCheckbox = (e: ChangeEvent<HTMLInputElement>) => {\n        if(e.target.checked) {\n            setRememberme(true);\n        } else {\n            setRememberme(false);\n            cookieManager.remove('rememberme');\n        }\n    }\n\n    const __handleEnterKeyPress = () => {\n        if(rememberme) {\n            cookieManager.set('rememberme', inputEmail);\n        }\n        const dataObject: loginRequest = {\n            email: inputEmail,\n            password: inputPassword\n        }\n        dispatch(attemptLoginAction(dataObject));\n    }\n\n\n    useEffect(() => {\n        if(cookieManager.get('rememberme')) {\n            __handleChangeEmail(cookieManager.get('rememberme'));\n            setRememberme(true);\n        }\n    }, [])\n\n    useEffect(() => {\n        if(loginState.state === 'success') {\n            new Promise(function(resolve, reject) {\n                setLoginInfo({\n                    token_type: loginState.data!.token_type!,\n                    expires_in: loginState.data!.expires_in!,\n                    access_token: loginState.data!.access_token!,\n                    refresh_token: loginState.data!.refresh_token!,\n                    user_name: loginState.data!.user_name!,\n                });\n                dispatch(attemptLoginResetAction());\n            }).then((e) => {\n                // console.debug(e);\n            });\n        }\n    })\n\n    return {\n        inputEmail,\n        inputPassword,\n        rememberme,\n        __handleChangeEmail,\n        __handleChangePassword,\n        __handleClickLoginLink,\n        __handleRememberMeCheckbox,\n        __handleEnterKeyPress,\n        loginState\n    };\n};\n\n","import React from 'react';\nimport {\n    ListSkeletonComponent,\n    DefaultUserListTable,\n    Pagination\n} from 'components/elements';\nimport useUserPage from 'hook/useUserPage';\n\nfunction UsersPage() {\n\n    const {\n        userListItems,\n        listPageData,\n        __handleClickUserInfoLink,\n        __handlePaginate,\n        __handleClickUserInfoPage,\n        __handleUserActiveUpdateLink,\n        __handleUserActiveDeleteLink,\n        isLoading,\n    } = useUserPage();\n\n    return (\n        <>\n            <ListSkeletonComponent\n                ListTable={\n                    <DefaultUserListTable\n                        isloading={isLoading}\n                        items={userListItems}\n                        handleUserInfoLink={__handleClickUserInfoLink}\n                        handleUserInfoPageLink={__handleClickUserInfoPage}\n                        handleUserActiveUpdateLink={__handleUserActiveUpdateLink}\n                        handleUserActiveDeleteLink={__handleUserActiveDeleteLink}\n                    />\n                }\n                Pagination={\n                    <Pagination\n                    handlePaginate={__handlePaginate}\n                    listpagedata={listPageData}\n                    />\n                }\n            />\n        </>\n    );\n}\n\nexport default UsersPage;","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'modules/redux';\nimport { attemptGetUserListAction, attemptUserActiveUpdateAction, attemptGetUserInfoResetAction } from 'modules/redux/pages';\nimport * as Interfaces from 'modules/Interfaces';\nimport history from 'routes/History';\nimport { useParams } from 'react-router-dom';\n\ninterface RouteParams {\n    page_number: string;\n}\n\nexport default function useUserPage() {\n\n    const params = useParams<RouteParams>();\n\n    const dispatch = useDispatch();\n    const state_user_list = useSelector((state: RootState) => state.pages_state.users.user_list);\n    const state_user_info = useSelector((state: RootState) => state.pages_state.users.user_info);\n    const state_user_active_update = useSelector((state: RootState) => state.pages_state.users.user_active_update);\n\n    const [userListItems, setUserListItems ] = useState<Interfaces.defaultListItem[]>();\n    const [userInfoData, setUserInfoData ] = useState<Interfaces.userDetailData>();\n    const [listPageData, setlistPageData ] = useState<Interfaces.defaultPaginationData>({\n        current_page: 0,\n        from: 0,\n        last_page: '',\n        per_page: 0,\n        prev_page_url: '',\n        to: 0,\n        total: 0,\n        first_page: '',\n        next_page: '',\n        prev_page: '',\n    });\n\n    const [isLoading, setIsLoading] = useState<Interfaces.baseSagaStateType>('idle');\n\n\n\n    const __handleClickUserInfoLink = (user_uuid : string) => {\n        // dispatch(attemptGetUserInfoAction({\n        //     user_uuid: user_uuid\n        // }));\n        history.push(`/joojang.front.admin/user/${user_uuid}/info`);\n    }\n\n    const __handleClickUserInfoPage = (user_uuid : string) => {\n       history.push(`/joojang.front.admin/user/${user_uuid}/detail`);\n    }\n\n    const __handlePaginate = (e: any) => {\n        const selected_page = e.selected + 1;\n        history.push(`/joojang.front.admin/users/${selected_page}`);\n    }\n\n    const __handleUserActiveUpdateLink = (user_uuid: string, active: 'Y' | 'N') => {\n        dispatch(attemptUserActiveUpdateAction({\n            user_uuid: user_uuid,\n            active: active\n        }));\n    }\n\n    const __handleClickUserInfoConfirmButton = async () => {\n        await dispatch(attemptGetUserInfoResetAction());\n    }\n\n    const __handleUserActiveDeleteLink = (user_uuid: string) => {\n        alert('어떻게 할것 인가?');\n    }\n\n    useEffect(() => {\n        if(state_user_list.state === 'success' && typeof state_user_list.list !== undefined && state_user_list.list) {\n            setUserListItems(state_user_list.list.items);\n            setlistPageData({\n                current_page: state_user_list.list.current_page,\n                from: state_user_list.list.from,\n                last_page: state_user_list.list.last_page,\n                per_page: state_user_list.list.per_page,\n                prev_page_url: state_user_list.list.prev_page_url,\n                to: state_user_list.list.to,\n                total: state_user_list.list.total,\n                first_page: state_user_list.list.first_page,\n                next_page: state_user_list.list.next_page,\n                prev_page: state_user_list.list.prev_page,\n            });\n        }\n\n        if(state_user_info.state === 'success' && typeof state_user_info.data !== undefined && state_user_info.data) {\n            setUserInfoData(state_user_info.data);\n        }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    },[state_user_list, state_user_info])\n\n    useEffect(() => {\n        dispatch(attemptGetUserListAction({\n            pageNumber: (params.page_number) ? params.page_number : '1'\n        }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, [params]);\n\n    useEffect(() => {\n    }, [listPageData]);\n\n    useEffect(() => {\n        if(state_user_active_update.state === \"success\") {\n            dispatch(attemptGetUserListAction({\n                pageNumber: (params.page_number) ? params.page_number : '1'\n            }));\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, [state_user_active_update]);\n\n\n    useEffect(() => {\n        async function loadingState() {\n            await setIsLoading('loading');\n        }\n\n        async function idleState() {\n            await setIsLoading('idle');\n        }\n\n\n        if(state_user_list.state === 'loading' || state_user_info.state === 'loading' || state_user_active_update.state === 'loading') {\n            loadingState()\n        } else {\n            idleState();\n        }\n\n    } ,[state_user_list.state, state_user_info.state, state_user_active_update.state])\n\n    useEffect(() => {\n        console.debug('mount?');\n        __handleClickUserInfoConfirmButton();\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, [])\n\n\n    return {\n        userListItems,\n        userInfoData,\n        listPageData,\n        isLoading,\n        __handleClickUserInfoLink,\n        __handlePaginate,\n        __handleClickUserInfoPage,\n        __handleUserActiveUpdateLink,\n        __handleUserActiveDeleteLink,\n        __handleClickUserInfoConfirmButton,\n    };\n};","import React from 'react';\nimport {\n    ListSkeletonComponent,\n    BooksListTable,\n    Pagination\n} from 'components/elements';\nimport useBooksList from 'hook/useBooksList';\n\nfunction BooksListPage() {\n\n    const {\n        booksListItems,\n        __handlePaginate,\n        __handleClickRecommendAddButton,\n        __handleClickRecommendDeleteButton,\n        listPageData,\n        isLoading,\n    } = useBooksList();\n\n    return (\n        <>\n            <ListSkeletonComponent\n                ListTable={\n                    <BooksListTable\n                        isloading={isLoading}\n                        items={booksListItems}\n                        handleClickRecommendAddButton={__handleClickRecommendAddButton}\n                        handleClickRecommendDeleteButton={__handleClickRecommendDeleteButton}\n                    />\n                }\n                Pagination={\n                    <Pagination\n                        handlePaginate={__handlePaginate}\n                        listpagedata={listPageData}\n                    />\n                }\n            />\n        </>\n    );\n}\n\nexport default BooksListPage;","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'modules/redux';\nimport {attemptGetBooksListAction, attemptAddRecommendBookAction, attemptDeleteRecommendBookAction} from 'modules/redux/pages';\nimport * as Interfaces from 'modules/Interfaces';\nimport { useParams } from 'react-router-dom';\nimport Swal from 'sweetalert2';\n\ninterface RouteParams {\n    page_number: string;\n}\n\nexport default function useBooksList() {\n\n    const params = useParams<RouteParams>();\n    const dispatch = useDispatch();\n\n    const state_book_list = useSelector((state: RootState) => state.pages_state.books.book_list);\n    const state_add_recommend_book = useSelector((state: RootState) => state.pages_state.books.add_recommend_book);\n    const state_delete_recommend_book = useSelector((state: RootState) => state.pages_state.books.delete_recommend_book);\n\n    const state_sitedata = useSelector((state: RootState) => state.sitedata);\n    const [booksListItems, setBooksListItems ] = useState<Interfaces.bookListItem[]>([]);\n    const [listPageData, setlistPageData ] = useState<Interfaces.defaultPaginationData>({\n        current_page: 0,\n        from: 0,\n        last_page: '',\n        per_page: 0,\n        prev_page_url: '',\n        to: 0,\n        total: 0,\n        first_page: '',\n        next_page: '',\n        prev_page: '',\n    });\n\n    const [isLoading, setIsLoading] = useState<Interfaces.baseSagaStateType>('idle');\n\n    const __handlePaginate = () => {\n        console.debug('::: __handlePaginate :::');\n    }\n\n    const __handleClickRecommendAddButton = async (book_id: number) => {\n\n        const { value: gubun } = await Swal.fire({\n            title: '카테고리 선택',\n            input: 'select',\n            inputOptions: (function(){\n                return state_sitedata.code_list['B11'].map((code:any) => `${code.code_name}`);\n            })(),\n            inputPlaceholder: '카테고리',\n            showCancelButton: true,\n            inputValidator: (value) => {\n                return new Promise((resolve) => {\n                    if (value) {\n                        resolve()\n                    } else {\n                        resolve('하나를 선택해 주세요 :)')\n                    }\n                })\n            }\n        })\n\n        if (gubun) {\n            const select_gubun = state_sitedata.code_list['B11'][gubun]['code_id'];\n            dispatch(attemptAddRecommendBookAction({\n                book_id: book_id,\n                gubun: select_gubun\n            }));\n        }\n    }\n\n    const __handleClickRecommendDeleteButton = (book_id: number) => {\n        dispatch(attemptDeleteRecommendBookAction({\n            book_id: book_id\n        }));\n    }\n\n    useEffect(() => {\n        dispatch(attemptGetBooksListAction({\n            pageNumber: (params.page_number) ? params.page_number : '1'\n        }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, []);\n\n    useEffect(() => {\n        if(state_book_list.state === 'success' && typeof state_book_list.list !== undefined && state_book_list.list) {\n            setBooksListItems(state_book_list.list.items);\n            setlistPageData({\n                current_page: state_book_list.list.current_page,\n                from: state_book_list.list.from,\n                last_page: state_book_list.list.last_page,\n                per_page: state_book_list.list.per_page,\n                prev_page_url: state_book_list.list.prev_page_url,\n                to: state_book_list.list.to,\n                total: state_book_list.list.total,\n                first_page: state_book_list.list.first_page,\n                next_page: state_book_list.list.next_page,\n                prev_page: state_book_list.list.prev_page,\n            });\n        }\n    }, [state_book_list])\n\n    useEffect(() => {\n        if(state_add_recommend_book.state === \"success\" || state_delete_recommend_book.state === \"success\") {\n            dispatch(attemptGetBooksListAction({\n                pageNumber: (params.page_number) ? params.page_number : '1'\n            }));\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, [state_add_recommend_book, state_delete_recommend_book])\n\n    useEffect(() => {\n        // console.debug(listPageData);\n    }, [listPageData]);\n\n    useEffect(() => {\n        async function loadingState() {\n            await setIsLoading('loading');\n        }\n\n        async function idleState() {\n            await setIsLoading('idle');\n        }\n\n        if(state_book_list.state === 'loading' || state_add_recommend_book.state === 'loading' || state_delete_recommend_book.state === 'loading') {\n            loadingState()\n        } else {\n            idleState();\n        }\n\n    } ,[state_book_list.state, state_add_recommend_book.state, state_delete_recommend_book.state])\n\n    return {\n        booksListItems,\n        __handlePaginate,\n        __handleClickRecommendAddButton,\n        __handleClickRecommendDeleteButton,\n        listPageData,\n        isLoading,\n    };\n};\n\n","import React from 'react';\nimport {\n    ListSkeletonComponent,\n    RecommendBooksListTable,\n    Pagination,\n} from 'components/elements';\nimport useRecommendBooksList from 'hook/useRecommendBooksList';\n\nfunction RecommendBooksListPage() {\n\n    const {\n        booksListItems,\n        __handlePaginate,\n        listPageData,\n        __handleClickDeleteButton,\n        isLoading,\n    } = useRecommendBooksList();\n\n    return (\n        <>\n            <ListSkeletonComponent\n\n                ListTable={\n                    <RecommendBooksListTable\n                        isloading={isLoading}\n                        items={booksListItems}\n                        handleClickDeleteButton={__handleClickDeleteButton}\n                    />\n                }\n                Pagination={\n                    <Pagination\n                        handlePaginate={__handlePaginate}\n                        listpagedata={listPageData}\n                    />\n                }\n            />\n        </>\n    );\n}\n\nexport default RecommendBooksListPage;","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'modules/redux';\nimport {attemptRecommendBookListAction, attemptDeleteRecommendBookAction } from 'modules/redux/pages';\nimport * as Interfaces from 'modules/Interfaces';\nimport { useParams } from 'react-router-dom';\n\ninterface RouteParams {\n    page_number: string;\n    gubun: string;\n}\n\nexport default function useRecommendBooksList() {\n\n    const params = useParams<RouteParams>();\n    const dispatch = useDispatch();\n\n    const state_book_list = useSelector((state: RootState) => state.pages_state.books.recommend_book_list);\n    const state_delete_recommend_book = useSelector((state: RootState) => state.pages_state.books.delete_recommend_book);\n    const [booksListItems, setBooksListItems ] = useState<Interfaces.RecommendbookListItem[]>([]);\n    const [listPageData, setlistPageData ] = useState<Interfaces.defaultPaginationData>({\n        current_page: 0,\n        from: 0,\n        last_page: '',\n        per_page: 0,\n        prev_page_url: '',\n        to: 0,\n        total: 0,\n        first_page: '',\n        next_page: '',\n        prev_page: '',\n    });\n\n    const [isLoading, setIsLoading] = useState<Interfaces.baseSagaStateType>('idle');\n\n    const __handlePaginate = () => {\n        console.debug('__handlePaginate');\n    }\n\n    const __handleClickDeleteButton = (book_id: number) => {\n        dispatch(attemptDeleteRecommendBookAction({\n            book_id: book_id\n        }));\n    }\n\n    useEffect(() => {\n        dispatch(attemptRecommendBookListAction({\n            pageNumber: (params.page_number) ? params.page_number : '1',\n            gubun: (params.gubun) ? params.gubun : 'B11000'\n        }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, []);\n\n    useEffect(() => {\n        if(state_book_list.state === 'success' && typeof state_book_list.list !== undefined && state_book_list.list) {\n            setBooksListItems(state_book_list.list.items);\n            setlistPageData({\n                current_page: state_book_list.list.current_page,\n                from: state_book_list.list.from,\n                last_page: state_book_list.list.last_page,\n                per_page: state_book_list.list.per_page,\n                prev_page_url: state_book_list.list.prev_page_url,\n                to: state_book_list.list.to,\n                total: state_book_list.list.total,\n                first_page: state_book_list.list.first_page,\n                next_page: state_book_list.list.next_page,\n                prev_page: state_book_list.list.prev_page,\n            });\n        }\n    }, [state_book_list])\n\n    useEffect(() => {\n        // console.debug(listPageData);\n    }, [listPageData]);\n\n    useEffect(() => {\n        if(state_delete_recommend_book.state === \"success\") {\n            dispatch(attemptRecommendBookListAction({\n                pageNumber: (params.page_number) ? params.page_number : '1',\n                gubun: (params.gubun) ? params.gubun : 'B11000'\n            }));\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, [state_delete_recommend_book])\n\n\n    useEffect(() => {\n\n        async function loadingState() {\n            await setIsLoading('loading');\n        }\n\n        async function idleState() {\n            await setIsLoading('idle');\n        }\n\n\n        if(state_book_list.state === 'loading' || state_delete_recommend_book.state === 'loading') {\n            loadingState()\n        } else {\n            idleState();\n        }\n\n    } ,[state_book_list.state, state_delete_recommend_book.state])\n\n    return {\n        booksListItems,\n        __handlePaginate,\n        listPageData,\n        __handleClickDeleteButton,\n        isLoading,\n    };\n};\n\n","import React from 'react';\nimport {\n    ListSkeletonComponent,\n    BooksActivityListTable,\n    Pagination\n} from 'components/elements';\nimport useActivity from 'hook/useActivity';\n\nfunction BookActivityListPage() {\n\n    const {\n        booksActivityListItems,\n        listPageData,\n        __handleClickActivityDeleteButton,\n        __handlePaginate,\n        isLoading,\n    } = useActivity();\n\n    return (\n        <>\n            <ListSkeletonComponent\n                ListTable={\n                    <BooksActivityListTable\n                        isloading={isLoading}\n                        items={booksActivityListItems}\n                        handleClickActivityDeleteButton={__handleClickActivityDeleteButton}\n                    />\n                }\n                Pagination={\n                    <Pagination\n                    handlePaginate={__handlePaginate}\n                    listpagedata={listPageData}\n                    />\n                }\n            />\n        </>\n    );\n}\n\nexport default BookActivityListPage;","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'modules/redux';\nimport { attemptGetBookActivityListAction, attemptDeleteBookActivityAction } from 'modules/redux/pages';\nimport * as Interfaces from 'modules/Interfaces';\nimport { useParams } from 'react-router-dom';\n\ninterface RouteParams {\n    page_number: string;\n    gubun: string;\n}\n\nexport default function useBookCreate() {\n\n    const params = useParams<RouteParams>();\n    const dispatch = useDispatch();\n\n    const state_book_activity_list = useSelector((state: RootState) => state.pages_state.books.book_activity_list);\n    const dtate_delete_book_activity = useSelector((state: RootState) => state.pages_state.books.delete_book_activity);\n    const [booksActivityListItems, setBooksActivityListItems ] = useState<Interfaces.activityListItem[]>([]);\n    const [listPageData, setlistPageData ] = useState<Interfaces.defaultPaginationData>({\n        current_page: 0,\n        from: 0,\n        last_page: '',\n        per_page: 0,\n        prev_page_url: '',\n        to: 0,\n        total: 0,\n        first_page: '',\n        next_page: '',\n        prev_page: '',\n    });\n\n    const [isLoading, setIsLoading] = useState<Interfaces.baseSagaStateType>('idle');\n\n    const __handleClickActivityDeleteButton = (list_uid : string) => {\n        dispatch(attemptDeleteBookActivityAction({\n            activity_uuid:list_uid\n        }));\n    }\n\n    const __handlePaginate = () => {\n        console.debug('::: __handlePaginate :::');\n    }\n\n    useEffect(() => {\n        if(dtate_delete_book_activity.state === \"success\" && params.page_number && params.gubun) {\n            dispatch(attemptGetBookActivityListAction({\n                pageNumber: (params.page_number) ? params.page_number : '1',\n                gubun: (params.gubun) ? params.gubun : 'C11110'\n            }));\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, [dtate_delete_book_activity.state])\n\n    useEffect(() => {\n        if(state_book_activity_list.state === 'success' && typeof state_book_activity_list.list !== undefined && state_book_activity_list.list) {\n            setBooksActivityListItems(state_book_activity_list.list.items);\n            setlistPageData({\n                current_page: state_book_activity_list.list.current_page,\n                from: state_book_activity_list.list.from,\n                last_page: state_book_activity_list.list.last_page,\n                per_page: state_book_activity_list.list.per_page,\n                prev_page_url: state_book_activity_list.list.prev_page_url,\n                to: state_book_activity_list.list.to,\n                total: state_book_activity_list.list.total,\n                first_page: state_book_activity_list.list.first_page,\n                next_page: state_book_activity_list.list.next_page,\n                prev_page: state_book_activity_list.list.prev_page,\n            });\n        }\n    }, [state_book_activity_list])\n\n\n    useEffect(() => {\n        dispatch(attemptGetBookActivityListAction({\n            pageNumber: (params.page_number) ? params.page_number : '1',\n            gubun: (params.gubun) ? params.gubun : 'C11110'\n        }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, []);\n\n\n    useEffect(() => {\n\n        async function loadingState() {\n            await setIsLoading('loading');\n        }\n\n        async function idleState() {\n            await setIsLoading('idle');\n        }\n\n\n        if(state_book_activity_list.state === 'loading' || dtate_delete_book_activity.state === 'loading') {\n            loadingState()\n        } else {\n            idleState();\n        }\n\n    } ,[state_book_activity_list.state, dtate_delete_book_activity.state])\n\n\n    return {\n        booksActivityListItems,\n        listPageData,\n        __handleClickActivityDeleteButton,\n        __handlePaginate,\n        isLoading,\n    };\n};\n\n","import React from 'react';\nimport useDetail from 'hook/useDetail';\nimport { UserDetailForm, InfoSkeletonComponent } from 'components/elements';\n\nfunction UserDetail() {\n\n    const {\n        useFormCode,\n        userDetailPageData,\n        __handleUserEmailChange,\n        __handleUserNameChange,\n        __handleUserTypeChange,\n        __handleUserStateChange,\n        __handleUserLevelChange,\n        __handleUseDataSubmit,\n    } = useDetail();\n\n    return (\n        <>\n            <InfoSkeletonComponent\n                InfoTable={\n                    <UserDetailForm\n                        useformcode = {useFormCode}\n                        userdetaildata = {userDetailPageData}\n\n                        handleUserEmailChange = {__handleUserEmailChange}\n                        handleUserNameChange = {__handleUserNameChange}\n                        handleUserTypeChange = {__handleUserTypeChange}\n                        handleUserStateChange = {__handleUserStateChange}\n                        handleUserLevelChange = {__handleUserLevelChange}\n                        handleUseDataSubmit = {__handleUseDataSubmit}\n                    />\n                }\n            />\n        </>\n    );\n}\n\nexport default UserDetail;","import { useState, useEffect, MouseEvent} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'modules/redux';\nimport { attemptGetUserInfoAction, attemptUserDataUpdateAction, attemptGetUserInfoResetAction } from 'modules/redux/pages';\nimport { userDetailData } from 'modules/Interfaces';\nimport { useParams } from 'react-router-dom';\nimport GlobalAlert from 'lib/GlobalAlert';\n\ninterface formCode {\n    type_code: string[]\n    state_code: string[]\n    level_code: string[]\n}\n\ninterface RouteParams {\n    user_uuid: string\n}\n\nexport default function useDetail() {\n\n    const params = useParams<RouteParams>();\n\n    const dispatch = useDispatch();\n    const state_sitedata = useSelector((state: RootState) => state.sitedata);\n    const state_user_info = useSelector((state: RootState) => state.pages_state.users.user_info);\n    const state_user_data_update = useSelector((state: RootState) => state.pages_state.users.user_data_update);\n\n    //TODO: 배열처리를 어떻게 해야 할지 몰라서 나중에 수정하자.\n\n\n    const [useFormCode, setUserFormCode] = useState<Partial<{type_code: any, state_code: any, level_code: any}> | formCode>({\n        type_code: [],\n        state_code: [],\n        level_code: []\n    });\n\n\n    const [userDetailPageData, setUserDetailPageData] = useState<Partial<{user_uuid: string, user_id: number,user_email: string, user_name: string, user_type: string, user_state: string, user_level: string}> | userDetailData>({\n        user_uuid: '',\n        user_id: 0,\n        user_email: '',\n        user_name: '',\n        user_type: '',\n        user_state: '',\n        user_level: ''\n    });\n\n    const __handleUserEmailChange = (e: string) => {\n        setUserDetailPageData({\n            ...userDetailPageData,\n            user_email: e\n        });\n    }\n\n    const __handleUserNameChange = (e: string) => {\n        setUserDetailPageData({\n            ...userDetailPageData,\n            user_name: e\n        });\n    }\n\n    const __handleUserTypeChange = (e: string) => {\n        setUserDetailPageData({\n            ...userDetailPageData,\n            user_type: e\n        });\n    }\n\n    const __handleUserStateChange = (e: string) => {\n        setUserDetailPageData({\n            ...userDetailPageData,\n            user_state: e\n        });\n    }\n\n    const __handleUserLevelChange = (e: string) => {\n        setUserDetailPageData({\n            ...userDetailPageData,\n            user_level: e\n        });\n    }\n\n    const __handleUserInfoReset = () => {\n        dispatch(attemptGetUserInfoResetAction());\n    }\n\n    // const __handleUseDataSubmit = (e: FormEvent<HTMLFormElement>) => {\n    //     e.preventDefault();\n    // }\n\n    const __handleUseDataSubmit = (e: MouseEvent) => {\n        e.preventDefault();\n        dispatch(attemptUserDataUpdateAction({\n            user_uuid: userDetailPageData.user_uuid,\n            user_email: userDetailPageData.user_email,\n            user_name: userDetailPageData.user_name,\n            user_type: userDetailPageData.user_type,\n            user_state: userDetailPageData.user_state,\n            user_level: userDetailPageData.user_level,\n        }))\n    }\n\n    useEffect(() => {\n        if(state_user_info.state === 'success' && typeof state_user_info.data !== undefined && state_user_info.data) {\n            setUserDetailPageData({\n                user_uuid:state_user_info.data.user_uuid,\n                user_id:state_user_info.data.user_id,\n                user_email: state_user_info.data.user_email,\n                user_name: state_user_info.data.user_name,\n                user_type: state_user_info.data.user_type_code,\n                user_state: state_user_info.data.user_state_code,\n                user_level: state_user_info.data.user_level_code,\n            });\n        }\n    }, [state_user_info])\n\n    useEffect(() => {\n        if(state_sitedata.state === \"success\") {\n            setUserFormCode({\n                type_code: state_sitedata.code_list['A01'],\n                state_code: state_sitedata.code_list['A10'],\n                level_code: state_sitedata.code_list['A20']\n            });\n\n        }\n    }, [state_sitedata])\n\n    useEffect(() => {\n        dispatch(attemptGetUserInfoAction({\n            user_uuid: params.user_uuid\n        }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        if(state_user_data_update.state === \"failure\" && state_user_data_update.message) {\n            GlobalAlert.error({\n                text: state_user_data_update.message\n            });\n        } else if(state_user_data_update.state === \"success\") {\n            GlobalAlert.thenHistoryPush({\n                text: '완료 되었습니다.',\n                push_router: '/'\n            });\n        }\n    }, [state_user_data_update])\n\n\n    return {\n        userDetailPageData,\n        useFormCode,\n        __handleUserEmailChange,\n        __handleUserNameChange,\n        __handleUserTypeChange,\n        __handleUserStateChange,\n        __handleUserLevelChange,\n        __handleUseDataSubmit,\n        __handleUserInfoReset,\n    };\n};\n\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'modules/redux';\nimport { attemptGetUserInfoAction } from 'modules/redux/pages';\nimport * as Interfaces from 'modules/Interfaces';\nimport { useParams } from 'react-router-dom';\n\ninterface RouteParams {\n    user_uuid: string\n}\n\nexport default function useUserPage() {\n\n    const params = useParams<RouteParams>();\n\n    const dispatch = useDispatch();\n    const state_user_info = useSelector((state: RootState) => state.pages_state.users.user_info);\n\n    const [userInfoItems, setUserInfoItems ] = useState<Interfaces.userDetailData | undefined>({\n        user_id: 0,\n        user_uuid: '',\n        user_name: '',\n        user_email: '',\n        user_type: '',\n        user_type_code: '',\n        user_state: '',\n        user_state_code: '',\n        user_level: '',\n        user_level_code: '',\n        user_activity_state: '',\n        user_active: '',\n        activity_count: 0,\n        read_book_count: 0,\n        upload_book_count: 0,\n        user_created_at: '',\n        updated_at: '',\n        created_at_string: '',\n        updated_at_string: '',\n        email_verified_at_string: '',\n    });\n\n    const getUserInfo = (user_uuid : string) => {\n        dispatch(attemptGetUserInfoAction({\n            user_uuid: user_uuid\n        }));\n    }\n\n    useEffect(() => {\n        if(state_user_info !== undefined) {\n            setUserInfoItems(state_user_info.data);\n        }\n\n    }, [state_user_info])\n\n    useEffect(() => {\n        if(params.user_uuid) {\n            getUserInfo(params.user_uuid)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, [])\n\n    return {\n        userInfoItems,\n    };\n};","import React from 'react';\nimport useUserInfo from 'hook/useUserInfo';\nimport { InfoSkeletonComponent, UserInfoTable } from 'components/elements';\n\n\nfunction UserInfoPage() {\n\n    const {\n        userInfoItems\n    } = useUserInfo();\n\n    return (\n        <>\n            <InfoSkeletonComponent\n                InfoTable={\n                    <UserInfoTable\n                        userInfoData = {userInfoItems}\n                    />\n                }\n            />\n        </>\n    );\n}\n\nexport default UserInfoPage;","import React from 'react';\nimport { SearchSkeletonComponent, BookCreateForm, BookSearchListTable } from 'components/elements';\nimport useBookCreate from 'hook/useBookCreate';\n\n\nfunction BookCreatePage() {\n\n    const {\n        __handleBookSearchButtonClick,\n        __handleBookSearchInputCange,\n        bookSearchResultItem,\n        __handleClickBookServerCreate,\n        bookSearchString,\n        isLoading,\n        __handleEnterKeyPress,\n    } = useBookCreate();\n    return (\n        <>\n            <SearchSkeletonComponent\n                SearchTable={\n                    <>\n                        <BookCreateForm\n                            handleBookSearchButtonClick={__handleBookSearchButtonClick}\n                            handleBookSearchInputCange={__handleBookSearchInputCange}\n                            bookSearchString={bookSearchString}\n                            handleEnterKeyPress = { __handleEnterKeyPress }\n                        />\n                    </>\n                }\n                ListTable={\n                    <>\n                        <BookSearchListTable\n                            isloading={isLoading}\n                            items={bookSearchResultItem}\n                            handleClickBookCreate={__handleClickBookServerCreate}\n                        />\n                    </>\n                }\n            />\n        </>\n    );\n}\n\nexport default BookCreatePage;","import { useState, useEffect, MouseEvent} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'modules/redux';\nimport { attemptBookCreateAction } from 'modules/redux/pages';\nimport * as Interfaces from 'modules/Interfaces';\nimport GlobalAlert from 'lib/GlobalAlert';\nimport * as API from 'lib/API';\nimport axios from 'axios';\n\nexport default function useBookCreate() {\n\n    const state_books = useSelector((state: RootState) => state.pages_state.books);\n\n    const dispatch = useDispatch();\n    const [bookSearchString, setBookSearchString] = useState('');\n    const [bookSearchResultItem, setBookSearchResultItem] = useState<Interfaces.searchBookInfoInterface[]>([]);\n\n    const [isLoading, setIsLoading] = useState<Interfaces.baseSagaStateType>('idle');\n\n    const searchDaumBookApi = () => {\n        setIsLoading('loading');\n        if(bookSearchString.length > 0) {\n            try {\n                axios.get(`https://dapi.kakao.com/v3/search/book?target=title&query=${bookSearchString}`, {headers: {'Authorization':'KakaoAK 2f818df48b7f3e5ec3b2e81689df6506'}})\n                .then(res => {\n                    setBookSearchResultItem(res.data.documents);\n                })\n            } catch (error) {\n                GlobalAlert.thenLocationReload({\n                    text: '문제가 발생 했습니다. 다시 시도해 주세요.'\n                });\n            }\n        } else {\n            GlobalAlert.default({\n                text: '검색어를 입력해 주세요.'\n            })\n        }\n\n        setIsLoading('success');\n    }\n\n    const __handleBookSearchButtonClick = (e: MouseEvent) => {\n        e.preventDefault();\n\n        searchDaumBookApi();\n    }\n\n    const __handleBookSearchInputCange = (e: string) => {\n        setBookSearchString(e);\n    }\n\n    const __handleEnterKeyPress = () => {\n        searchDaumBookApi();\n    }\n\n    const __handleClickBookServerCreate = (state_key: number) => {\n\n        const book_info = bookSearchResultItem[state_key];\n\n        book_info.isbn.split(' ').map( async (n:any, i:number) => {\n            if(i === 1) {\n                const respone = await API.attemptBookExitsCheckRequest({book_uuid: n})\n\n                if(respone.data.info === true) {\n                    GlobalAlert.default({\n                        text: '이미 등록 되어 있습니다.'\n                    })\n                } else {\n                    dispatch(attemptBookCreateAction({\n                        uuid: n,\n                        authors: book_info.authors.join(\", \"),\n                        contents: book_info.contents,\n                        isbn: book_info.isbn,\n                        publisher: book_info.publisher,\n                        thumbnail: book_info.thumbnail,\n                        title: book_info.title,\n                    }))\n                }\n            }\n        } );\n    }\n\n    useEffect(() => {\n    }, [bookSearchResultItem])\n\n    useEffect(() => {\n        if(state_books.book_create.state === 'success') {\n            GlobalAlert.thenHistoryPush({\n                text: '등록 처리 되었습니다.',\n                push_router: '/'\n            });\n        }\n    }, [state_books.book_create.state])\n\n    return {\n        __handleBookSearchButtonClick,\n        __handleBookSearchInputCange,\n        bookSearchResultItem,\n        bookSearchString,\n        __handleClickBookServerCreate,\n        isLoading,\n        __handleEnterKeyPress,\n    };\n};\n\n","import React from 'react';\n\nfunction TestPage() {\n    return (\n        <div>\n            Test Page\n        </div>\n    );\n}\n\nexport default TestPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction BlankPage() {\n\n    const modalTabIndex = -1;\n\n    return (\n        <>\n\n        {/* <!-- Page Wrapper --> */}\n        <div id=\"wrapper\">\n\n            {/* <!-- Sidebar --> */}\n            <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n\n                {/* <!-- Sidebar - Brand --> */}\n                <Link to=\"/\" className=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"index.html\">\n                    <div className=\"sidebar-brand-icon rotate-n-15\">\n                        <i className=\"fas fa-laugh-wink\"></i>\n                    </div>\n                    <div className=\"sidebar-brand-text mx-3\">SB Admin <sup>2</sup></div>\n                </Link>\n\n                {/* <!-- Divider --> */}\n                <hr className=\"sidebar-divider my-0\"></hr>\n\n                {/* <!-- Nav Item - Dashboard --> */}\n                <li className=\"nav-item\">\n                    <Link to=\"/\" className=\"nav-link\" href=\"index.html\"><i className=\"fas fa-fw fa-tachometer-alt\"></i><span>Dashboard</span></Link>\n                </li>\n\n                {/* <!-- Divider --> */}\n                <hr className=\"sidebar-divider\"></hr>\n\n                {/* <!-- Heading --> */}\n                <div className=\"sidebar-heading\">Interface</div>\n\n                {/* <!-- Nav Item - Pages Collapse Menu --> */}\n                <li className=\"nav-item\">\n                    <Link to=\"/\" className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\"><i className=\"fas fa-fw fa-cog\"></i><span>Components</span></Link>\n                    <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\n                        <div className=\"bg-white py-2 collapse-inner rounded\">\n                            <h6 className=\"collapse-header\">Custom Components:</h6>\n                            <Link to=\"/\" className=\"collapse-item\" href=\"buttons.html\">Buttons</Link>\n                            <Link to=\"/\" className=\"collapse-item\" href=\"cards.html\">Cards</Link>\n                        </div>\n                    </div>\n                </li>\n\n                {/* <!-- Nav Item - Utilities Collapse Menu --> */}\n                <li className=\"nav-item\">\n                    <Link to=\"/\" className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseUtilities\" aria-expanded=\"true\" aria-controls=\"collapseUtilities\"> <i className=\"fas fa-fw fa-wrench\"></i> <span>Utilities</span> </Link>\n                    <div id=\"collapseUtilities\" className=\"collapse\" aria-labelledby=\"headingUtilities\" data-parent=\"#accordionSidebar\">\n                        <div className=\"bg-white py-2 collapse-inner rounded\">\n                            <h6 className=\"collapse-header\">Custom Utilities:</h6>\n                            <Link to=\"/\" className=\"collapse-item\" href=\"utilities-color.html\">Colors</Link>\n                            <Link to=\"/\" className=\"collapse-item\" href=\"utilities-border.html\">Borders</Link>\n                            <Link to=\"/\" className=\"collapse-item\" href=\"utilities-animation.html\">Animations</Link>\n                            <Link to=\"/\" className=\"collapse-item\" href=\"utilities-other.html\">Other</Link>\n                        </div>\n                    </div>\n                </li>\n\n                {/* <!-- Divider --> */}\n                <hr className=\"sidebar-divider\"></hr>\n\n                {/* <!-- Heading --> */}\n                <div className=\"sidebar-heading\"> Addons </div>\n\n                {/* <!-- Nav Item - Pages Collapse Menu --> */}\n                <li className=\"nav-item\">\n                    <Link to=\"/\" className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapsePages\" aria-expanded=\"true\" aria-controls=\"collapsePages\"> <i className=\"fas fa-fw fa-folder\"></i> <span>Pages</span> </Link>\n                    <div id=\"collapsePages\" className=\"collapse\" aria-labelledby=\"headingPages\" data-parent=\"#accordionSidebar\">\n                        <div className=\"bg-white py-2 collapse-inner rounded\">\n                            <h6 className=\"collapse-header\">Login Screens:</h6>\n                            <Link to=\"/\" className=\"collapse-item\" href=\"login.html\">Login</Link>\n                            <Link to=\"/\" className=\"collapse-item\" href=\"register.html\">Register</Link>\n                            <Link to=\"/\" className=\"collapse-item\" href=\"forgot-password.html\">Forgot Password</Link>\n                            <div className=\"collapse-divider\"></div>\n                            <h6 className=\"collapse-header\">Other Pages:</h6>\n                            <Link to=\"/\" className=\"collapse-item\" href=\"404.html\">404 Page</Link>\n                            <Link to=\"/\" className=\"collapse-item\" href=\"blank.html\">Blank Page</Link>\n                        </div>\n                    </div>\n                </li>\n\n                {/* <!-- Nav Item - Charts --> */}\n                <li className=\"nav-item\">\n                    <Link to=\"/\" className=\"nav-link\" href=\"charts.html\"> <i className=\"fas fa-fw fa-chart-area\"></i> <span>Charts</span></Link>\n                </li>\n\n                {/* <!-- Nav Item - Tables --> */}\n                <li className=\"nav-item active\">\n                    <Link to=\"/\" className=\"nav-link\" href=\"tables.html\"> <i className=\"fas fa-fw fa-table\"></i> <span>Tables</span></Link>\n                </li>\n\n                {/* <!-- Divider --> */}\n                <hr className=\"sidebar-divider d-none d-md-block\"></hr>\n\n                {/* <!-- Sidebar Toggler (Sidebar) --> */}\n                <div className=\"text-center d-none d-md-inline\">\n                    <button className=\"rounded-circle border-0\" id=\"sidebarToggle\"></button>\n                </div>\n\n            </ul>\n            {/* <!-- End of Sidebar --> */}\n\n            {/* <!-- Content Wrapper --> */}\n            <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n\n                {/* <!-- Main Content --> */}\n                <div id=\"content\">\n\n                    {/* <!-- Topbar --> */}\n                    <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n\n                        {/* <!-- Sidebar Toggle (Topbar) --> */}\n                        <button id=\"sidebarToggleTop\" className=\"btn btn-link d-md-none rounded-circle mr-3\">\n                            <i className=\"fa fa-bars\"></i>\n                        </button>\n\n                        {/* <!-- Topbar Search --> */}\n                        <form className=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\">\n                            <div className=\"input-group\">\n                                <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\"/>\n                                <div className=\"input-group-append\">\n                                    <button className=\"btn btn-primary\" type=\"button\">\n                                        <i className=\"fas fa-search fa-sm\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n\n                        {/* <!-- Topbar Navbar --> */}\n                        <ul className=\"navbar-nav ml-auto\">\n\n                            {/* <!-- Nav Item - Search Dropdown (Visible Only XS) --> */}\n                            <li className=\"nav-item dropdown no-arrow d-sm-none\">\n                                <Link to=\"/\" className=\"nav-link dropdown-toggle\" href=\"#\" id=\"searchDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i className=\"fas fa-search fa-fw\"></i> </Link>\n                                {/* <!-- Dropdown - Messages --> */}\n                                <div className=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\" aria-labelledby=\"searchDropdown\">\n                                    <form className=\"form-inline mr-auto w-100 navbar-search\">\n                                        <div className=\"input-group\">\n                                            <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\n                                            <div className=\"input-group-append\">\n                                                <button className=\"btn btn-primary\" type=\"button\">\n                                                    <i className=\"fas fa-search fa-sm\"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div>\n                            </li>\n\n                            {/* <!-- Nav Item - Alerts --> */}\n                            <li className=\"nav-item dropdown no-arrow mx-1\">\n                                <Link to=\"/\" className=\"nav-link dropdown-toggle\" href=\"#\" id=\"alertsDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    <i className=\"fas fa-bell fa-fw\"></i>\n                                    {/* <!-- Counter - Alerts --> */}\n                                    <span className=\"badge badge-danger badge-counter\">3+</span>\n                                </Link>\n                                {/* <!-- Dropdown - Alerts --> */}\n                                <div className=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"alertsDropdown\">\n                                    <h6 className=\"dropdown-header\">Alerts Center</h6>\n                                    <Link to=\"/\" className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                        <div className=\"mr-3\">\n                                            <div className=\"icon-circle bg-primary\"> <i className=\"fas fa-file-alt text-white\"></i> </div>\n                                        </div>\n                                        <div>\n                                            <div className=\"small text-gray-500\">December 12, 2019</div>\n                                            <span className=\"font-weight-bold\">A new monthly report is ready to download!</span>\n                                        </div>\n                                    </Link>\n                                    <Link to=\"/\" className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                        <div className=\"mr-3\">\n                                            <div className=\"icon-circle bg-success\"> <i className=\"fas fa-donate text-white\"></i> </div>\n                                        </div>\n                                        <div>\n                                            <div className=\"small text-gray-500\">December 7, 2019</div>\n                                            $290.29 has been deposited into your account!\n                                        </div>\n                                    </Link>\n                                    <Link to=\"/\" className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                        <div className=\"mr-3\">\n                                            <div className=\"icon-circle bg-warning\">\n                                                <i className=\"fas fa-exclamation-triangle text-white\"></i>\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <div className=\"small text-gray-500\">December 2, 2019</div>\n                                            Spending Alert: We've noticed unusually high spending for your account.\n                                        </div>\n                                    </Link>\n                                    <Link to=\"/\" className=\"dropdown-item text-center small text-gray-500\" href=\"#\">Show All Alerts</Link>\n                                </div>\n                            </li>\n\n                            {/* <!-- Nav Item - Messages --> */}\n                            <li className=\"nav-item dropdown no-arrow mx-1\">\n                                <Link to=\"/\" className=\"nav-link dropdown-toggle\" href=\"#\" id=\"messagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    <i className=\"fas fa-envelope fa-fw\"></i>\n                                    {/* <!-- Counter - Messages --> */}\n                                    <span className=\"badge badge-danger badge-counter\">7</span>\n                                </Link>\n                                {/* <!-- Dropdown - Messages --> */}\n                                <div className=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"messagesDropdown\">\n                                    <h6 className=\"dropdown-header\"> Message Center </h6>\n                                    <Link to=\"/\" className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                        <div className=\"dropdown-list-image mr-3\">\n                                            <img className=\"rounded-circle\" src=\"https://source.unsplash.com/fn_BT9fwg_E/60x60\" alt=\"\"/>>\n                                            <div className=\"status-indicator bg-success\"></div>\n                                        </div>\n                                        <div className=\"font-weight-bold\">\n                                            <div className=\"text-truncate\">Hi there! I am wondering if you can help me with a problem I've been having.</div>\n                                            <div className=\"small text-gray-500\">Emily Fowler · 58m</div>\n                                        </div>\n                                    </Link>\n                                    <Link to=\"/\" className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                        <div className=\"dropdown-list-image mr-3\">\n                                            <img className=\"rounded-circle\" src=\"https://source.unsplash.com/AU4VPcFN4LE/60x60\" alt=\"\"/>\n                                            <div className=\"status-indicator\"></div>\n                                        </div>\n                                        <div>\n                                            <div className=\"text-truncate\">I have the photos that you ordered last month, how would you like them sent to you?</div>\n                                            <div className=\"small text-gray-500\">Jae Chun · 1d</div>\n                                        </div>\n                                    </Link>\n                                    <Link to=\"/\" className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                        <div className=\"dropdown-list-image mr-3\">\n                                            <img className=\"rounded-circle\" src=\"https://source.unsplash.com/CS2uCrpNzJY/60x60\" alt=\"\"/>\n                                            <div className=\"status-indicator bg-warning\"></div>\n                                        </div>\n                                        <div>\n                                            <div className=\"text-truncate\">Last month's report looks great, I am very happy with the progress so far, keep up the good work!</div>\n                                            <div className=\"small text-gray-500\">Morgan Alvarez · 2d</div>\n                                        </div>\n                                    </Link>\n                                    <Link to=\"/\" className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                        <div className=\"dropdown-list-image mr-3\">\n                                            <img className=\"rounded-circle\" src=\"https://source.unsplash.com/Mv9hjnEUHR4/60x60\" alt=\"\"/>\n                                            <div className=\"status-indicator bg-success\"></div>\n                                        </div>\n                                        <div>\n                                            <div className=\"text-truncate\">Am I a good boy? The reason I ask is because someone told me that people say this to all dogs, even if they aren't good...</div>\n                                            <div className=\"small text-gray-500\">Chicken the Dog · 2w</div>\n                                        </div>\n                                    </Link>\n                                    <Link to=\"/\" className=\"dropdown-item text-center small text-gray-500\" href=\"#\">Read More Messages</Link>\n                                </div>\n                            </li>\n\n                            <div className=\"topbar-divider d-none d-sm-block\"></div>\n\n                            {/* <!-- Nav Item - User Information --> */}\n                            <li className=\"nav-item dropdown no-arrow\">\n                                <Link to=\"/\" className=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">Valerie Luna</span>\n                                    <img className=\"img-profile rounded-circle\" src=\"https://source.unsplash.com/QAB-WJcbgJk/60x60\" alt=\"\"/>\n                                </Link>\n                                {/* <!-- Dropdown - User Information --> */}\n                                <div className=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"userDropdown\">\n                                    <Link to=\"/\" className=\"dropdown-item\" href=\"#\"> <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"></i> Profile </Link>\n                                    <Link to=\"/\" className=\"dropdown-item\" href=\"#\"> <i className=\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\"></i> Settings </Link>\n                                    <Link to=\"/\" className=\"dropdown-item\" href=\"#\"> <i className=\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\"></i> Activity Log </Link>\n                                    <div className=\"dropdown-divider\"></div>\n                                    <Link to=\"/\" className=\"dropdown-item\" href=\"#\" data-toggle=\"modal\" data-target=\"#logoutModal\"> <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i> Logout </Link>\n                                </div>\n                            </li>\n\n                        </ul>\n\n                    </nav>\n                    {/* <!-- End of Topbar --> */}\n\n                    {/* <!-- Begin Page Content --> */}\n                    <div className=\"container-fluid\">\n\n                    {/* <!-- Page Heading --> */}\n                    <h1 className=\"h3 mb-4 text-gray-800\">Blank Page</h1>\n\n                    </div>\n                    {/* <!-- /.container-fluid --> */}\n\n                </div>\n                {/* <!-- End of Main Content --> */}\n\n                {/* <!-- Footer --> */}\n                <footer className=\"sticky-footer bg-white\">\n                    <div className=\"container my-auto\">\n                        <div className=\"copyright text-center my-auto\">\n                            <span>Copyright &copy; Your Website 2019</span>\n                        </div>\n                    </div>\n                </footer>\n                {/* <!-- End of Footer --> */}\n\n            </div>\n            {/* <!-- End of Content Wrapper --> */}\n\n        </div>\n        {/* <!-- End of Page Wrapper --> */}\n\n        {/* <!-- Scroll to Top Button--> */}\n        <Link to=\"/\" className=\"scroll-to-top rounded\" href=\"#page-top\">\n            <i className=\"fas fa-angle-up\"></i>\n        </Link>\n\n        {/* <!-- Logout Modal--> */}\n        <div className=\"modal fade\" id=\"logoutModal\" tabIndex={modalTabIndex} role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Ready to Leave?</h5>\n                        <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">×</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">Select \"Logout\" below if you are ready to end your current session.</div>\n                    <div className=\"modal-footer\">\n                        <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\n                        <Link to=\"/\" className=\"btn btn-primary\" href=\"login.html\">Logout</Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        </>\n    );\n}\n\nexport default BlankPage;","import React, {useEffect, useState} from \"react\";\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\nimport * as Helper from 'lib/Helper';\nimport history from 'routes/History';\nimport { useDispatch, useSelector } from 'react-redux';\nimport GlobalAxios from 'lib/GlobalAxios';\n\nimport {\n    TestPage,\n    LoginPage,\n    UsersPage,\n    UserDetail,\n    BlankPage,\n    BookCreatePage,\n    BooksListPage,\n    RecommendBooksListPage,\n    BookActivityListPage,\n    UserInfoPage,\n} from 'components/pages';\n\nimport {LoadingSpinner} from 'components/elements';\n\nimport { RootState } from 'modules/redux';\nimport { getRootDataAction } from 'modules/redux/sitedatas';\n\n\ninterface RootProps  {\n    Routerhistory: any\n};\n\nconst Root = ({\n    Routerhistory\n} : RootProps) => {\n\n    const dispatch = useDispatch();\n\n    const router_state = useSelector((state: RootState) => state.router);\n    const sitedata_state = useSelector((state: RootState) => state.sitedata.state);\n\n    const [ isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        if(!Helper.getAccessToken()) {\n            if(router_state.location.pathname !== '/login') {\n                history.push('/joojang.front.admin/login');\n            }\n        }\n    }, [router_state])\n\n    // TODO: 소스 정리 필요.\n    useEffect(() => {\n        setIsLoading(true);\n        const fetchData = async () => {\n            if(Helper.getRefreshToken()) {\n                const refresh_token =  await GlobalAxios.refresh_token()\n                if(refresh_token) {\n                    dispatch(getRootDataAction());\n                    // setIsLoading(false);\n                } else {\n                    setIsLoading(false);\n                    history.push('/joojang.front.admin/login');\n                }\n            } else {\n                setIsLoading(false);\n                history.push('/joojang.front.admin/login');\n            }\n        };\n        fetchData();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, []);\n\n\n      useEffect(() => {\n          if(sitedata_state === 'success') {\n            setIsLoading(false);\n          }\n      }, [sitedata_state])\n\n    if(isLoading) {\n        return (\n            <div style={{ height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center',}}>\n                <LoadingSpinner />\n            </div>\n        );\n    } else {\n\n    return (\n            <Router history={ Routerhistory }>\n                <Switch>\n                    <Route path=\"/joojang.front.admin/\" exact={ true } component={ UsersPage } />\n                    <Route path=\"/joojang.front.admin/blank\" exact={ true } component={ BlankPage } />\n\n                    <Route path=\"/joojang.front.admin/login\" exact={ true } component={ LoginPage } />\n                    <Route path=\"/joojang.front.admin/book/create\" exact={ true } component={ BookCreatePage } />\n\n                    <Route path=\"/joojang.front.admin/users/:page_number\" exact={ true } component={ UsersPage } />\n                    <Route path=\"/joojang.front.admin/books/:page_number\" exact={ true } component={ BooksListPage } />\n                    <Route path=\"/joojang.front.admin/books/activity/:gugun/:page_number\" exact={ true } component={ BookActivityListPage } />\n                    <Route path=\"/joojang.front.admin/books/recommend/:gubun/:page_number\" exact={ true } component={ RecommendBooksListPage } />\n                    <Route path=\"/joojang.front.admin/user/:user_uuid/detail\" exact={ true } component={ UserDetail } />\n                    <Route path=\"/joojang.front.admin/user/:user_uuid/info\" exact={ true } component={ UserInfoPage } />\n\n\n                    <Route path=\"/test\" exact={ true } component={ TestPage } />\n                    <Redirect path=\"*\" to=\"/joojang.front.admin/login\" />\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default Root;","import * as React from 'react';\nimport { Provider } from 'react-redux';\nimport History from './routes/History';\nimport { createBrowserHistory } from 'history'\nimport configureStore from 'modules/configureStore'\n\nimport Root from './routes/Root';\n\nimport \"assets/css/sb-admin-2.css\";\n\n\nconst history = createBrowserHistory();\n\ndeclare var window: any;\nconst store = configureStore(history, window.INITIAL_REDUX_STATE);\n\nconst App = () => {\n    return (\n        <Provider store={ store }>\n            <Root Routerhistory={ History }/>\n        </Provider>\n    );\n}\n\nexport default App;","import { Store, createStore, applyMiddleware } from 'redux'\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { History } from 'history';\n\nimport rootReducer, { RootState, rootSaga } from './redux';\n\nexport default function configureStore(history: History, initialState: RootState): Store<RootState> {\n\n    let compose;\n\n    const isDevelopment = process.env.REACT_APP_ENV === 'development1';\n\n    const composeEnhancers = composeWithDevTools({});\n    const sagaMiddleware = createSagaMiddleware();\n\n    if( isDevelopment ) {\n        compose = composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware, createLogger()));\n    } else {\n        compose = composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware));\n    }\n\n    const store = createStore(\n        rootReducer(history),\n        initialState,\n        compose\n    );\n    sagaMiddleware.run(rootSaga);\n    return store\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export { default } from './reducer';\nexport * from './actions';\nexport * from './types';\nexport * from './sagas';","/**\n * 개발 디버그\n * @param e\n * @constructor\n */\nexport const DEBUG = (e: object) => {\n    console.debug('%c::DEBUG::', 'color: green; font-weight: bold;',e);\n};\n\n/**\n * 로컬 스토리지 관리\n */\nexport const storageManager = {\n    set: (key: string, object: any) => {\n        if(!localStorage) return;\n        localStorage.setItem(key, (typeof object) === 'string' ? object : JSON.stringify(object) );\n    },\n    get: (key: string) => {\n        if(!localStorage) return null;\n\n        if(!localStorage[key]) {\n            return null;\n        }\n\n        try {\n            return JSON.parse(localStorage.getItem(key)!);\n        } catch(e) {\n            return localStorage.getItem(key);\n        }\n    },\n    remove: (key: string) => {\n        if(!localStorage) return null;\n\n        if(localStorage[key]) {\n            localStorage.removeItem(key);\n        }\n    }\n};\n\nexport function getAccessToken() {\n    return cookieManager.get('login_access_token');\n}\n\nexport function getRefreshToken() {\n    return cookieManager.get('login_refresh_token');\n}\n\nexport function setLoginInfo(payload: any): void {\n    cookieManager.set('login_token_type', payload.token_type!);\n    cookieManager.set('login_expires_in', payload.expires_in!);\n    cookieManager.set('login_access_token', payload.access_token!);\n    cookieManager.set('login_refresh_token', payload.refresh_token!);\n    cookieManager.set('login_user_name', payload.user_name!);\n}\n\nexport async function setLoginInfoRefresh(payload: any) {\n    await cookieManager.set('login_token_type', payload.token_type!);\n    await cookieManager.set('login_expires_in', payload.expires_in!);\n    await cookieManager.set('login_access_token', payload.access_token!);\n    await cookieManager.set('login_refresh_token', payload.refresh_token!);\n}\n\nexport function removeLoginInfo(): void {\n    cookieManager.remove('login_token_type');\n    cookieManager.remove('login_expires_in');\n    cookieManager.remove('login_access_token');\n    cookieManager.remove('login_refresh_token');\n    cookieManager.remove('login_user_name');\n}\n\n/**\n * 쿠키정보.\n */\nexport const cookieManager = {\n    set: (cname: string, cvalue: string | number, hours: number = 1) => {\n        let d = new Date();\n        d.setTime(d.getTime() + hours * 60 * 60 * 1000); // (exdays * 24 * 60 * 60 * 1000));\n        let expires = \"expires=\" + d.toUTCString();\n        document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n    },\n    get: (cname: string) => {\n\n        let name = cname + \"=\";\n        let ca = document.cookie.split(\";\");\n\n        for (let i = 0; i < ca.length; i++) {\n            let c = ca[i];\n            while (c.charAt(0) === \" \") {\n                c = c.substring(1);\n            }\n            if (c.indexOf(name) === 0) {\n                return c.substring(name.length, c.length);\n            }\n        }\n\n        return \"\";\n    },\n    remove: (cname: string) => {\n        let expires = \"expires=Thu, 01 Jan 1970 00:00:00 UTC;\"\n        document.cookie = cname + \"=;\" + expires + \";path=/\";\n    }\n}\n\nexport const isEmpty = function(value: any): boolean\n{\n    if( value === \"\" || value === null || value === undefined || ( value !== null && typeof value === \"object\" && !Object.keys(value).length ) ){\n      return true\n    }else{\n      return false\n    }\n};","import GlobalAxios from 'lib/GlobalAxios';\nimport * as Interfaces from 'modules/Interfaces';\n\nexport function attemptLogin(payload: Interfaces.loginRequest): Promise<Interfaces.defaultServerResponse> {\n    return GlobalAxios.init(false, 'post', '/api/v1/auth/login', payload);\n};\n\nexport function getSiteData(): Promise<Interfaces.defaultServerResponse> {\n    return GlobalAxios.init(true , 'get', '/api/v1/system/basedata', {});\n};\n\nexport function attemptGetUserList(payload: Interfaces.getUserListRequest): Promise<Interfaces.defaultServerResponse> {\n    return GlobalAxios.init(true, 'get', `/api/v1/admin/users/page/${payload.pageNumber}`, []);\n};\n\nexport function attemptGetUserInfo(payload: Interfaces.getUserInfoRequest): Promise<Interfaces.defaultServerResponse> {\n    return GlobalAxios.init(true, 'get', `/api/v1/admin/users/${payload.user_uuid}/info`, []);\n};\n\nexport function attemptUserDataUpdate(payload: Interfaces.UserDataUpdate): Promise<Interfaces.defaultServerResponse> {\n    return GlobalAxios.init(true, 'post', `/api/v1/admin/users/${payload.user_uuid}/info`, payload);\n};\n\nexport function attemptUserActiveUpdate(payload: Interfaces.userActiveRequest): Promise<Interfaces.defaultServerResponse> {\n    return GlobalAxios.init(true, 'post', `/api/v1/admin/users/active`, payload);\n};\n\nexport function attemptBookExitsCheckRequest(payload: Interfaces.bookExitsCheckRequest): Promise<Interfaces.defaultServerResponse> {\n    return GlobalAxios.init(true, 'get', `/api/v1/admin/book/${payload.book_uuid}/exits`, {});\n};\n\nexport function attemptBookCreateRequest(payload: Interfaces.bookCreateRequest): Promise<Interfaces.defaultServerResponse> {\n    return GlobalAxios.init(true, 'post', `/api/v1/user/books`, payload);\n};\n\nexport function attemptGetBookListRequest(payload: Interfaces.getPageingListRequest): Promise<Interfaces.defaultServerResponse> {\n    return GlobalAxios.init(true, 'get', `/api/v1/admin/books/page/${payload.pageNumber}`, payload);\n};\n\nexport function attemptGetRecommendBookListRequest(payload: Interfaces.getRecommendRequest): Promise<Interfaces.defaultServerResponse> {\n    return GlobalAxios.init(true, 'get', `/api/v1/admin/books/recommend/${payload.gubun}/page/${payload.pageNumber}`, payload);\n};\n\nexport function attemptAddRecommendBookRequest(payload: Interfaces.addRecommendBookRequest): Promise<Interfaces.defaultServerResponse> {\n    return GlobalAxios.init(true, 'post', `/api/v1/admin/books/recommend`, payload);\n};\n\nexport function attemptDeleteRecommendBookRequest(payload: Interfaces.deleteRecommendBookRequest): Promise<Interfaces.defaultServerResponse> {\n    return GlobalAxios.init(true, 'delete', `/api/v1/admin/books/recommend`, {params:payload});\n};\n\n\nexport function attemptGetBookActivityListRequest(payload: Interfaces.getGubunPageingListRequest): Promise<Interfaces.defaultServerResponse> {\n    return GlobalAxios.init(true, 'get', `/api/v1/admin/books/activity/${payload.gubun}/page/${payload.pageNumber}`, payload);\n};\n\nexport function attemptDeleteBookActivityRequest(payload: Interfaces.deleteBookActivityRequest): Promise<Interfaces.defaultServerResponse> {\n    return GlobalAxios.init(true, 'delete', `/api/v1/admin/books/activity`, {params:payload});\n};","// tslint:disable:interface-name\nimport { createBrowserHistory } from 'history';\n\ndeclare global {\n    interface Window {\n        dataLayer: any;\n    }\n}\n\nconst History = createBrowserHistory();\n\nexport default History;","import { defaultServerResponse } from 'modules/Interfaces';\nimport history from 'routes/History';\n\nimport axios ,{\n    AxiosInstance,\n    AxiosPromise\n} from 'axios';\n\nimport * as Helper from 'lib/Helper';\nimport GlobalAlert from 'lib/GlobalAlert';\n\nexport interface tokenRefreshInterface {\n    state: boolean;\n    data?: {\n        token_type?: string;\n        expires_in?: number;\n        access_token?: string;\n        refresh_token?: string;\n        user_name?: string;\n    }\n    message?: string;\n}\n\nclass GlobalAxios {\n\n    defaultAxiosinstance: AxiosInstance;\n\n    user_access_token: string = '';\n\n    constructor() {\n\n        const defaultAxiosinstance: AxiosInstance = axios.create({\n            baseURL: process.env.REACT_APP_API_URL,\n            timeout: 20000,\n            headers: {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Request-Client-Type\": \"A01001\",\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                // \"Authorization\" : \"Bearer \" + this.user_access_token,\n            }\n        });\n\n        this.defaultAxiosinstance = defaultAxiosinstance;\n    }\n\n    promise = <T>(axiosPromise: AxiosPromise): Promise<T> => {\n        return new Promise<T | any>((resolve, reject) => {\n            axiosPromise.then(response => {\n                resolve({\n                    state: true,\n                    data: response.data\n                });\n            })\n            .catch(error => {\n                if (error.response) {\n\n                    if(error.response.status === 401) {\n                        Helper.removeLoginInfo();\n                        GlobalAlert.default({\n                            text: error.response.data.error_message,\n                        });\n                        history.push('/joojang.front.admin/login');\n                    }\n\n                    const errorMessage = error.response.data.error_message;\n                    if(typeof errorMessage === 'object') {\n                        // console.debug(errorMessage.toString());\n                        // 어떻게 할것 인지?\n                    } else {\n                        resolve({\n                            state: false,\n                            message: (error.response.data.error_message) ? error.response.data.error_message : \"처리중 문제가 발생했습니다.\"\n                        });\n                    }\n                } else if (error.request) {\n                    resolve({\n                        status: 444,\n                        message: \"서버와의 통신중 문제가 발생했습니다.\"\n                    });\n                } else {\n                    resolve({\n                        status: 417,\n                        message: \"알수 없는 에러 입니다.\"\n                    });\n                }\n            });\n        });\n    };\n\n    error(message: string): never {\n        throw new Error(message);\n    };\n\n    refresh_token = async () => this.defaultAxiosinstance.post('/api/v1/auth/refresh_token', {\n            refresh_token: await Helper.getRefreshToken()\n        }).then(async response => {\n            await Helper.setLoginInfoRefresh(response.data);\n            this.user_access_token = await response.data.access_token;\n            return {\n                state: true,\n            }\n        }).catch(error => {\n            if(error.response.status === 400) {\n                // 어떻게 할것 인가.\n            } else if(error.response.status === 500){\n                // 어떻게 할것 인가.\n            }\n\n        return {\n            state:false\n        }\n    });\n\n\n    init = async (auth: boolean, method : string, url: string, params: object): Promise<defaultServerResponse> => {\n\n        if(auth) {\n            await Promise.all([this.refresh_token()]).then(function (e) {\n                const _first = e[0];\n                if(_first.state === false) {\n                    Helper.removeLoginInfo();\n                    GlobalAlert.default({\n                        text: '다시 로그인해 주세요.',\n                    });\n                    history.push('/joojang.front.admin/login');\n                } else {\n                    // Helper.setLoginInfoRefresh(refresh_token.data)\n                }\n            });\n       }\n\n        const axiosinstance: AxiosInstance = axios.create({\n            baseURL: process.env.REACT_APP_API_URL,\n            timeout: 20000,\n            headers: {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Request-Client-Type\": \"A01001\",\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"Authorization\" : \"Bearer \" + Helper.getAccessToken(),\n            }\n        });\n\n        switch(method) {\n            case 'get': {\n                return this.promise<defaultServerResponse>(axiosinstance.get(url, params));\n            }\n            case 'post': {\n                return this.promise<defaultServerResponse>(axiosinstance.post(url, params));\n            }\n            case 'put': {\n                return this.promise<defaultServerResponse>(axiosinstance.put(url, params));\n            }\n            case 'delete': {\n                return this.promise<defaultServerResponse>(axiosinstance.delete(url, params));\n            }\n            default:\n                return this.error(\"Should never get here\");\n        }\n    };\n};\n\nexport default new GlobalAxios();","\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport history from 'routes/History';\n\ninterface alertTypeInterface {\n    title?: string,\n    text?: string | null | undefined,\n    html?: string | null | undefined,\n    footer?: string,\n    push_router?: string,\n}\n\nclass GlobalAlert {\n\n    SwalAlert: any;\n    History: any;\n\n    constructor() {\n        this.SwalAlert = withReactContent(Swal);\n    }\n\n    default = (alertOption: alertTypeInterface): void => {\n        this.SwalAlert.fire({\n            text: alertOption.text,\n        });\n    };\n\n\n    thenHistoryPush = (alertOption: alertTypeInterface): void => {\n\n        const push_target = alertOption.push_router ? alertOption.push_router : '/';\n\n        this.SwalAlert.fire({\n            text: alertOption.text,\n        }).then(() => {\n            history.push(push_target);\n        });\n    };\n\n    thenLocationReload = (alertOption: alertTypeInterface): void => {\n        this.SwalAlert.fire({\n            text: alertOption.text,\n        }).then(() => {\n            window.location.reload();\n        });\n    };\n\n    defaultUserInfo = (alertOption: alertTypeInterface): void => {\n        this.SwalAlert.fire({\n            title: alertOption.title,\n            html: alertOption.html,\n            cancelButtonText:\n              '<i class=\"fa fa-thumbs-down\"></i>',\n            cancelButtonAriaLabel: 'Thumbs down'\n        });\n    };\n\n\n    error = (alertOption: alertTypeInterface): void => {\n        this.SwalAlert.fire({\n            icon: \"error\",\n            text: alertOption.text,\n        });\n    };\n\n}\n\nexport default new GlobalAlert();","export { default } from './reducer';\nexport * from './actions';\nexport * from './types';\nexport * from './sagas';","export enum ActionType {\n    // Root Data\n    GET_ROOTDATA_REQUEST = 'root/GET_ROOTDATA_REQUEST ',\n    GET_ROOTDATA_SUCCESS = 'root/GET_ROOTDATA_SUCCESS',\n    GET_ROOTDATA_ERROR = 'root/GET_ROOTDATA_ERROR',\n\n    // 로그인\n    LOGIN_DATA_REQUEST = 'login/LOGIN_DATA_REQUEST',\n    LOGIN_DATA_SUCCESS = 'login/LOGIN_DATA_SUCCESS',\n    LOGIN_DATA_ERROR = 'login/LOGIN_DATA_ERROR',\n    LOGIN_DATA_RESET = 'login/LOGIN_DATA_RESET',\n\n\n    // 회원 리스트\n    GET_USER_LIST_REQUEST = 'users/GET_USER_LIST_REQUEST',\n    GET_USER_LIST_SUCCESS = 'users/GET_USER_LIST_SUCCESS',\n    GET_USER_LIST_ERROR = 'users/GET_USER_LIST_ERROR',\n\n    GET_USER_INFO_REQUEST = 'users/GET_USER_INFO_REQUEST',\n    GET_USER_INFO_SUCCESS = 'users/GET_USER_INFO_SUCCESS',\n    GET_USER_INFO_ERROR = 'users/GET_USER_INFO_ERROR',\n    GET_USER_INFO_RESET = 'users/GET_USER_INFO_RESET',\n\n    USER_DATA_UPDATE_REQUEST = 'users/USER_DATA_UPDATE_REQUEST',\n    USER_DATA_UPDATE_SUCCESS = 'users/USER_DATA_UPDATE_SUCCESS',\n    USER_DATA_UPDATE_ERROR = 'users/USER_DATA_UPDATE_ERROR',\n\n    USER_ACTIVE_UPDATE_REQUEST = 'users/USER_ACTIVE_UPDATE_REQUEST',\n    USER_ACTIVE_UPDATE_SUCCESS = 'users/USER_ACTIVE_UPDATE_SUCCESS',\n    USER_ACTIVE_UPDATE_ERROR = 'users/USER_ACTIVE_UPDATE_ERROR',\n\n    BOOK_CREATE_REQUEST = 'book/BOOK_CREATE_REQUEST',\n    BOOK_CREATE_SUCCESS = 'book/BOOK_CREATE_SUCCESS',\n    BOOK_CREATE_ERROR = 'book/BOOK_CREATE_ERROR',\n\n    GET_BOOKS_LIST_REQUEST = 'book/GET_BOOKS_LIST_REQUEST',\n    GET_BOOKS_LIST_SUCCESS = 'book/GET_BOOKS_LIST_SUCCESS',\n    GET_BOOKS_LIST_ERROR = 'book/GET_BOOKS_LIST_ERROR',\n\n    GET_BOOKS_ACTIVITY_LIST_REQUEST = 'book/GET_BOOKS_ACTIVITY_LIST_REQUEST',\n    GET_BOOKS_ACTIVITY_LIST_SUCCESS = 'book/GET_BOOKS_ACTIVITY_LIST_SUCCESS',\n    GET_BOOKS_ACTIVITY_LIST_ERROR = 'book/GET_BOOKS_ACTIVITY_LIST_ERROR',\n\n    DELETE_BOOKS_ACTIVITY_LIST_REQUEST = 'book/DELETE_BOOKS_ACTIVITY_LIST_REQUEST',\n    DELETE_BOOKS_ACTIVITY_LIST_SUCCESS = 'book/DELETE_BOOKS_ACTIVITY_LIST_SUCCESS',\n    DELETE_BOOKS_ACTIVITY_LIST_ERROR = 'book/DELETE_BOOKS_ACTIVITY_LIST_ERROR',\n\n    GET_RECOMMEND_BOOKS_LIST_REQUEST = 'book/GET_RECOMMEND_BOOKS_LIST_REQUEST',\n    GET_RECOMMEND_BOOKS_LIST_SUCCESS = 'book/GET_RECOMMEND_BOOKS_LIST_SUCCESS',\n    GET_RECOMMEND_BOOKS_LIST_ERROR = 'book/GET_RECOMMEND_BOOKS_LIST_ERROR',\n\n    ADD_RECOMMEND_BOOKS_REQUEST = 'book/ADD_RECOMMEND_BOOKS_REQUEST',\n    ADD_RECOMMEND_BOOKS_SUCCESS = 'book/ADD_RECOMMEND_BOOKS_SUCCESS',\n    ADD_RECOMMEND_BOOKS_ERROR = 'book/ADD_RECOMMEND_BOOKS_ERROR',\n\n    DELETE_RECOMMEND_BOOKS_REQUEST = 'book/DELETE_RECOMMEND_BOOKS_REQUEST',\n    DELETE_RECOMMEND_BOOKS_SUCCESS = 'book/DELETE_RECOMMEND_BOOKS_SUCCESS',\n    DELETE_RECOMMEND_BOOKS_ERROR = 'book/DELETE_RECOMMEND_BOOKS_ERROR',\n}","import { put, takeLatest, fork, call } from \"redux-saga/effects\";\nimport { getSiteData } from 'lib/API';\nimport { ActionType } from 'modules/ActionType';\n\nexport function* getSiteDataSaga() {\n    const response = yield call(getSiteData);\n    if(response.state === true) {\n        yield put({ type: ActionType.GET_ROOTDATA_SUCCESS, payload: response.data });\n    } else {\n        yield put({ type: ActionType.GET_ROOTDATA_ERROR, payload: response.message });\n    }\n};\n\nfunction* onSiteDataRequestWatcher() {\n    yield takeLatest(ActionType.GET_ROOTDATA_REQUEST as any, getSiteDataSaga);\n}\n\nexport default [\n    fork(onSiteDataRequestWatcher),\n];","import { put, takeLatest, fork, call } from \"redux-saga/effects\";\nimport { ActionType } from 'modules/ActionType';\nimport { loginRequest } from 'modules/Interfaces';\nimport { attemptLogin } from 'lib/API';\n\nexport function* loginActionSaga({ payload }: { payload: loginRequest }) {\n    const response = yield call(attemptLogin, payload);\n    if(response.state === true) {\n        yield put({ type: ActionType.LOGIN_DATA_SUCCESS, payload: response.data});\n    } else {\n        yield put({ type: ActionType.LOGIN_DATA_ERROR, payload: response});\n    }\n}\n\nfunction* onLoginRequestWatcher() {\n    yield takeLatest(ActionType.LOGIN_DATA_REQUEST as any, loginActionSaga);\n}\n\nexport default [\n    fork(onLoginRequestWatcher),\n];","import { takeLatest, fork, call, put } from \"redux-saga/effects\";\nimport { ActionType } from 'modules/ActionType';\nimport * as Interfaces from 'modules/Interfaces';\nimport * as API from 'lib/API';\n\nexport function* getUserListActionSaga({ payload }: { payload: Interfaces.getUserListRequest }) {\n    const response = yield call(API.attemptGetUserList, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.GET_USER_LIST_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.GET_USER_LIST_ERROR, payload: response.data});\n    }\n}\n\nexport function* getUserInfoActionSaga({ payload }: { payload: Interfaces.getUserInfoRequest }) {\n    const response = yield call(API.attemptGetUserInfo, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.GET_USER_INFO_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.GET_USER_INFO_ERROR, payload: response.data});\n    }\n}\n\nexport function* getUserInfoActionResetSaga() {\n    yield put({type:ActionType.GET_USER_INFO_RESET});\n}\n\nexport function* userUpdateActionSaga({ payload }: { payload: Interfaces.UserDataUpdate }) {\n    const response = yield call(API.attemptUserDataUpdate, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.USER_DATA_UPDATE_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.USER_DATA_UPDATE_ERROR, payload: response.data});\n    }\n}\n\nexport function* userUpdateActiveActionSaga({ payload }: { payload: Interfaces.userActiveRequest }) {\n    const response = yield call(API.attemptUserActiveUpdate, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.USER_ACTIVE_UPDATE_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.USER_ACTIVE_UPDATE_ERROR, payload: response.data});\n    }\n}\n\nexport function* bookCreateActionSaga({ payload }: { payload: Interfaces.bookCreateRequest }) {\n    const response = yield call(API.attemptBookCreateRequest, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.BOOK_CREATE_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.BOOK_CREATE_ERROR, payload: response.data});\n    }\n}\n\nexport function* getBookListActionSaga({ payload }: { payload: Interfaces.getPageingListRequest }) {\n    const response = yield call(API.attemptGetBookListRequest, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.GET_BOOKS_LIST_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.GET_BOOKS_LIST_ERROR, payload: response.data});\n    }\n}\n\nexport function* getRecommendBookListActionSaga({ payload }: { payload: Interfaces.getRecommendRequest }) {\n    const response = yield call(API.attemptGetRecommendBookListRequest, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.GET_RECOMMEND_BOOKS_LIST_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.GET_RECOMMEND_BOOKS_LIST_ERROR, payload: response.data});\n    }\n}\n\n\nexport function* recommendBookAddActionSaga({ payload }: { payload: Interfaces.addRecommendBookRequest }) {\n    const response = yield call(API.attemptAddRecommendBookRequest, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.ADD_RECOMMEND_BOOKS_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.ADD_RECOMMEND_BOOKS_ERROR, payload: response.data});\n    }\n}\n\nexport function* recommendBookDeleteActionSaga({ payload }: { payload: Interfaces.deleteRecommendBookRequest }) {\n    const response = yield call(API.attemptDeleteRecommendBookRequest, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.DELETE_RECOMMEND_BOOKS_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.DELETE_RECOMMEND_BOOKS_ERROR, payload: response.data});\n    }\n}\n\n\n\nexport function* getBookActivityListActionSaga({ payload }: { payload: Interfaces.getGubunPageingListRequest }) {\n    const response = yield call(API.attemptGetBookActivityListRequest, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.GET_BOOKS_ACTIVITY_LIST_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.GET_BOOKS_ACTIVITY_LIST_ERROR, payload: response.data});\n    }\n}\n\nexport function* deleteBookActivityActionSaga({ payload }: { payload: Interfaces.deleteBookActivityRequest }) {\n    const response = yield call(API.attemptDeleteBookActivityRequest, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.DELETE_BOOKS_ACTIVITY_LIST_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.DELETE_BOOKS_ACTIVITY_LIST_ERROR, payload: response.data});\n    }\n}\n\n\nfunction* onPagesRequestWatcher() {\n    yield takeLatest(ActionType.GET_USER_LIST_REQUEST as any, getUserListActionSaga);\n    yield takeLatest(ActionType.GET_USER_INFO_REQUEST as any, getUserInfoActionSaga);\n    yield takeLatest(ActionType.USER_DATA_UPDATE_REQUEST as any, userUpdateActionSaga);\n    yield takeLatest(ActionType.USER_ACTIVE_UPDATE_REQUEST as any, userUpdateActiveActionSaga);\n    yield takeLatest(ActionType.BOOK_CREATE_REQUEST as any, bookCreateActionSaga);\n    yield takeLatest(ActionType.GET_BOOKS_LIST_REQUEST as any, getBookListActionSaga);\n    yield takeLatest(ActionType.GET_RECOMMEND_BOOKS_LIST_REQUEST as any, getRecommendBookListActionSaga);\n    yield takeLatest(ActionType.ADD_RECOMMEND_BOOKS_REQUEST as any, recommendBookAddActionSaga);\n    yield takeLatest(ActionType.DELETE_RECOMMEND_BOOKS_REQUEST as any, recommendBookDeleteActionSaga);\n    yield takeLatest(ActionType.GET_BOOKS_ACTIVITY_LIST_REQUEST as any, getBookActivityListActionSaga);\n    yield takeLatest(ActionType.DELETE_BOOKS_ACTIVITY_LIST_REQUEST as any, deleteBookActivityActionSaga);\n\n}\n\nexport default [\n    fork(onPagesRequestWatcher),\n]","export { default } from './reducer';\nexport * from './actions';\nexport * from './types';\nexport * from './sagas';","import { SiteDataState } from './types';\nimport { ActionType } from 'modules/ActionType';\nimport { createReducer } from \"typesafe-actions\";\nimport { siteBaseDataResponse } from 'modules/Interfaces';\n\nexport type Action<T> = {\n    type: ActionType;\n    payload: T;\n}\n\n/**\n * 사이트 기본 리듀서 이니셜 데이터\n */\nconst initialState: SiteDataState = {\n    state: 'idle',\n    code_list: [],\n}\n\n/**\n * 사이트 기본 정보 리듀셔\n */\nexport const getSiteDataReducer = createReducer<SiteDataState>(initialState, {\n   [ActionType.GET_ROOTDATA_REQUEST](state: SiteDataState){\n       return {\n           ...state,\n           state: 'loading',\n       };\n   },\n   [ActionType.GET_ROOTDATA_SUCCESS](state: SiteDataState,  action: Action<siteBaseDataResponse>){\n        return {\n            ...state,\n            state: 'success',\n            code_list: action.payload.items.code_list\n        };\n    },\n    [ActionType.GET_ROOTDATA_ERROR](state: SiteDataState, action: Action<siteBaseDataResponse>) {\n        return {\n            ...state,\n            state: 'failure'\n        }\n    },\n});\nexport default getSiteDataReducer;","import { ActionType } from \"modules/ActionType\";\n\nexport const getRootDataAction = () => {\n    return {\n        type:ActionType.GET_ROOTDATA_REQUEST\n    };\n}\n","import { ActionType } from 'modules/ActionType';\nimport { createReducer } from \"typesafe-actions\";\nimport { LoginState } from './types';\nimport { defaultServerResponse, loginState } from 'modules/Interfaces';\n\n\ntype Action<T> = {\n    type: ActionType;\n    payload: T;\n}\n\nconst initialState: LoginState = {\n    state: 'idle',\n    data: {}\n}\n\nexport const loginActionReducer = createReducer<loginState>(initialState, {\n    [ActionType.LOGIN_DATA_REQUEST](state: loginState) {\n        return {\n            ...state,\n            state: 'loading',\n        };\n    },\n    [ActionType.LOGIN_DATA_SUCCESS](state: loginState, action: Action<defaultServerResponse>) {\n        return {\n            ...state,\n            state: 'success',\n            data: {\n                token_type: action.payload.token_type,\n                expires_in: action.payload.expires_in,\n                access_token: action.payload.access_token,\n                refresh_token: action.payload.refresh_token,\n                user_name: action.payload.user_name,\n            }\n        };\n    },\n    [ActionType.LOGIN_DATA_ERROR](state: loginState, action: Action<defaultServerResponse>) {\n        return {\n            ...state,\n            state: 'failure',\n            message: action.payload.message\n        };\n    },\n    [ActionType.LOGIN_DATA_RESET](state: loginState) {\n        return {\n            ...state,\n            state: 'idle',\n            data: {}\n        };\n    }\n});\n\nexport default loginActionReducer;","import { ActionType } from 'modules/ActionType';\nimport { loginRequest } from 'modules/Interfaces';\n\nexport const attemptLoginAction = (payload: loginRequest) => {\n    return {\n        type: ActionType.LOGIN_DATA_REQUEST,\n        payload\n    }\n}\n\nexport const attemptLoginResetAction = () => {\n    return {\n        type: ActionType.LOGIN_DATA_RESET,\n    }\n}","import { ActionType } from 'modules/ActionType';\nimport { createReducer } from \"typesafe-actions\";\nimport { PageState } from './types';\nimport * as Interfaces from 'modules/Interfaces';\n\ntype Action<T> = {\n    type: ActionType;\n    payload: T;\n}\n\nconst initialState: PageState = {\n    users: {\n        user_list: {\n            state: 'idle',\n        },\n        user_info: {\n            state: 'idle',\n        },\n        user_data_update : {\n            state: 'idle',\n        },\n        user_active_update : {\n            state: 'idle',\n        },\n    },\n    books:{\n        book_create : {\n            state: 'idle',\n        },\n        book_list : {\n            state: 'idle',\n        },\n        recommend_book_list : {\n            state: 'idle',\n        },\n        delete_recommend_book : {\n            state: 'idle',\n        },\n        add_recommend_book : {\n            state: 'idle',\n        },\n        book_activity_list : {\n            state: 'idle',\n        },\n        delete_book_activity : {\n            state: 'idle',\n        }\n    }\n}\n\nexport const pagesActionReducer = createReducer<PageState>(initialState, {\n    [ActionType.GET_USER_LIST_REQUEST](state: PageState) {\n        return {\n            ...state,\n            users: {\n                user_list: {\n                    state: 'loading',\n                },\n                user_info: state.users.user_info,\n                user_data_update: state.users.user_data_update,\n                user_active_update : state.users.user_active_update,\n            },\n        }\n    },\n    [ActionType.GET_USER_LIST_SUCCESS](state: PageState, action: Action<Interfaces.listTypeServerResponse>) {\n        return {\n            ...state,\n            users: {\n                user_list: {\n                    state: 'success',\n                    list: action.payload\n                },\n                user_info: state.users.user_info,\n                user_data_update: state.users.user_data_update,\n                user_active_update : state.users.user_active_update,\n            },\n        };\n    },\n    [ActionType.GET_USER_LIST_ERROR](state: PageState, action: Action<Interfaces.listTypeServerResponse>) {\n        return {\n            ...state,\n            users: {\n                user_list: {\n                    state: 'failure',\n                },\n                user_info: state.users.user_info,\n                user_data_update: state.users.user_data_update,\n                user_active_update : state.users.user_active_update,\n            },\n        };\n    },\n\n    [ActionType.GET_USER_INFO_REQUEST](state: PageState) {\n        return {\n            ...state,\n            users: {\n                user_list: state.users.user_list,\n                user_info: {\n                    state: 'loading',\n                },\n                user_data_update: state.users.user_data_update,\n                user_active_update : state.users.user_active_update,\n            },\n        };\n    },\n    [ActionType.GET_USER_INFO_SUCCESS](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            users: {\n                user_list: state.users.user_list,\n                user_info: {\n                    state: 'success',\n                    data: action.payload\n                },\n                user_data_update: state.users.user_data_update,\n                user_active_update : state.users.user_active_update,\n            },\n        };\n    },\n    [ActionType.GET_USER_INFO_ERROR](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            users: {\n                user_list: state.users.user_list,\n                user_info: {\n                    state: 'failure',\n                },\n                user_data_update: state.users.user_data_update,\n                user_active_update : state.users.user_active_update,\n            },\n        };\n    },\n    [ActionType.GET_USER_INFO_RESET](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            users: {\n                user_list: state.users.user_list,\n                user_info: {\n                    state: 'idle',\n                },\n                user_data_update: state.users.user_data_update,\n                user_active_update : state.users.user_active_update,\n            },\n        };\n    },\n    [ActionType.USER_DATA_UPDATE_SUCCESS](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            users: {\n                user_list: state.users.user_list,\n                user_info: state.users.user_info,\n                user_data_update: {\n                    state: 'success',\n                },\n                user_active_update : state.users.user_active_update,\n            },\n        };\n    },\n    [ActionType.USER_DATA_UPDATE_ERROR](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            users: {\n                user_list: state.users.user_list,\n                user_info: state.users.user_info,\n                user_data_update: {\n                    state: 'failure',\n                },\n                user_active_update : state.users.user_active_update,\n            },\n        };\n    },\n    [ActionType.USER_ACTIVE_UPDATE_REQUEST](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            users: {\n                user_list: state.users.user_list,\n                user_info: state.users.user_info,\n                user_data_update: state.users.user_info,\n                user_active_update : {\n                    state: 'loading'\n                },\n            },\n        };\n    },\n    [ActionType.USER_ACTIVE_UPDATE_SUCCESS](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            users: {\n                user_list: state.users.user_list,\n                user_info: state.users.user_info,\n                user_data_update: state.users.user_info,\n                user_active_update : {\n                    state: 'success'\n                },\n            },\n        };\n    },\n    [ActionType.USER_ACTIVE_UPDATE_ERROR](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            users: {\n                user_list: state.users.user_list,\n                user_info: state.users.user_info,\n                user_data_update: state.users.user_data_update,\n                user_active_update : {\n                    state: 'failure'\n                },\n            },\n        };\n    },\n    [ActionType.BOOK_CREATE_REQUEST](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : {\n                    state: 'loading'\n                },\n                book_list : state.books.book_list,\n                recommend_book_list : state.books.recommend_book_list,\n                delete_recommend_book : state.books.delete_recommend_book,\n                add_recommend_book : state.books.add_recommend_book,\n                book_activity_list : state.books.book_activity_list,\n                delete_book_activity : state.books.delete_book_activity,\n            }\n        };\n    },\n    [ActionType.BOOK_CREATE_SUCCESS](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : {\n                    state: 'success',\n                    info: action.payload.data\n                },\n                book_list : state.books.book_list,\n                recommend_book_list : state.books.recommend_book_list,\n                delete_recommend_book : state.books.delete_recommend_book,\n                add_recommend_book : state.books.add_recommend_book,\n                book_activity_list : state.books.book_activity_list,\n                delete_book_activity : state.books.delete_book_activity,\n            }\n        };\n    },\n    [ActionType.BOOK_CREATE_ERROR](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : {\n                    state: 'failure'\n                },\n                book_list : state.books.book_list,\n                recommend_book_list : state.books.recommend_book_list,\n                delete_recommend_book : state.books.delete_recommend_book,\n                add_recommend_book : state.books.add_recommend_book,\n                book_activity_list : state.books.book_activity_list,\n                delete_book_activity : state.books.delete_book_activity,\n            }\n        };\n    },\n    [ActionType.GET_BOOKS_LIST_REQUEST](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : state.books.book_create,\n                book_list : {\n                    state: 'loading'\n                },\n                recommend_book_list : state.books.recommend_book_list,\n                delete_recommend_book : state.books.delete_recommend_book,\n                add_recommend_book : state.books.add_recommend_book,\n                book_activity_list : state.books.book_activity_list,\n                delete_book_activity : state.books.delete_book_activity,\n            }\n        };\n    },\n    [ActionType.GET_BOOKS_LIST_SUCCESS](state: PageState, action: Action<Interfaces.booklistTypeServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : state.books.book_create,\n                book_list : {\n                    state: 'success',\n                    list: action.payload\n                },\n                recommend_book_list : state.books.recommend_book_list,\n                delete_recommend_book : state.books.delete_recommend_book,\n                add_recommend_book : state.books.add_recommend_book,\n                book_activity_list : state.books.book_activity_list,\n                delete_book_activity : state.books.delete_book_activity,\n            }\n        };\n    },\n    [ActionType.GET_BOOKS_LIST_ERROR](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : state.books.book_create,\n                book_list : {\n                    state: 'failure'\n                },\n                recommend_book_list : state.books.recommend_book_list,\n                delete_recommend_book : state.books.delete_recommend_book,\n                add_recommend_book : state.books.add_recommend_book,\n                book_activity_list : state.books.book_activity_list,\n                delete_book_activity : state.books.delete_book_activity,\n            }\n        };\n    },\n    [ActionType.GET_RECOMMEND_BOOKS_LIST_REQUEST](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : state.books.book_create,\n                book_list : state.books.book_list,\n                recommend_book_list : {\n                    state: 'loading'\n                },\n                delete_recommend_book : state.books.delete_recommend_book,\n                add_recommend_book : state.books.add_recommend_book,\n                book_activity_list : state.books.book_activity_list,\n                delete_book_activity : state.books.delete_book_activity,\n            }\n        };\n    },\n    [ActionType.GET_RECOMMEND_BOOKS_LIST_SUCCESS](state: PageState, action: Action<Interfaces.RecommendlistTypeServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : state.books.book_create,\n                book_list : state.books.book_list,\n                recommend_book_list : {\n                    state: 'success',\n                    list: action.payload\n                },\n                delete_recommend_book : state.books.delete_recommend_book,\n                add_recommend_book : state.books.add_recommend_book,\n                book_activity_list : state.books.book_activity_list,\n                delete_book_activity : state.books.delete_book_activity,\n            }\n        };\n    },\n    [ActionType.GET_RECOMMEND_BOOKS_LIST_ERROR](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : state.books.book_create,\n                book_list : state.books.book_list,\n                recommend_book_list : {\n                    state: 'failure'\n                },\n                delete_recommend_book : state.books.delete_recommend_book,\n                add_recommend_book : state.books.add_recommend_book,\n                book_activity_list : state.books.book_activity_list,\n                delete_book_activity : state.books.delete_book_activity,\n            }\n        };\n    },\n    [ActionType.DELETE_RECOMMEND_BOOKS_REQUEST](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : state.books.book_create,\n                book_list : state.books.book_list,\n                recommend_book_list : state.books.recommend_book_list,\n                delete_recommend_book : {\n                    state: 'loading'\n                },\n                add_recommend_book : state.books.add_recommend_book,\n                book_activity_list : state.books.book_activity_list,\n                delete_book_activity : state.books.delete_book_activity,\n            }\n        };\n    },\n    [ActionType.DELETE_RECOMMEND_BOOKS_SUCCESS](state: PageState, action: Action<Interfaces.RecommendlistTypeServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : state.books.book_create,\n                book_list : state.books.book_list,\n                recommend_book_list : state.books.recommend_book_list,\n                delete_recommend_book : {\n                    state: 'success'\n                },\n                add_recommend_book : state.books.add_recommend_book,\n                book_activity_list : state.books.book_activity_list,\n                delete_book_activity : state.books.delete_book_activity,\n            }\n        };\n    },\n    [ActionType.DELETE_RECOMMEND_BOOKS_ERROR](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : state.books.book_create,\n                book_list : state.books.book_list,\n                recommend_book_list : state.books.recommend_book_list,\n                delete_recommend_book : {\n                    state: 'failure'\n                },\n                add_recommend_book : state.books.add_recommend_book,\n                book_activity_list : state.books.book_activity_list,\n                delete_book_activity : state.books.delete_book_activity,\n            }\n        };\n    },\n    [ActionType.ADD_RECOMMEND_BOOKS_REQUEST](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : state.books.book_create,\n                book_list : state.books.book_list,\n                recommend_book_list : state.books.recommend_book_list,\n                delete_recommend_book : state.books.delete_recommend_book,\n                add_recommend_book : {\n                    'state': 'loading'\n                },\n                book_activity_list : state.books.book_activity_list,\n                delete_book_activity : state.books.delete_book_activity,\n            }\n        };\n    },\n    [ActionType.ADD_RECOMMEND_BOOKS_SUCCESS](state: PageState, action: Action<Interfaces.RecommendlistTypeServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : state.books.book_create,\n                book_list : state.books.book_list,\n                recommend_book_list : state.books.recommend_book_list,\n                delete_recommend_book : state.books.delete_recommend_book,\n                add_recommend_book : {\n                    'state': 'success'\n                },\n                book_activity_list : state.books.book_activity_list,\n                delete_book_activity : state.books.delete_book_activity,\n            }\n        };\n    },\n    [ActionType.ADD_RECOMMEND_BOOKS_ERROR](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : state.books.book_create,\n                book_list : state.books.book_list,\n                recommend_book_list : state.books.recommend_book_list,\n                delete_recommend_book : state.books.delete_recommend_book,\n                add_recommend_book : {\n                    'state': 'failure'\n                },\n                book_activity_list : state.books.book_activity_list,\n                delete_book_activity : state.books.delete_book_activity,\n            }\n        };\n    },\n    [ActionType.GET_BOOKS_ACTIVITY_LIST_REQUEST](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : state.books.book_create,\n                book_list : state.books.book_list,\n                recommend_book_list : state.books.recommend_book_list,\n                delete_recommend_book : state.books.delete_recommend_book,\n                add_recommend_book : state.books.add_recommend_book,\n                book_activity_list : {\n                    state: 'loading'\n                },\n                delete_book_activity : state.books.delete_book_activity,\n            }\n        };\n    },\n    [ActionType.GET_BOOKS_ACTIVITY_LIST_SUCCESS](state: PageState, action: Action<Interfaces.activitylistTypeServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : state.books.book_create,\n                book_list : state.books.book_list,\n                recommend_book_list : state.books.recommend_book_list,\n                delete_recommend_book : state.books.delete_recommend_book,\n                add_recommend_book : state.books.add_recommend_book,\n                book_activity_list : {\n                    state: 'success',\n                    list:action.payload\n                },\n                delete_book_activity : state.books.delete_book_activity,\n            }\n        };\n    },\n    [ActionType.GET_BOOKS_ACTIVITY_LIST_ERROR](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : state.books.book_create,\n                book_list : state.books.book_list,\n                recommend_book_list : state.books.recommend_book_list,\n                delete_recommend_book : state.books.delete_recommend_book,\n                add_recommend_book : state.books.add_recommend_book,\n                book_activity_list : {\n                    state: 'failure'\n                },\n                delete_book_activity : state.books.delete_book_activity,\n            }\n        };\n    },\n    [ActionType.DELETE_BOOKS_ACTIVITY_LIST_REQUEST](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : state.books.book_create,\n                book_list : state.books.book_list,\n                recommend_book_list : state.books.recommend_book_list,\n                delete_recommend_book : state.books.delete_recommend_book,\n                add_recommend_book : state.books.add_recommend_book,\n                book_activity_list : state.books.book_activity_list,\n                delete_book_activity : {\n                    state: 'loading'\n                },\n            }\n        };\n    },\n    [ActionType.DELETE_BOOKS_ACTIVITY_LIST_SUCCESS](state: PageState, action: Action<Interfaces.activitylistTypeServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : state.books.book_create,\n                book_list : state.books.book_list,\n                recommend_book_list : state.books.recommend_book_list,\n                delete_recommend_book : state.books.delete_recommend_book,\n                add_recommend_book : state.books.add_recommend_book,\n                book_activity_list : state.books.book_activity_list,\n                delete_book_activity : {\n                    state: 'success',\n                },\n            }\n        };\n    },\n    [ActionType.DELETE_BOOKS_ACTIVITY_LIST_ERROR](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                book_create : state.books.book_create,\n                book_list : state.books.book_list,\n                recommend_book_list : state.books.recommend_book_list,\n                delete_recommend_book : state.books.delete_recommend_book,\n                add_recommend_book : state.books.add_recommend_book,\n                book_activity_list : state.books.book_activity_list,\n                delete_book_activity : {\n                    state: 'failure'\n                },\n            }\n        };\n    }\n\n\n\n});\n\nexport default pagesActionReducer;","import { ActionType } from 'modules/ActionType';\nimport * as Interfaces from 'modules/Interfaces';\n\nexport const attemptGetUserListAction = (payload: Interfaces.getUserListRequest) => {\n    return {\n        type: ActionType.GET_USER_LIST_REQUEST,\n        payload\n    };\n}\n\nexport const attemptGetBooksListAction = (payload: Interfaces.getPageingListRequest) => {\n    return {\n        type: ActionType.GET_BOOKS_LIST_REQUEST,\n        payload\n    };\n}\n\nexport const attemptGetUserInfoAction = (payload: Interfaces.getUserInfoRequest) => {\n    return {\n        type: ActionType.GET_USER_INFO_REQUEST,\n        payload\n    };\n}\n\nexport const attemptGetUserInfoResetAction = () => {\n    return {\n        type: ActionType.GET_USER_INFO_RESET\n    };\n}\n\nexport const attemptUserDataUpdateAction = (payload: Interfaces.UserDataUpdate) => {\n    return {\n        type: ActionType.USER_DATA_UPDATE_REQUEST,\n        payload\n    };\n}\n\nexport const attemptUserActiveUpdateAction = (payload: Interfaces.userActiveRequest) => {\n    return {\n        type: ActionType.USER_ACTIVE_UPDATE_REQUEST,\n        payload\n    };\n}\n\nexport const attemptBookCreateAction = (payload: Interfaces.bookCreateRequest) => {\n    return {\n        type: ActionType.BOOK_CREATE_REQUEST,\n        payload\n    };\n}\n\nexport const attemptRecommendBookListAction = (payload: Interfaces.getRecommendRequest) => {\n    return {\n        type: ActionType.GET_RECOMMEND_BOOKS_LIST_REQUEST,\n        payload\n    };\n}\n\nexport const attemptAddRecommendBookAction = (payload: Interfaces.addRecommendBookRequest) => {\n    return {\n        type: ActionType.ADD_RECOMMEND_BOOKS_REQUEST,\n        payload\n    };\n}\n\nexport const attemptDeleteRecommendBookAction = (payload: Interfaces.deleteRecommendBookRequest) => {\n    return {\n        type: ActionType.DELETE_RECOMMEND_BOOKS_REQUEST,\n        payload\n    };\n}\n\nexport const attemptGetBookActivityListAction = (payload: Interfaces.getGubunPageingListRequest) => {\n    return {\n        type: ActionType.GET_BOOKS_ACTIVITY_LIST_REQUEST,\n        payload\n    };\n}\n\nexport const attemptDeleteBookActivityAction = (payload: Interfaces.deleteBookActivityRequest) => {\n    return {\n        type: ActionType.DELETE_BOOKS_ACTIVITY_LIST_REQUEST,\n        payload\n    };\n}"],"sourceRoot":""}