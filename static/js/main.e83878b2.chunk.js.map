{"version":3,"sources":["modules/redux/index.ts","components/elements/LoadingSpinner.tsx","components/elements/form/LoginForm.tsx","components/elements/form/UserDetailForm.tsx","components/elements/form/BookCreateForm.tsx","components/elements/table/DefaultUserListTable.tsx","components/elements/table/BookSearchListTable.tsx","components/elements/table/BooksListTable.tsx","components/elements/table/RecommendBooksListTable.tsx","components/elements/table/BooksActivityListTable.tsx","components/elements/table/UserInfoTable.tsx","components/elements/common/Sidebar.tsx","components/elements/common/Topbar.tsx","components/elements/common/Footer.tsx","components/elements/common/topbar/TopbarMessages.tsx","components/elements/common/topbar/TopbarInformation.tsx","components/elements/common/Pagination.tsx","components/elements/ListSkeletonComponent.tsx","components/elements/InfoSkeletonComponent.tsx","components/elements/SearchSkeletonComponent.tsx","components/elements/etc/ImageComponent.tsx","components/pages/LoginPage.tsx","hook/useLogin.ts","components/pages/UsersPage.tsx","hook/useUserPage.ts","components/pages/BooksListPage.tsx","hook/useBooksList.ts","components/pages/RecommendBooksListPage.tsx","hook/useRecommendBooksList.ts","components/pages/BookActivityListPage.tsx","hook/useActivity.ts","components/pages/UserDetail.tsx","hook/useDetail.ts","hook/useUserInfo.ts","components/pages/UserInfoPage.tsx","components/pages/BookCreatePage.tsx","hook/useBookCreate.ts","components/pages/TestPage.tsx","components/pages/sample/BlankPage.tsx","routes/Root.tsx","App.tsx","modules/configureStore.ts","serviceWorker.ts","index.tsx","modules/redux/pages/index.ts","routes/History.tsx","lib/Helper.ts","lib/GlobalAxios.ts","lib/API.ts","modules/ActionType.ts","lib/GlobalAlert.ts","modules/redux/logins/index.ts","modules/redux/sitedatas/sagas.ts","modules/redux/logins/sagas.ts","modules/redux/pages/sagas.ts","modules/redux/sitedatas/index.ts","modules/redux/sitedatas/reducer.ts","modules/redux/sitedatas/actions.ts","modules/redux/logins/reducer.ts","modules/redux/logins/actions.ts","modules/redux/pages/reducer.ts","modules/redux/pages/actions.ts"],"names":["rootSaga","rootReducer","history","combineReducers","router","connectRouter","sitedata","sitedatas","login_state","logins","pages_state","pages","all","SitedatasSaga","loginActionSaga","PageActionSaga","LoadingSpinner","radius","color","stroke","visible","LoginForm","inputEmail","inputPassword","handelRememberme","handleChangeEmail","handleChangePassword","handleClickLoginLink","handleRememberMeCheckbox","handleEnterKeyPress","onEnter","event","key","className","type","id","aria-describedby","placeholder","value","onChange","e","target","onKeyPress","checked","htmlFor","href","onClick","UserDetailForm","useformcode","userdetaildata","handleUserEmailChange","handleUserNameChange","handleUserTypeChange","handleUserStateChange","handleUserLevelChange","handleUseDataSubmit","user_email","user_name","user_type","type_code","map","item","i","user_state","state_code","user_level","level_code","BookCreateForm","bookSearchString","handleBookSearchButtonClick","handleBookSearchInputCange","onSubmit","preventDefault","DefaultUserListTable","isloading","items","handleUserInfoLink","handleUserInfoPageLink","handleUserActiveUpdateLink","handleUserActiveDeleteLink","colSpan","style","height","display","justifyContent","alignItems","email","uuid","name","code_name","state","level","read_book_count","activity_count","created_at_atring","active","DefaultSearchListTable","handleClickBookCreate","src","thumbnail","alt","title","status","isbn","contents","authors","BooksListTable","handleClickRecommendAddButton","handleClickRecommendDeleteButton","recommend","ImageComponent","image_url","RecommendBooksListTable","handleClickDeleteButton","book_thumbnail","book_title","book_user_name","book_contents","book_id","BooksActivityListTable","handleClickActivityDeleteButton","gubun_name","created_at_string","list_uid","UserInfoTable","userInfoData","user_uuid","user_activity_state","upload_book_count","updated_at_string","email_verified_at_string","Sidebar","to","process","data-toggle","data-target","aria-expanded","aria-controls","Topbar","role","aria-haspopup","aria-labelledby","aria-label","Footer","TopbarMessages","TopbarInformation","Helper","GlobalAlert","thenLocationReload","text","Pagination","handlePaginate","listpagedata","previousLabel","nextLabel","breakLabel","pageCount","Number","last_page","marginPagesDisplayed","pageRangeDisplayed","onPageChange","breakClassName","breakLinkClassName","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","activeClassName","ListSkeletonComponent","props","ListTable","InfoSkeletonComponent","InfoTable","SearchSkeletonComponent","SearchTable","Image","styled","img","imageBox","LoginPage","document","body","classList","add","useSelector","loginState","useMemo","dispatch","useDispatch","useState","setInputEmail","setInputPassword","rememberme","setRememberme","__handleChangeEmail","useEffect","cookieManager","get","Promise","resolve","reject","setLoginInfo","token_type","data","expires_in","access_token","refresh_token","attemptLoginResetAction","then","__handleChangePassword","password","__handleClickLoginLink","set","dataObject","attemptLoginAction","__handleRememberMeCheckbox","remove","__handleEnterKeyPress","useLogin","message","error","thenHistoryPush","push_router","push","UsersPage","params","useParams","state_user_list","users","user_list","state_user_info","user_info","state_user_active_update","user_active_update","userListItems","setUserListItems","setUserInfoData","current_page","from","per_page","prev_page_url","total","first_page","next_page","prev_page","listPageData","setlistPageData","isLoading","setIsLoading","__handleClickUserInfoConfirmButton","a","attemptGetUserInfoResetAction","undefined","list","attemptGetUserListAction","pageNumber","page_number","loadingState","idleState","__handleClickUserInfoLink","__handlePaginate","selected_page","selected","__handleClickUserInfoPage","__handleUserActiveUpdateLink","attemptUserActiveUpdateAction","__handleUserActiveDeleteLink","alert","useUserPage","BooksListPage","state_book_list","books","book_list","state_add_recommend_book","add_recommend_book","state_delete_recommend_book","delete_recommend_book","state_sitedata","booksListItems","setBooksListItems","__handleClickRecommendAddButton","Swal","fire","input","inputOptions","code_list","code","inputPlaceholder","showCancelButton","inputValidator","gubun","select_gubun","attemptAddRecommendBookAction","attemptGetBooksListAction","__handleClickRecommendDeleteButton","attemptDeleteRecommendBookAction","useBooksList","RecommendBooksListPage","recommend_book_list","attemptRecommendBookListAction","__handleClickDeleteButton","useRecommendBooksList","BookActivityListPage","state_book_activity_list","book_activity_list","dtate_delete_book_activity","delete_book_activity","booksActivityListItems","setBooksActivityListItems","attemptGetBookActivityListAction","__handleClickActivityDeleteButton","attemptDeleteBookActivityAction","activity_uuid","useActivity","UserDetail","state_user_data_update","user_data_update","useFormCode","setUserFormCode","user_id","userDetailPageData","setUserDetailPageData","user_type_code","user_state_code","user_level_code","attemptGetUserInfoAction","__handleUserEmailChange","__handleUserNameChange","__handleUserTypeChange","__handleUserStateChange","__handleUserLevelChange","__handleUseDataSubmit","attemptUserDataUpdateAction","__handleUserInfoReset","useDetail","user_active","user_created_at","updated_at","userInfoItems","setUserInfoItems","UserInfoPage","useUserInfo","BookCreatePage","state_books","setBookSearchString","bookSearchResultItem","setBookSearchResultItem","searchDaumBookApi","length","axios","headers","res","documents","default","book_create","attemptBookCreateResetAction","__handleBookSearchButtonClick","__handleBookSearchInputCange","__handleClickBookServerCreate","state_key","book_info","split","n","API","book_uuid","info","attemptBookCreateAction","join","publisher","useBookCreate","BookSearchListTable","TestPage","BlankPage","data-parent","tabIndex","aria-hidden","data-dismiss","Root","Routerhistory","router_state","sitedata_state","location","pathname","getRootDataAction","path","exact","component","store","initialState","compose","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","applyMiddleware","routerMiddleware","createStore","run","configureStore","createBrowserHistory","window","INITIAL_REDUX_STATE","App","basename","History","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","getAccessToken","getRefreshToken","payload","setLoginInfoRefresh","removeLoginInfo","cname","cvalue","hours","d","Date","setTime","getTime","expires","toUTCString","cookie","ca","c","charAt","substring","indexOf","promise","axiosPromise","response","error_message","request","Error","start","authType","method","endpoint","defaultAxiosinstance","create","baseURL","timeout","post","put","delete","attemptLogin","GlobalAxios","getSiteData","attemptGetUserList","attemptGetUserInfo","attemptUserDataUpdate","attemptUserActiveUpdate","attemptBookExitsCheckRequest","attemptBookCreateRequest","attemptGetBookListRequest","attemptGetRecommendBookListRequest","attemptAddRecommendBookRequest","attemptDeleteRecommendBookRequest","attemptGetBookActivityListRequest","attemptDeleteBookActivityRequest","ActionType","SwalAlert","alertOption","push_target","reload","defaultUserInfo","html","cancelButtonText","cancelButtonAriaLabel","icon","this","withReactContent","getSiteDataSaga","onSiteDataRequestWatcher","call","GET_ROOTDATA_SUCCESS","GET_ROOTDATA_ERROR","takeLatest","GET_ROOTDATA_REQUEST","fork","onLoginRequestWatcher","LOGIN_DATA_SUCCESS","LOGIN_DATA_ERROR","LOGIN_DATA_REQUEST","getUserListActionSaga","getUserInfoActionSaga","userUpdateActionSaga","userUpdateActiveActionSaga","bookCreateActionSaga","getBookListActionSaga","getRecommendBookListActionSaga","recommendBookAddActionSaga","recommendBookDeleteActionSaga","recommendBookDeleteResetActionSaga","getBookActivityListActionSaga","deleteBookActivityActionSaga","onPagesRequestWatcher","GET_USER_LIST_SUCCESS","GET_USER_LIST_ERROR","GET_USER_INFO_SUCCESS","GET_USER_INFO_ERROR","USER_DATA_UPDATE_SUCCESS","USER_DATA_UPDATE_ERROR","USER_ACTIVE_UPDATE_SUCCESS","USER_ACTIVE_UPDATE_ERROR","BOOK_CREATE_SUCCESS","BOOK_CREATE_ERROR","GET_BOOKS_LIST_SUCCESS","GET_BOOKS_LIST_ERROR","GET_RECOMMEND_BOOKS_LIST_SUCCESS","GET_RECOMMEND_BOOKS_LIST_ERROR","ADD_RECOMMEND_BOOKS_SUCCESS","ADD_RECOMMEND_BOOKS_ERROR","DELETE_RECOMMEND_BOOKS_SUCCESS","DELETE_RECOMMEND_BOOKS_ERROR","DELETE_RECOMMEND_BOOKS_RESET","GET_BOOKS_ACTIVITY_LIST_SUCCESS","GET_BOOKS_ACTIVITY_LIST_ERROR","DELETE_BOOKS_ACTIVITY_LIST_SUCCESS","DELETE_BOOKS_ACTIVITY_LIST_ERROR","GET_USER_LIST_REQUEST","GET_USER_INFO_REQUEST","USER_DATA_UPDATE_REQUEST","USER_ACTIVE_UPDATE_REQUEST","BOOK_CREATE_REQUEST","GET_BOOKS_LIST_REQUEST","GET_RECOMMEND_BOOKS_LIST_REQUEST","ADD_RECOMMEND_BOOKS_REQUEST","DELETE_RECOMMEND_BOOKS_REQUEST","GET_BOOKS_ACTIVITY_LIST_REQUEST","DELETE_BOOKS_ACTIVITY_LIST_REQUEST","getSiteDataReducer","createReducer","action","loginActionReducer","LOGIN_DATA_RESET","pagesActionReducer","Object","assign","GET_USER_INFO_RESET","BOOK_CREATE_RESET"],"mappings":"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","file":"static/js/main.e83878b2.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { connectRouter, RouterState } from 'connected-react-router'\nimport { History } from 'history'\nimport { all } from 'redux-saga/effects';\nimport sitedatas, { SiteDataState } from './sitedatas';\nimport  SitedatasSaga from './sitedatas/sagas';\n\nimport logins ,{ LoginState } from './logins';\nimport loginActionSaga from './logins/sagas';\n\nimport pages ,{ PageState } from './pages';\nimport PageActionSaga from './pages/sagas';\n\nexport interface RootState {\n    router: RouterState,\n    sitedata: SiteDataState,\n    login_state: LoginState\n    pages_state: PageState\n}\n\nconst rootReducer = (history: History) => combineReducers({\n    router: connectRouter(history),\n    sitedata: sitedatas,\n    login_state: logins,\n    pages_state: pages,\n});\n\nexport default rootReducer;\n\nexport function* rootSaga() {\n    yield all(\n        [\n            // getSiteDataSaga(),\n            ...SitedatasSaga,\n            ...loginActionSaga,\n            ...PageActionSaga\n        ]\n    );\n}","import React from 'react';\nimport Spinner from 'react-spinner-material';\n\n/**\n * 런치 스크린용 로딩 페이지.\n */\nexport default function LoadingSpinner() {\n    return (\n        <>\n            <Spinner radius={30} color={\"#333333\"} stroke={5} visible={true} />\n        </>\n    );\n}","import React, {MouseEvent, ChangeEvent, KeyboardEvent} from 'react';\n\ninterface LoginFormProps  {\n    inputEmail: string;\n    inputPassword: string;\n    handelRememberme: boolean;\n    handleChangeEmail: ( email: string ) => void;\n    handleChangePassword: ( password: string ) => void;\n    handleClickLoginLink: ( event: MouseEvent ) => void;\n    handleEnterKeyPress: () => void;\n    handleRememberMeCheckbox: ( event: ChangeEvent<HTMLInputElement> ) => void;\n};\n\nfunction LoginForm({inputEmail, inputPassword, handelRememberme, handleChangeEmail, handleChangePassword, handleClickLoginLink, handleRememberMeCheckbox, handleEnterKeyPress}: LoginFormProps ) {\n    const onEnter = (event: KeyboardEvent<HTMLInputElement>) => event.key === 'Enter' && handleEnterKeyPress();\n\n    return (\n        <>\n            <form className=\"user\">\n                <div className=\"form-group\">\n                    <input\n                        type=\"email\"\n                        className=\"form-control form-control-user\"\n                        id=\"exampleInputEmail\"\n                        aria-describedby=\"emailHelp\"\n                        placeholder=\"이메일을 입력해 주세요....\"\n                        value={inputEmail}\n                        onChange={ e => handleChangeEmail(e.target.value) }\n                        onKeyPress={e => onEnter(e)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        className=\"form-control form-control-user\"\n                        id=\"exampleInputPassword\"\n                        placeholder=\"비밀번호를 입력해 주세요...\"\n                        value={inputPassword}\n                        onChange={ e => handleChangePassword(e.target.value) }\n                        onKeyPress={e => onEnter(e)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox small\">\n                        <input\n                            type=\"checkbox\"\n                            className=\"custom-control-input\"\n                            id=\"customCheck\"\n                            checked={handelRememberme}\n                            onChange={ e => handleRememberMeCheckbox(e)}\n                        />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck\">Remember Me</label>\n                    </div>\n                </div>\n                <a href=\"null\"\n                    className=\"btn btn-primary btn-user btn-block\"\n                    onClick={(e: MouseEvent) => handleClickLoginLink(e)}\n                >Login</a>\n            </form>\n        </>\n    );\n}\n\nexport default LoginForm;","import React, { MouseEvent} from 'react';\n// import { defaultServerResponse, userDetailData } from 'modules/Interfaces';\n\ninterface initialProps  {\n    useformcode: any;\n    userdetaildata: any;\n\n    handleUserEmailChange: (e: string) => void;\n    handleUserNameChange: (e: string) => void;\n    handleUserTypeChange: (e: string) => void;\n    handleUserStateChange: (e: string) => void;\n    handleUserLevelChange: (e: string) => void;\n\n    handleUseDataSubmit: ( event: MouseEvent) => void;\n};\n\nfunction UserDetailForm({\n    useformcode,\n    userdetaildata,\n    handleUserEmailChange,\n    handleUserNameChange,\n    handleUserTypeChange,\n    handleUserStateChange,\n    handleUserLevelChange,\n    handleUseDataSubmit,\n } : initialProps) {\n    return (\n        <>\n            <form className=\"user\">\n                <div className=\"form-group\">\n                    <div className=\"mb-3 mb-sm-0\">\n                        <input type=\"text\" className=\"form-control form-control-user\" placeholder=\"사용자 이메일\" onChange={ e => handleUserEmailChange(e.target.value)} value={userdetaildata.user_email}/>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"mb-3 mb-sm-0\">\n                        <input type=\"text\" className=\"form-control form-control-user\" placeholder=\"사용자 이름\" onChange={ e => handleUserNameChange(e.target.value)} value={userdetaildata.user_name}/>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"mb-3 mb-sm-0\">\n                        <select className=\"form-control\" id=\"user_type\"\n                            onChange={ e => handleUserTypeChange(e.target.value)}\n                            value={userdetaildata.user_type}\n                        >\n                        {useformcode && useformcode.type_code.map((item: any, i: any) => {\n                                return <option key={item['code_id']} value={item['code_id']}>{item['code_name']}</option>\n                            })\n                        }\n                        </select>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"mb-3 mb-sm-0\">\n                    <select className=\"form-control\" id=\"user_state\"\n                            onChange={ e => handleUserStateChange(e.target.value)}\n                            value={userdetaildata.user_state}\n                        >\n                        {useformcode && useformcode.state_code.map((item: any, i: any) => {\n                                return <option key={item['code_id']} value={item['code_id']}>{item['code_name']}</option>\n                            })\n                        }\n                        </select>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"mb-3 mb-sm-0\">\n                    <select className=\"form-control\" id=\"user_level\"\n                            onChange={ e => handleUserLevelChange(e.target.value)}\n                            value={userdetaildata.user_level}\n                        >\n                        {useformcode && useformcode.level_code.map((item: any, i: any) => {\n                                return <option key={item['code_id']} value={item['code_id']}>{item['code_name']}</option>\n                            })\n                        }\n                        </select>\n                    </div>\n                </div>\n                <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\" onClick={e => handleUseDataSubmit(e)}>Block level button</button>\n            </form>\n        </>\n    );\n}\n\nexport default UserDetailForm;","import React, {MouseEvent, KeyboardEvent} from 'react';\n\ninterface initialProps  {\n    bookSearchString: string;\n    handleBookSearchButtonClick: ( event: MouseEvent ) => void;\n    handleBookSearchInputCange: ( event: string ) => void;\n    handleEnterKeyPress: () => void;\n};\n\nfunction BookCreateForm({bookSearchString, handleBookSearchButtonClick, handleBookSearchInputCange, handleEnterKeyPress} : initialProps) {\n    const onEnter = (event: KeyboardEvent<HTMLInputElement>) => {\n        // event.preventDefault();\n        event.key === 'Enter' && handleEnterKeyPress();\n    }\n\n    return (\n        <>\n            <div className=\"card o-hidden border-0 shadow-lg my-5\">\n                <div className=\"card-body p-0\">\n                    {/* <!-- Nested Row within Card Body --> */}\n                    <div className=\"p-5\">\n                        <div className=\"text-center\">\n                            <h1 className=\"h4 text-gray-900 mb-4\">책검색</h1>\n                        </div>\n                        <form className=\"user\" onSubmit={e => { e.preventDefault(); }}>\n                            <div className=\"form-group\">\n                                <input type=\"text\" className=\"form-control form-control-user\" id=\"exampleInputEmail\" placeholder=\"검색어를 입력해 주세요.\"\n                                    onChange={ e => handleBookSearchInputCange(e.target.value) }\n                                    value={bookSearchString}\n                                    onKeyPress={e => onEnter(e)}\n                                />\n                            </div>\n                            <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\"\n                                onClick={(e: MouseEvent) => handleBookSearchButtonClick(e)}\n                            >검색</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default BookCreateForm;","import React from 'react';\nimport * as Interfaces from 'modules/Interfaces';\nimport {LoadingSpinner} from 'components/elements';\n\ninterface initialProps {\n    isloading: Interfaces.baseSagaStateType;\n    items: Interfaces.defaultListItem[] | undefined;\n    handleUserInfoLink: ( user_uuid: string) => void;\n    handleUserInfoPageLink: ( user_uuid: string) => void;\n    handleUserActiveUpdateLink: ( user_uuid: string, active: 'Y' | 'N') => void;\n    handleUserActiveDeleteLink: ( user_uuid: string) => void;\n}\n\nfunction DefaultUserListTable({ isloading, items, handleUserInfoLink, handleUserInfoPageLink, handleUserActiveUpdateLink, handleUserActiveDeleteLink } : initialProps) {\n    return (\n        <>\n            {/* <!-- Begin table --> */}\n            {/* <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\"> */}\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th>이메일</th>\n                        <th>이름</th>\n                        <th>가입형태</th>\n                        <th>상태</th>\n                        <th>등급</th>\n                        <th>올린책</th>\n                        <th>활동수</th>\n                        <th>가입일</th>\n                        <th>중지</th>\n                        <th>탈퇴</th>\n                    </tr>\n                </thead>\n                <tfoot>\n                    <tr>\n                        <th>이메일</th>\n                        <th>이름</th>\n                        <th>가입형태</th>\n                        <th>상태</th>\n                        <th>등급</th>\n                        <th>올린책</th>\n                        <th>활동수</th>\n                        <th>가입일</th>\n                        <th>중지</th>\n                        <th>탈퇴</th>\n                    </tr>\n                </tfoot>\n                {isloading === 'loading'\n                    ?\n                    <tbody><tr><td colSpan={10}><div style={{ height: '10vh', display: 'flex', justifyContent: 'center', alignItems: 'center',}}><LoadingSpinner /></div></td></tr></tbody>\n                    :\n                    <tbody>\n                    {\n                    items && items.map((item: Interfaces.defaultListItem, i:number) =>\n                        <tr key={i}>\n                            <td>{item.email}&nbsp;<span className=\"badge badge-pill badge-primary\" onClick={() => handleUserInfoLink(item.uuid)}>정보</span>&nbsp;<span className=\"badge badge-pill badge-primary\" onClick={() => handleUserInfoPageLink(item.uuid)}>수정</span></td>\n                            <td>{item.name}</td>\n                            <td>{item.type.code_name}</td>\n                            <td>{item.state.code_name}</td>\n                            <td>{item.level.code_name}</td>\n                            <td>{item.read_book_count}</td>\n                            <td>{item.activity_count}</td>\n                            <td>{item.created_at_atring}</td>\n                            {\n                                (function(){\n                                    switch(item.active) {\n                                        case 'Y' :\n                                            return <td><button type=\"button\" className=\"btn btn-primary\" onClick={() => handleUserActiveUpdateLink(item.uuid, 'N')}>중지</button></td>\n                                        case 'N' :\n                                            return <td><button type=\"button\" className=\"btn btn-danger\" onClick={() => handleUserActiveUpdateLink(item.uuid, 'Y')}>활성</button></td>\n                                    }\n                                })()\n                            }\n                            <td><button type=\"button\" className=\"btn btn-danger\" onClick={() => handleUserActiveDeleteLink(item.uuid)}>탈퇴</button></td>\n                        </tr>\n                    )\n                    }\n                    </tbody>\n                }\n            </table>\n        </>\n    );\n}\n\nexport default DefaultUserListTable;","import React from 'react';\nimport * as Interfaces from 'modules/Interfaces';\nimport {LoadingSpinner} from 'components/elements';\n\ninterface initialProps {\n    isloading: Interfaces.baseSagaStateType;\n    items: Interfaces.searchBookInfoInterface[];\n    handleClickBookCreate: ( book_key: number ) => void;\n}\n\nfunction DefaultSearchListTable({isloading, items, handleClickBookCreate}: initialProps) {\n    return (\n        <>\n            {/* <!-- Begin table --> */}\n            {/* <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\"> */}\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th>thumbnail</th>\n                        <th>title</th>\n                        <th>status</th>\n                        <th>isbn</th>\n                        <th>contents</th>\n                        <th>authors</th>\n                    </tr>\n                </thead>\n                <tfoot>\n                    <tr>\n                        <th>thumbnail</th>\n                        <th>title</th>\n                        <th>status</th>\n                        <th>isbn</th>\n                        <th>contents</th>\n                        <th>authors</th>\n                    </tr>\n                </tfoot>\n                {isloading === 'loading'\n                    ?\n                    <tbody><tr><td colSpan={10}><div style={{ height: '10vh', display: 'flex', justifyContent: 'center', alignItems: 'center',}}><LoadingSpinner /></div></td></tr></tbody>\n                    :\n                    <tbody>\n                    {\n                        items && items.map((item: Interfaces.searchBookInfoInterface, i:number) =>\n                            <tr key={i}>\n                                <td><img src={item.thumbnail} alt=\"thumbnail\" onClick={() => handleClickBookCreate(i)}/></td>\n                                <td>{item.title}</td>\n                                <td>{item.status}</td>\n                                <td>{item.isbn}</td>\n                                <td>{item.contents}</td>\n                                <td>{item.authors}</td>\n                            </tr>\n                        )\n                    }\n                    </tbody>\n                }\n            </table>\n        </>\n    );\n}\n\nexport default DefaultSearchListTable;","import React from 'react';\nimport * as Interfaces from 'modules/Interfaces';\nimport {LoadingSpinner, ImageComponent} from 'components/elements';\n\ninterface initialProps {\n    isloading: Interfaces.baseSagaStateType;\n    items: Interfaces.bookListItem[];\n    handleClickRecommendAddButton: (book_id: number) => void;\n    handleClickRecommendDeleteButton: (book_id: number) => void;\n}\n\n\n\nfunction BooksListTable({ isloading, items, handleClickRecommendAddButton, handleClickRecommendDeleteButton }: initialProps) {\n    return (\n        <>\n            {/* <!-- Begin table --> */}\n            {/* <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\"> */}\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th>추천등록</th>\n                        <th>thumbnail</th>\n                        <th>title</th>\n                        <th>올린이사람</th>\n                        <th>isbn</th>\n                        <th>contents</th>\n                        <th>authors</th>\n                    </tr>\n                </thead>\n                <tfoot>\n                    <tr>\n                        <th>추천등록</th>\n                        <th>thumbnail</th>\n                        <th>title</th>\n                        <th>status</th>\n                        <th>isbn</th>\n                        <th>contents</th>\n                        <th>authors</th>\n                    </tr>\n                </tfoot>\n                {isloading === 'loading'\n                    ?\n                    <tbody><tr><td colSpan={10}><div style={{ height: '10vh', display: 'flex', justifyContent: 'center', alignItems: 'center',}}><LoadingSpinner /></div></td></tr></tbody>\n                    :\n                    <tbody>\n                    {\n                        items && items.map((item: Interfaces.bookListItem, i:number) =>\n                        <tr key={i}>\n                            {/* <td><button type=\"button\" className=\"btn btn-primary\" onClick={() => handleClickRecommendAddButton(item.id)}>등록</button></td> */}\n                            {\n                                (function(){\n                                    switch(item.recommend) {\n                                        case true :\n                                            return <td><button type=\"button\" className=\"btn btn-danger btn-sm\" onClick={() => handleClickRecommendDeleteButton(item.id)}>삭제</button></td>\n                                        case false :\n                                            return <td><button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => handleClickRecommendAddButton(item.id)}>등록</button></td>\n                                    }\n                                })()\n                            }\n                            <td><ImageComponent image_url={item.thumbnail}/></td>\n                            <td>{item.title}</td>\n                            <td>{item.user_name}</td>\n                            <td>{item.isbn}</td>\n                            <td>{item.contents}</td>\n                            <td>{item.authors}</td>\n                        </tr>\n                    )\n                    }\n                    </tbody>\n                }\n            </table>\n        </>\n    );\n}\n\nexport default BooksListTable;","import React from 'react';\nimport * as Interfaces from 'modules/Interfaces';\nimport {LoadingSpinner} from 'components/elements';\n\ninterface initialProps {\n    isloading: Interfaces.baseSagaStateType;\n    items: Interfaces.RecommendbookListItem[];\n    handleClickDeleteButton: ( book_id: number ) => void;\n}\n\nfunction RecommendBooksListTable({ isloading,items, handleClickDeleteButton }: initialProps) {\n    return (\n        <>\n            {/* <!-- Begin table --> */}\n            {/* <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\"> */}\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th>thumbnail</th>\n                        <th>title</th>\n                        <th>올린이사람</th>\n                        <th>contents</th>\n                        <th>삭제</th>\n                    </tr>\n                </thead>\n                <tfoot>\n                    <tr>\n                        <th>thumbnail</th>\n                        <th>title</th>\n                        <th>status</th>\n                        <th>contents</th>\n                        <th>삭제</th>\n                    </tr>\n                </tfoot>\n\n                {isloading === 'loading'\n                    ?\n                    <tbody><tr><td colSpan={10}><div style={{ height: '10vh', display: 'flex', justifyContent: 'center', alignItems: 'center',}}><LoadingSpinner /></div></td></tr></tbody>\n                    :\n                    <tbody>\n                    {\n                        items && items.map((item: Interfaces.RecommendbookListItem, i:number) =>\n                            <tr key={i}>\n                                <td>{item.book_thumbnail && <img src={item.book_thumbnail} alt=\"thumbnail\" />}</td>\n                                <td>{item.book_title}</td>\n                                <td>{item.book_user_name}</td>\n                                <td>{item.book_contents}</td>\n                                <td><button type=\"button\" className=\"btn btn-danger\" onClick={() => handleClickDeleteButton(item.book_id)}>삭제</button></td>\n                            </tr>\n                        )\n                    }\n                    </tbody>\n                }\n            </table>\n        </>\n    );\n}\n\nexport default RecommendBooksListTable;","import React from 'react';\nimport * as Interfaces from 'modules/Interfaces';\nimport {LoadingSpinner} from 'components/elements';\n\ninterface initialProps {\n    isloading: Interfaces.baseSagaStateType;\n    items: Interfaces.activityListItem[];\n    handleClickActivityDeleteButton: ( list_uid: string ) => void;\n}\n\nfunction BooksActivityListTable({isloading, items, handleClickActivityDeleteButton}: initialProps) {\n    return (\n        <>\n            {/* <!-- Begin table --> */}\n            {/* <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\"> */}\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th>thumbnail</th>\n                        <th>책 제목</th>\n                        <th>올린이사람</th>\n                        <th>구분</th>\n                        <th>내용</th>\n                        <th>날짜</th>\n                        <th>삭제</th>\n                    </tr>\n                </thead>\n                <tfoot>\n                    <tr>\n                        <th>thumbnail</th>\n                        <th>책 제목</th>\n                        <th>올린이사람</th>\n                        <th>구분</th>\n                        <th>내용</th>\n                        <th>날짜</th>\n                        <th>삭제</th>\n                    </tr>\n                </tfoot>\n\n                {isloading === 'loading'\n                    ?\n                    <tbody><tr><td colSpan={10}><div style={{ height: '10vh', display: 'flex', justifyContent: 'center', alignItems: 'center',}}><LoadingSpinner /></div></td></tr></tbody>\n                    :\n                    <tbody>\n                    {\n                        items && items.map((item: Interfaces.activityListItem, i:number) =>\n                            <tr key={i}>\n                                <td><img src={item.book_thumbnail} alt=\"thumbnail\"/></td>\n                                <td>{item.book_title}</td>\n                                <td>{item.user_name}</td>\n                                <td>{item.gubun_name}</td>\n                                <td>{item.contents}</td>\n                                <td>{item.created_at_string}</td>\n                                <td><button type=\"button\" className=\"btn btn-danger\" onClick={() => handleClickActivityDeleteButton(item.list_uid)}>삭제</button></td>\n                            </tr>\n                        )\n                    }\n                    </tbody>\n                }\n            </table>\n        </>\n    );\n}\n\nexport default BooksActivityListTable;","import React from 'react';\nimport * as Interfaces from 'modules/Interfaces';\n\ninterface initialProps {\n    userInfoData: Interfaces.userDetailData | undefined\n}\n\nfunction UserInfoTable({userInfoData} : initialProps) {\n    return (\n        <>\n            {/* <!-- DataTales Example --> */}\n            <div className=\"card shadow mb-4\">\n                <div className=\"card-header py-3\">\n                    <h6 className=\"m-0 font-weight-bold text-primary\">사용자 정보</h6>\n                </div>\n                <div className=\"card-body\">\n                    <div className=\"table-responsive\">\n                        {/* <!-- Begin table --> */}\n                        {/* <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\"> */}\n                        <table className=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>구분</th>\n                                <th>정보</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>user_uuid</td>\n                                <td>{userInfoData && userInfoData.user_uuid}</td>\n                            </tr>\n                            <tr>\n                                <td>이름</td>\n                                <td>{userInfoData && userInfoData.user_name}</td>\n                            </tr>\n                            <tr>\n                                <td>이메일</td>\n                                <td>{userInfoData && userInfoData.user_email}</td>\n                            </tr>\n                            <tr>\n                                <td>가입경로</td>\n                                <td>{userInfoData && userInfoData.user_type}</td>\n                            </tr>\n                            <tr>\n                                <td>사용자 상태</td>\n                                <td>{userInfoData && userInfoData.user_state}</td>\n                            </tr>\n                            <tr>\n                                <td>사용자 레벨</td>\n                                <td>{userInfoData && userInfoData.user_level}</td>\n                            </tr>\n                            <tr>\n                                <td>활동 공개 여부</td>\n                                <td>{userInfoData && userInfoData.user_activity_state}</td>\n                            </tr>\n                            <tr>\n                                <td>독서 활동 등록수</td>\n                                <td>{userInfoData && userInfoData.activity_count}</td>\n                            </tr>\n                            <tr>\n                                <td>읽은 책수</td>\n                                <td>{userInfoData && userInfoData.read_book_count}</td>\n                            </tr>\n                            <tr>\n                                <td>업로드 책 수</td>\n                                <td>{userInfoData && userInfoData.upload_book_count}</td>\n                            </tr>\n                            <tr>\n                                <td>가입일</td>\n                                <td>{userInfoData && userInfoData.created_at_string}</td>\n                            </tr>\n                            <tr>\n                                <td>수정일</td>\n                                <td>{userInfoData && userInfoData.updated_at_string}</td>\n                            </tr>\n                            <tr>\n                                <td>이메일 인증일</td>\n                                <td>{userInfoData && userInfoData.email_verified_at_string}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                        {/* <!-- End of table --> */}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default UserInfoTable;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Sidebar() {\n    return (\n        <>\n            {/* <!-- Sidebar --> */}\n            <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n\n                {/* <!-- Sidebar - Brand --> */}\n                <Link to={process.env.PUBLIC_URL + \"/\"} className=\"sidebar-brand d-flex align-items-center justify-content-center\">\n                    <div className=\"sidebar-brand-icon rotate-n-15\">\n                        <i className=\"fas fa-laugh-wink\"></i>\n                    </div>\n                    <div className=\"sidebar-brand-text mx-10\">JooJang Admin<sup>v1</sup></div>\n                </Link>\n\n                {/* <!-- Divider --> */}\n                <hr className=\"sidebar-divider my-0\"></hr>\n\n                {/* <!-- Nav Item - Dashboard --> */}\n                <li className=\"nav-item\">\n                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"nav-link\" ><i className=\"fas fa-fw fa-tachometer-alt\"></i><span>Dashboard</span></Link>\n                </li>\n\n                {/* <!-- Divider --> */}\n                <hr className=\"sidebar-divider\"></hr>\n\n                {/* <!-- Heading --> */}\n                <div className=\"sidebar-heading\">회원</div>\n\n                {/* <!-- Nav Item - Pages Collapse Menu --> */}\n                <li className=\"nav-item\">\n                    <Link to={process.env.PUBLIC_URL + \"/users/1\"} className=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\"><i className=\"fas fa-fw fa-cog\"></i><span>회원 리스트</span></Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to={process.env.PUBLIC_URL +  '/books/activity/C11110/1'} className=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\"><i className=\"fas fa-fw fa-cog\"></i><span>독서 활동 리스트</span></Link>\n                </li>\n\n                {/* <!-- Divider --> */}\n                <hr className=\"sidebar-divider\"></hr>\n\n                {/* <!-- Heading --> */}\n                <div className=\"sidebar-heading\"> 책 </div>\n                <li className=\"nav-item\">\n                    <Link to={process.env.PUBLIC_URL + \"/books/recommend/B11000/1\"} className=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\"><i className=\"fas fa-fw fa-cog\"></i><span>추천 도서</span></Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to={process.env.PUBLIC_URL + \"/book/create\"} className=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\"><i className=\"fas fa-fw fa-cog\"></i><span>책 등록</span></Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to={process.env.PUBLIC_URL + \"/books/1\"} className=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\"><i className=\"fas fa-fw fa-cog\"></i><span>책 리스트</span></Link>\n                </li>\n\n                {/* <!-- Divider --> */}\n                <hr className=\"sidebar-divider d-none d-md-block\"></hr>\n\n            </ul>\n            {/* <!-- End of Sidebar --> */}\n        </>\n    );\n}\n\nexport default Sidebar;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    // TopbarSearch,\n    // TopbarAlerts,\n    // TopbarMessages,\n    TopbarInformation,\n} from 'components/elements';\nfunction Topbar() {\n    return (\n        <>\n            {/* <!-- Topbar --> */}\n            <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n\n                {/* <!-- Sidebar Toggle (Topbar) --> */}\n                <button id=\"sidebarToggleTop\" className=\"btn btn-link d-md-none rounded-circle mr-3\">\n                    <i className=\"fa fa-bars\"></i>\n                </button>\n\n                {/* <!-- Topbar Search --> */}\n                {/* <TopbarSearch/> */}\n\n                {/* <!-- Topbar Navbar --> */}\n                <ul className=\"navbar-nav ml-auto\">\n\n                    {/* <!-- Nav Item - Search Dropdown (Visible Only XS) --> */}\n                    <li className=\"nav-item dropdown no-arrow d-sm-none\">\n                        <Link to={process.env.PUBLIC_URL + \"/\"} className=\"nav-link dropdown-toggle\" id=\"searchDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i className=\"fas fa-search fa-fw\"></i> </Link>\n                        {/* <!-- Dropdown - Messages --> */}\n                        <div className=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\" aria-labelledby=\"searchDropdown\">\n                            <form className=\"form-inline mr-auto w-100 navbar-search\">\n                                <div className=\"input-group\">\n                                    <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\"/>>\n                                    <div className=\"input-group-append\">\n                                        <button className=\"btn btn-primary\" type=\"button\">\n                                            <i className=\"fas fa-search fa-sm\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </li>\n\n                    {/* <!-- Nav Item - Alerts --> */}\n                    {/* <TopbarAlerts/> */}\n\n                    {/* <!-- Nav Item - Messages --> */}\n                    {/* <TopbarMessages/> */}\n\n                    <div className=\"topbar-divider d-none d-sm-block\"></div>\n\n                    {/* <!-- Nav Item - User Information --> */}\n                    <TopbarInformation/>\n\n                </ul>\n\n            </nav>\n            {/* <!-- End of Topbar --> */}\n        </>\n    );\n}\n\nexport default Topbar;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <>\n            {/* <!-- Footer --> */}\n            <footer className=\"sticky-footer bg-white\">\n                <div className=\"container my-auto\">\n                    <div className=\"copyright text-center my-auto\">\n                        <span>Copyright &copy; JooJang Help 2020</span>\n                    </div>\n                </div>\n            </footer>\n            {/* <!-- End of Footer --> */}\n        </>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction TopbarMessages() {\n    return (\n        <>\n        <li className=\"nav-item dropdown no-arrow mx-1\">\n                        <Link to={process.env.PUBLIC_URL + \"/\"} className=\"nav-link dropdown-toggle\" id=\"messagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <i className=\"fas fa-envelope fa-fw\"></i>\n                            {/* <!-- Counter - Messages --> */}\n                            <span className=\"badge badge-danger badge-counter\">7</span>\n                        </Link>\n                        {/* <!-- Dropdown - Messages --> */}\n                        <div className=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"messagesDropdown\">\n                            <h6 className=\"dropdown-header\"> Message Center </h6>\n                            <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item d-flex align-items-center\" href=\"{null}\">\n                                <div className=\"dropdown-list-image mr-3\">\n                                    <img className=\"rounded-circle\" src=\"https://source.unsplash.com/fn_BT9fwg_E/60x60\" alt=\"\"/>\n                                    <div className=\"status-indicator bg-success\"></div>\n                                </div>\n                                <div className=\"font-weight-bold\">\n                                    <div className=\"text-truncate\">Hi there! I am wondering if you can help me with a problem I've been having.</div>\n                                    <div className=\"small text-gray-500\">Emily Fowler · 58m</div>\n                                </div>\n                            </Link>\n                            <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item d-flex align-items-center\" href=\"{null}\">\n                                <div className=\"dropdown-list-image mr-3\">\n                                    <img className=\"rounded-circle\" src=\"https://source.unsplash.com/AU4VPcFN4LE/60x60\" alt=\"\"/>>\n                                    <div className=\"status-indicator\"></div>\n                                </div>\n                                <div>\n                                    <div className=\"text-truncate\">I have the photos that you ordered last month, how would you like them sent to you?</div>\n                                    <div className=\"small text-gray-500\">Jae Chun · 1d</div>\n                                </div>\n                            </Link>\n                            <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item d-flex align-items-center\" href=\"{null}\">\n                                <div className=\"dropdown-list-image mr-3\">\n                                    <img className=\"rounded-circle\" src=\"https://source.unsplash.com/CS2uCrpNzJY/60x60\" alt=\"\"/>\n                                    <div className=\"status-indicator bg-warning\"></div>\n                                </div>\n                                <div>\n                                    <div className=\"text-truncate\">Last month's report looks great, I am very happy with the progress so far, keep up the good work!</div>\n                                    <div className=\"small text-gray-500\">Morgan Alvarez · 2d</div>\n                                </div>\n                            </Link>\n                            <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item d-flex align-items-center\" href=\"{null}\">\n                                <div className=\"dropdown-list-image mr-3\">\n                                    <img className=\"rounded-circle\" src=\"https://source.unsplash.com/Mv9hjnEUHR4/60x60\" alt=\"\"/>\n                                    <div className=\"status-indicator bg-success\"></div>\n                                </div>\n                                <div>\n                                    <div className=\"text-truncate\">Am I a good boy? The reason I ask is because someone told me that people say this to all dogs, even if they aren't good...</div>\n                                    <div className=\"small text-gray-500\">Chicken the Dog · 2w</div>\n                                </div>\n                            </Link>\n                            <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item text-center small text-gray-500\" href=\"{null}\">Read More Messages</Link>\n                        </div>\n                    </li>\n        </>\n    );\n}\n\nexport default TopbarMessages;","import React from 'react';\nimport * as Helper from 'lib/Helper';\nimport GlobalAlert from 'lib/GlobalAlert';\n\nfunction TopbarInformation() {\n\n    const handleLogOutClick = () => {\n        Helper.removeLoginInfo();\n        GlobalAlert.thenLocationReload({\n            text: '로그아웃 되었습니다.'\n        });\n    }\n\n    return (\n        <>\n            <li className=\"nav-item dropdown no-arrow\">\n\n                <button type=\"button\" className=\"btn btn-primary btn-sm btn-block\" onClick={() => handleLogOutClick()}>로그아웃</button>\n                {/* <Link to={process.env.PUBLIC_URL + \"/\"} className=\"nav-link dropdown-toggle\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\" onClick={() => handleLogOutClick}>로그아웃</span>\n                    <img className=\"img-profile rounded-circle\" src=\"https://source.unsplash.com/QAB-WJcbgJk/60x60\" alt=\"\"/>\n                </Link> */}\n                {/* <!-- Dropdown - User Information --> */}\n                {/* <div className=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"userDropdown\">\n                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item\" href=\"{null}\"> <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"></i> Profile </Link>\n                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item\" href=\"{null}\"> <i className=\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\"></i> Settings </Link>\n                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item\" href=\"{null}\"> <i className=\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\"></i> Activity Log </Link>\n                    <div className=\"dropdown-divider\"></div>\n                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#logoutModal\"> <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i> Logout </Link>\n                </div> */}\n            </li>\n        </>\n    );\n}\n\nexport default TopbarInformation;","import React from 'react';\nimport ReactPaginate from 'react-paginate';\nimport {defaultPaginationData} from 'modules/Interfaces';\n\ninterface initialProps  {\n    handlePaginate: (e: any) => void;\n    listpagedata: defaultPaginationData\n};\n\nfunction Pagination({\n    handlePaginate,\n    listpagedata\n } : initialProps) {\n\n    // return (\n    //     <>\n    //         <div className=\"col-sm-12 col-md-7\">\n    //             <div className=\"dataTables_paginate paging_simple_numbers\">\n    //                 <ul className=\"pagination\">\n    //                     <li className=\"paginate_button page-item previous disabled\"><a href=\"#\" className=\"page-link\">Previous</a></li>\n    //                     <li className=\"paginate_button page-item active\"><a href=\"#\" className=\"page-link\">1</a></li>\n    //                     <li className=\"paginate_button page-item \"><a href=\"#\" className=\"page-link\">2</a></li>\n    //                     <li className=\"paginate_button page-item \"><a href=\"#\" className=\"page-link\">3</a></li>\n    //                     <li className=\"paginate_button page-item \"><a href=\"#\" className=\"page-link\">4</a></li>\n    //                     <li className=\"paginate_button page-item \"><a href=\"#\" className=\"page-link\">5</a></li>\n    //                     <li className=\"paginate_button page-item \"><a href=\"#\" className=\"page-link\">6</a></li>\n    //                     <li className=\"paginate_button page-item next\" id=\"dataTable_next\"><a href=\"#\" className=\"page-link\">Next</a></li>\n    //                 </ul>\n    //             </div>\n    //         </div>\n    //     </>\n    // );\n\n    return (\n        <>\n            <div className=\"col-sm-12 col-md-7\">\n                <div className=\"dataTables_paginate paging_simple_numbers\">\n                        <ReactPaginate\n                                previousLabel={'<'}\n                                nextLabel={'>'}\n                                breakLabel={'...'}\n                                pageCount={Number(listpagedata.last_page)}\n                                marginPagesDisplayed={2}\n                                pageRangeDisplayed={5}\n                                onPageChange={handlePaginate}\n                                breakClassName={'page-item'}\n                                breakLinkClassName={'page-link'}\n                                containerClassName={'pagination'}\n                                pageClassName={'page-item'}\n                                pageLinkClassName={'page-link'}\n                                previousClassName={'page-item'}\n                                previousLinkClassName={'page-link'}\n                                nextClassName={'page-item'}\n                                nextLinkClassName={'page-link'}\n                                activeClassName={'active'}\n                            />\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Pagination;","import React from 'react';\n\nimport {\n    Sidebar,\n    Topbar,\n    Footer\n} from 'components/elements';\n\nfunction ListSkeletonComponent(props: any) {\n    return (\n        <>\n            <div id=\"wrapper\">\n\n                <Sidebar />\n\n                {/* <!-- Content Wrapper --> */}\n                <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n\n                    {/* <!-- Main Content --> */}\n                    <div id=\"content\">\n\n                        <Topbar />\n\n                        {/* <!-- Begin Page Content --> */}\n                        <div className=\"container-fluid\">\n\n                            {/* <!-- Page Heading --> */}\n                            <h1 className=\"h3 mb-2 text-gray-800\">회원</h1>\n                            <p className=\"mb-4\"></p>\n\n                            <div className=\"card shadow mb-4\">\n                                <div className=\"card-header py-3\">\n                                    <h6 className=\"m-0 font-weight-bold text-primary\">회원 리스트</h6>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"table-responsive\">\n                                        {props.ListTable}\n                                    </div>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        {props.Pagination}\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                        {/* <!-- /.container-fluid --> */}\n\n                    </div>\n                    {/* <!-- End of Main Content --> */}\n\n                    <Footer/>\n\n                </div>\n                {/* <!-- End of Content Wrapper --> */}\n\n            </div>\n            {/* <!-- End of Page Wrapper --> */}\n        </>\n    );\n}\n\nexport default ListSkeletonComponent;","import React from 'react';\n\nimport {\n    Sidebar,\n    Topbar,\n    Footer\n} from 'components/elements';\n\nfunction InfoSkeletonComponent(props: any) {\n    return (\n        <>\n            <div id=\"wrapper\">\n\n                <Sidebar />\n\n                {/* <!-- Content Wrapper --> */}\n                <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n\n                    {/* <!-- Main Content --> */}\n                    <div id=\"content\">\n\n                        <Topbar />\n\n                        {/* <!-- Begin Page Content --> */}\n                        <div className=\"container-fluid\">\n\n                            {/* <!-- Page Heading --> */}\n                            <h1 className=\"h3 mb-2 text-gray-800\">정보</h1>\n                            <p className=\"mb-4\"></p>\n\n                            <div className=\"card shadow mb-4\">\n                                <div className=\"card-body\">\n                                    <div className=\"table-responsive\">\n                                        {props.InfoTable}\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                        {/* <!-- /.container-fluid --> */}\n\n                    </div>\n                    {/* <!-- End of Main Content --> */}\n\n                    <Footer/>\n\n                </div>\n                {/* <!-- End of Content Wrapper --> */}\n\n            </div>\n            {/* <!-- End of Page Wrapper --> */}\n        </>\n    );\n}\n\nexport default InfoSkeletonComponent;","import React from 'react';\n\nimport {\n    Sidebar,\n    Topbar,\n    Footer\n} from 'components/elements';\n\nfunction SearchSkeletonComponent(props: any) {\n    return (\n        <>\n            <div id=\"wrapper\">\n\n                <Sidebar />\n\n                {/* <!-- Content Wrapper --> */}\n                <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n\n                    {/* <!-- Main Content --> */}\n                    <div id=\"content\">\n\n                        <Topbar />\n\n                        {/* <!-- Begin Page Content --> */}\n                        <div className=\"container-fluid\">\n\n                            {/* <!-- Page Heading --> */}\n                            <h1 className=\"h3 mb-2 text-gray-800\">회원</h1>\n                            <p className=\"mb-4\"></p>\n\n                            <div className=\"card shadow mb-4\">\n                                <div className=\"card-header py-3\">\n                                    <h6 className=\"m-0 font-weight-bold text-primary\">회원 리스트</h6>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"table-responsive\">\n                                        {props.SearchTable}\n                                    </div>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        {props.ListTable}\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                        {/* <!-- /.container-fluid --> */}\n\n                    </div>\n                    {/* <!-- End of Main Content --> */}\n\n                    <Footer/>\n\n                </div>\n                {/* <!-- End of Content Wrapper --> */}\n\n            </div>\n            {/* <!-- End of Page Wrapper --> */}\n        </>\n    );\n}\n\nexport default SearchSkeletonComponent;","import React from 'react';\nimport styled from 'styled-components';\n\ninterface initialProps  {\n    image_url: string;\n};\n\nconst Image = styled.img`\n    width: 80px;\n    border: 0px;\n`;\n\nfunction imageBox({image_url} : initialProps) {\n    return (\n        <>\n            <Image src={image_url}/>\n        </>\n    );\n}\n\nexport default imageBox;","import React, {useEffect} from 'react';\n\nimport { LoginForm } from 'components/elements';\nimport useLogin from 'hook/useLogin';\nimport GlobalAlert from 'lib/GlobalAlert';\nimport {\n    LoadingSpinner\n} from 'components/elements';\nimport * as Helper from 'lib/Helper';\nimport history from 'routes/History';\n\nfunction LoginPage() {\n    document.body.classList.add(\"bg-gradient-primary\");\n\n    const {\n        inputEmail,\n        inputPassword,\n        rememberme,\n        __handleChangeEmail,\n        __handleChangePassword,\n        __handleClickLoginLink,\n        __handleRememberMeCheckbox,\n        __handleEnterKeyPress,\n        loginState\n    } = useLogin();\n\n\n    useEffect(() => {\n\n        if(loginState.state === \"failure\" && loginState.message) {\n            GlobalAlert.error({\n                text: loginState.message\n            });\n        } else if(loginState.state === \"success\") {\n            GlobalAlert.thenHistoryPush({\n                text: '로그인이 완료 되었습니다.',\n                push_router: '/'\n            });\n        }\n\n    }, [loginState])\n\n    useEffect(() => {\n        if(Helper.getAccessToken()) {\n            history.push(process.env.PUBLIC_URL + '/');\n        }\n    });\n\n    return (\n        <>\n            <div className=\"container\">\n                {/* <!-- Outer Row --> */}\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-xl-10 col-lg-12 col-md-9\">\n                        <div className=\"card o-hidden border-0 shadow-lg my-5\">\n                            <div className=\"card-body p-0\">\n                                {/* <!-- Nested Row within Card Body --> */}\n                                <div className=\"row\">\n                                    <div className=\"col-lg-6 d-none d-lg-block bg-login-image\"></div>\n                                    <div className=\"col-lg-6\">\n                                        <div className=\"p-5\">\n                                            <div className=\"text-center\">\n                                                <h1 className=\"h4 text-gray-900 mb-4\">Welcome JoojangHelp Admin!</h1>\n                                            </div>\n                                            {loginState.state === \"loading\"\n                                                ? <LoadingSpinner/>\n                                                :<LoginForm\n                                                    inputEmail = {inputEmail}\n                                                    inputPassword = {inputPassword}\n                                                    handelRememberme = {rememberme}\n                                                    handleChangeEmail={ __handleChangeEmail }\n                                                    handleChangePassword = { __handleChangePassword }\n                                                    handleClickLoginLink = { __handleClickLoginLink }\n                                                    handleRememberMeCheckbox = { __handleRememberMeCheckbox }\n                                                    handleEnterKeyPress = { __handleEnterKeyPress }\n                                                />\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default LoginPage;","import { MouseEvent, ChangeEvent,  useState, useEffect, useMemo } from 'react';\nimport { loginRequest } from 'modules/Interfaces';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { attemptLoginAction, attemptLoginResetAction } from 'modules/redux/logins';\nimport { RootState } from 'modules/redux';\nimport { cookieManager, setLoginInfo } from 'lib/Helper';\n\nexport default function useLogin() {\n\n    const login_state = useSelector((state: RootState) => state.login_state);\n    const loginState = useMemo(() => login_state, [login_state]);\n\n    const dispatch = useDispatch();\n    const [ inputEmail, setInputEmail ] = useState('');\n    const [ inputPassword, setInputPassword ] = useState('');\n    const [ rememberme, setRememberme ] = useState(false);\n\n    const __handleChangeEmail = (email: string) => {\n        setInputEmail(email);\n    };\n\n    const __handleChangePassword = (password: string) => {\n        setInputPassword(password);\n    };\n\n    const __handleClickLoginLink = (e: MouseEvent) => {\n        e.preventDefault();\n        if(rememberme) {\n            cookieManager.set('rememberme', inputEmail);\n        }\n        const dataObject: loginRequest = {\n            email: inputEmail,\n            password: inputPassword\n        }\n        dispatch(attemptLoginAction(dataObject));\n    }\n\n    const __handleRememberMeCheckbox = (e: ChangeEvent<HTMLInputElement>) => {\n        if(e.target.checked) {\n            setRememberme(true);\n        } else {\n            setRememberme(false);\n            cookieManager.remove('rememberme');\n        }\n    }\n\n    const __handleEnterKeyPress = () => {\n        if(rememberme) {\n            cookieManager.set('rememberme', inputEmail);\n        }\n        const dataObject: loginRequest = {\n            email: inputEmail,\n            password: inputPassword\n        }\n        dispatch(attemptLoginAction(dataObject));\n    }\n\n\n    useEffect(() => {\n        if(cookieManager.get('rememberme')) {\n            __handleChangeEmail(cookieManager.get('rememberme'));\n            setRememberme(true);\n        }\n    }, [])\n\n    useEffect(() => {\n        if(loginState.state === 'success') {\n            new Promise(function(resolve, reject) {\n                setLoginInfo({\n                    token_type: loginState.data!.token_type!,\n                    expires_in: loginState.data!.expires_in!,\n                    access_token: loginState.data!.access_token!,\n                    refresh_token: loginState.data!.refresh_token!,\n                    user_name: loginState.data!.user_name!,\n                });\n                dispatch(attemptLoginResetAction());\n            }).then((e) => {\n                // console.debug(e);\n            });\n        }\n    })\n\n    return {\n        inputEmail,\n        inputPassword,\n        rememberme,\n        __handleChangeEmail,\n        __handleChangePassword,\n        __handleClickLoginLink,\n        __handleRememberMeCheckbox,\n        __handleEnterKeyPress,\n        loginState\n    };\n};\n\n","import React from 'react';\nimport {\n    ListSkeletonComponent,\n    DefaultUserListTable,\n    Pagination\n} from 'components/elements';\nimport useUserPage from 'hook/useUserPage';\n\nfunction UsersPage() {\n\n    const {\n        userListItems,\n        listPageData,\n        __handleClickUserInfoLink,\n        __handlePaginate,\n        __handleClickUserInfoPage,\n        __handleUserActiveUpdateLink,\n        __handleUserActiveDeleteLink,\n        isLoading,\n    } = useUserPage();\n\n    return (\n        <>\n            <ListSkeletonComponent\n                ListTable={\n                    <DefaultUserListTable\n                        isloading={isLoading}\n                        items={userListItems}\n                        handleUserInfoLink={__handleClickUserInfoLink}\n                        handleUserInfoPageLink={__handleClickUserInfoPage}\n                        handleUserActiveUpdateLink={__handleUserActiveUpdateLink}\n                        handleUserActiveDeleteLink={__handleUserActiveDeleteLink}\n                    />\n                }\n                Pagination={\n                    <Pagination\n                    handlePaginate={__handlePaginate}\n                    listpagedata={listPageData}\n                    />\n                }\n            />\n        </>\n    );\n}\n\nexport default UsersPage;","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'modules/redux';\nimport { attemptGetUserListAction, attemptUserActiveUpdateAction, attemptGetUserInfoResetAction } from 'modules/redux/pages';\nimport * as Interfaces from 'modules/Interfaces';\nimport history from 'routes/History';\nimport { useParams } from 'react-router-dom';\n\ninterface RouteParams {\n    page_number: string;\n}\n\nexport default function useUserPage() {\n\n    const params = useParams<RouteParams>();\n\n    const dispatch = useDispatch();\n    const state_user_list = useSelector((state: RootState) => state.pages_state.users.user_list);\n    const state_user_info = useSelector((state: RootState) => state.pages_state.users.user_info);\n    const state_user_active_update = useSelector((state: RootState) => state.pages_state.users.user_active_update);\n\n    const [userListItems, setUserListItems ] = useState<Interfaces.defaultListItem[]>();\n    const [userInfoData, setUserInfoData ] = useState<Interfaces.userDetailData>();\n    const [listPageData, setlistPageData ] = useState<Interfaces.defaultPaginationData>({\n        current_page: 0,\n        from: 0,\n        last_page: '',\n        per_page: 0,\n        prev_page_url: '',\n        to: 0,\n        total: 0,\n        first_page: '',\n        next_page: '',\n        prev_page: '',\n    });\n\n    const [isLoading, setIsLoading] = useState<Interfaces.baseSagaStateType>('idle');\n\n\n\n    const __handleClickUserInfoLink = (user_uuid : string) => {\n        // dispatch(attemptGetUserInfoAction({\n        //     user_uuid: user_uuid\n        // }));\n        history.push(process.env.PUBLIC_URL + `/user/${user_uuid}/info`);\n    }\n\n    const __handleClickUserInfoPage = (user_uuid : string) => {\n       history.push(process.env.PUBLIC_URL + `/user/${user_uuid}/detail`);\n    }\n\n    const __handlePaginate = (e: any) => {\n        const selected_page = e.selected + 1;\n        history.push(process.env.PUBLIC_URL + `/users/${selected_page}`);\n    }\n\n    const __handleUserActiveUpdateLink = (user_uuid: string, active: 'Y' | 'N') => {\n        dispatch(attemptUserActiveUpdateAction({\n            user_uuid: user_uuid,\n            active: active\n        }));\n    }\n\n    const __handleClickUserInfoConfirmButton = async () => {\n        await dispatch(attemptGetUserInfoResetAction());\n    }\n\n    const __handleUserActiveDeleteLink = (user_uuid: string) => {\n        alert('어떻게 할것 인가?');\n    }\n\n    useEffect(() => {\n        if(state_user_list.state === 'success' && typeof state_user_list.list !== undefined && state_user_list.list) {\n            setUserListItems(state_user_list.list.items);\n            setlistPageData({\n                current_page: state_user_list.list.current_page,\n                from: state_user_list.list.from,\n                last_page: state_user_list.list.last_page,\n                per_page: state_user_list.list.per_page,\n                prev_page_url: state_user_list.list.prev_page_url,\n                to: state_user_list.list.to,\n                total: state_user_list.list.total,\n                first_page: state_user_list.list.first_page,\n                next_page: state_user_list.list.next_page,\n                prev_page: state_user_list.list.prev_page,\n            });\n        }\n\n        if(state_user_info.state === 'success' && typeof state_user_info.data !== undefined && state_user_info.data) {\n            setUserInfoData(state_user_info.data);\n        }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    },[state_user_list, state_user_info])\n\n    useEffect(() => {\n        dispatch(attemptGetUserListAction({\n            pageNumber: (params.page_number) ? params.page_number : '1'\n        }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, [params]);\n\n    useEffect(() => {\n        if(state_user_active_update.state === \"success\") {\n            dispatch(attemptGetUserListAction({\n                pageNumber: (params.page_number) ? params.page_number : '1'\n            }));\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, [state_user_active_update]);\n\n\n    useEffect(() => {\n        async function loadingState() {\n            await setIsLoading('loading');\n        }\n\n        async function idleState() {\n            await setIsLoading('idle');\n        }\n\n\n        if(state_user_list.state === 'loading' || state_user_info.state === 'loading' || state_user_active_update.state === 'loading') {\n            loadingState()\n        } else {\n            idleState();\n        }\n\n    } ,[state_user_list.state, state_user_info.state, state_user_active_update.state])\n\n    useEffect(() => {\n        __handleClickUserInfoConfirmButton();\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, [])\n\n\n    return {\n        userListItems,\n        userInfoData,\n        listPageData,\n        isLoading,\n        __handleClickUserInfoLink,\n        __handlePaginate,\n        __handleClickUserInfoPage,\n        __handleUserActiveUpdateLink,\n        __handleUserActiveDeleteLink,\n        __handleClickUserInfoConfirmButton,\n    };\n};","import React from 'react';\nimport {\n    ListSkeletonComponent,\n    BooksListTable,\n    Pagination\n} from 'components/elements';\nimport useBooksList from 'hook/useBooksList';\n\nfunction BooksListPage() {\n\n    const {\n        booksListItems,\n        __handlePaginate,\n        __handleClickRecommendAddButton,\n        __handleClickRecommendDeleteButton,\n        listPageData,\n        isLoading,\n    } = useBooksList();\n\n    return (\n        <>\n            <ListSkeletonComponent\n                ListTable={\n                    <BooksListTable\n                        isloading={isLoading}\n                        items={booksListItems}\n                        handleClickRecommendAddButton={__handleClickRecommendAddButton}\n                        handleClickRecommendDeleteButton={__handleClickRecommendDeleteButton}\n                    />\n                }\n                Pagination={\n                    <Pagination\n                        handlePaginate={__handlePaginate}\n                        listpagedata={listPageData}\n                    />\n                }\n            />\n        </>\n    );\n}\n\nexport default BooksListPage;","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'modules/redux';\nimport {attemptGetBooksListAction, attemptAddRecommendBookAction, attemptDeleteRecommendBookAction, attemptDeleteRecommendBookResetAction} from 'modules/redux/pages';\nimport * as Interfaces from 'modules/Interfaces';\nimport { useParams } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport history from 'routes/History';\n\ninterface RouteParams {\n    page_number: string;\n}\n\nexport default function useBooksList() {\n\n    const params = useParams<RouteParams>();\n    const dispatch = useDispatch();\n\n    const state_book_list = useSelector((state: RootState) => state.pages_state.books.book_list);\n    const state_add_recommend_book = useSelector((state: RootState) => state.pages_state.books.add_recommend_book);\n    const state_delete_recommend_book = useSelector((state: RootState) => state.pages_state.books.delete_recommend_book);\n\n    const state_sitedata = useSelector((state: RootState) => state.sitedata);\n    const [booksListItems, setBooksListItems ] = useState<Interfaces.bookListItem[]>([]);\n    const [listPageData, setlistPageData ] = useState<Interfaces.defaultPaginationData>({\n        current_page: 0,\n        from: 0,\n        last_page: '',\n        per_page: 0,\n        prev_page_url: '',\n        to: 0,\n        total: 0,\n        first_page: '',\n        next_page: '',\n        prev_page: '',\n    });\n\n    const [isLoading, setIsLoading] = useState<Interfaces.baseSagaStateType>('idle');\n\n    const __handlePaginate = (e: any) => {\n        const selected_page = e.selected + 1;\n        history.push(process.env.PUBLIC_URL + `/books/${selected_page}`);\n    }\n\n    const __handleClickRecommendAddButton = async (book_id: number) => {\n\n        const { value: gubun } = await Swal.fire({\n            title: '카테고리 선택',\n            input: 'select',\n            inputOptions: (function(){\n                return state_sitedata.code_list['B11'].map((code:any) => `${code.code_name}`);\n            })(),\n            inputPlaceholder: '카테고리',\n            showCancelButton: true,\n            inputValidator: (value) => {\n                return new Promise((resolve) => {\n                    if (value) {\n                        resolve()\n                    } else {\n                        resolve('하나를 선택해 주세요 :)')\n                    }\n                })\n            }\n        })\n\n        if (gubun) {\n            const select_gubun = state_sitedata.code_list['B11'][gubun]['code_id'];\n            dispatch(attemptAddRecommendBookAction({\n                book_id: book_id,\n                gubun: select_gubun\n            }));\n        }\n    }\n\n    const __handleClickRecommendDeleteButton = (book_id: number) => {\n        dispatch(attemptDeleteRecommendBookAction({\n            book_id: book_id\n        }));\n    }\n\n    useEffect(() => {\n        dispatch(attemptGetBooksListAction({\n            pageNumber: (params.page_number) ? params.page_number : '1'\n        }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, []);\n\n    useEffect(() => {\n        if(state_book_list.state === 'success' && typeof state_book_list.list !== undefined && state_book_list.list) {\n            setBooksListItems(state_book_list.list.items);\n            setlistPageData({\n                current_page: state_book_list.list.current_page,\n                from: state_book_list.list.from,\n                last_page: state_book_list.list.last_page,\n                per_page: state_book_list.list.per_page,\n                prev_page_url: state_book_list.list.prev_page_url,\n                to: state_book_list.list.to,\n                total: state_book_list.list.total,\n                first_page: state_book_list.list.first_page,\n                next_page: state_book_list.list.next_page,\n                prev_page: state_book_list.list.prev_page,\n            });\n        }\n    }, [state_book_list])\n\n    useEffect(() => {\n        if(state_add_recommend_book.state === \"success\" || state_delete_recommend_book.state === \"success\") {\n            dispatch(attemptGetBooksListAction({\n                pageNumber: (params.page_number) ? params.page_number : '1'\n            }));\n        }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, [state_add_recommend_book, state_delete_recommend_book])\n\n    useEffect(() => {\n        dispatch(attemptGetBooksListAction({\n            pageNumber: (params.page_number) ? params.page_number : '1'\n        }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, [params]);\n\n    useEffect(() => {\n        async function loadingState() {\n            await setIsLoading('loading');\n        }\n\n        async function idleState() {\n            await setIsLoading('idle');\n        }\n        if(state_book_list.state === 'loading') {\n            loadingState()\n        } else {\n            idleState();\n        }\n\n    } ,[state_book_list.state])\n\n\n    useEffect(() => {\n        async function loadingState() {\n            await setIsLoading('loading');\n        }\n\n        async function idleState() {\n            await setIsLoading('idle');\n        }\n        if(state_add_recommend_book.state === 'loading') {\n            loadingState()\n        } else {\n            idleState();\n        }\n\n    } ,[state_add_recommend_book.state])\n\n\n    useEffect(() => {\n        async function loadingState() {\n            await setIsLoading('loading');\n        }\n\n        async function idleState() {\n            await setIsLoading('idle');\n        }\n        if(state_delete_recommend_book.state === 'loading') {\n            loadingState()\n        } else {\n            idleState();\n        }\n\n    } ,[state_delete_recommend_book.state])\n\n    return {\n        booksListItems,\n        __handlePaginate,\n        __handleClickRecommendAddButton,\n        __handleClickRecommendDeleteButton,\n        listPageData,\n        isLoading,\n    };\n};\n\n","import React from 'react';\nimport {\n    ListSkeletonComponent,\n    RecommendBooksListTable,\n    Pagination,\n} from 'components/elements';\nimport useRecommendBooksList from 'hook/useRecommendBooksList';\n\nfunction RecommendBooksListPage() {\n\n    const {\n        booksListItems,\n        __handlePaginate,\n        listPageData,\n        __handleClickDeleteButton,\n        isLoading,\n    } = useRecommendBooksList();\n\n    return (\n        <>\n            <ListSkeletonComponent\n\n                ListTable={\n                    <RecommendBooksListTable\n                        isloading={isLoading}\n                        items={booksListItems}\n                        handleClickDeleteButton={__handleClickDeleteButton}\n                    />\n                }\n                Pagination={\n                    <Pagination\n                        handlePaginate={__handlePaginate}\n                        listpagedata={listPageData}\n                    />\n                }\n            />\n        </>\n    );\n}\n\nexport default RecommendBooksListPage;","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'modules/redux';\nimport {attemptRecommendBookListAction, attemptDeleteRecommendBookAction } from 'modules/redux/pages';\nimport * as Interfaces from 'modules/Interfaces';\nimport { useParams } from 'react-router-dom';\nimport history from 'routes/History';\n\ninterface RouteParams {\n    page_number: string;\n    gubun: string;\n}\n\nexport default function useRecommendBooksList() {\n\n    const params = useParams<RouteParams>();\n    const dispatch = useDispatch();\n\n    const state_book_list = useSelector((state: RootState) => state.pages_state.books.recommend_book_list);\n    const state_delete_recommend_book = useSelector((state: RootState) => state.pages_state.books.delete_recommend_book);\n    const [booksListItems, setBooksListItems ] = useState<Interfaces.RecommendbookListItem[]>([]);\n    const [listPageData, setlistPageData ] = useState<Interfaces.defaultPaginationData>({\n        current_page: 0,\n        from: 0,\n        last_page: '',\n        per_page: 0,\n        prev_page_url: '',\n        to: 0,\n        total: 0,\n        first_page: '',\n        next_page: '',\n        prev_page: '',\n    });\n\n    const [isLoading, setIsLoading] = useState<Interfaces.baseSagaStateType>('idle');\n\n    const __handlePaginate = (e: any) => {\n        const selected_page = e.selected + 1;\n        history.push(process.env.PUBLIC_URL + `/books/activity/${params.gubun}/${selected_page}`);\n    }\n\n    const __handleClickDeleteButton = (book_id: number) => {\n        dispatch(attemptDeleteRecommendBookAction({\n            book_id: book_id\n        }));\n    }\n\n    useEffect(() => {\n        dispatch(attemptRecommendBookListAction({\n            pageNumber: (params.page_number) ? params.page_number : '1',\n            gubun: (params.gubun) ? params.gubun : 'B11000'\n        }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, []);\n\n    useEffect(() => {\n        dispatch(attemptRecommendBookListAction({\n            pageNumber: (params.page_number) ? params.page_number : '1',\n            gubun: (params.gubun) ? params.gubun : 'B11000'\n        }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, [params]);\n\n    useEffect(() => {\n        if(state_book_list.state === 'success' && typeof state_book_list.list !== undefined && state_book_list.list) {\n            setBooksListItems(state_book_list.list.items);\n            setlistPageData({\n                current_page: state_book_list.list.current_page,\n                from: state_book_list.list.from,\n                last_page: state_book_list.list.last_page,\n                per_page: state_book_list.list.per_page,\n                prev_page_url: state_book_list.list.prev_page_url,\n                to: state_book_list.list.to,\n                total: state_book_list.list.total,\n                first_page: state_book_list.list.first_page,\n                next_page: state_book_list.list.next_page,\n                prev_page: state_book_list.list.prev_page,\n            });\n        }\n    }, [state_book_list])\n\n    useEffect(() => {\n        // console.debug(listPageData);\n    }, [listPageData]);\n\n    useEffect(() => {\n        if(state_delete_recommend_book.state === \"success\") {\n            dispatch(attemptRecommendBookListAction({\n                pageNumber: (params.page_number) ? params.page_number : '1',\n                gubun: (params.gubun) ? params.gubun : 'B11000'\n            }));\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, [state_delete_recommend_book])\n\n\n    useEffect(() => {\n\n        async function loadingState() {\n            await setIsLoading('loading');\n        }\n\n        async function idleState() {\n            await setIsLoading('idle');\n        }\n\n\n        if(state_book_list.state === 'loading' || state_delete_recommend_book.state === 'loading') {\n            loadingState()\n        } else {\n            idleState();\n        }\n\n    } ,[state_book_list.state, state_delete_recommend_book.state])\n\n    return {\n        booksListItems,\n        __handlePaginate,\n        listPageData,\n        __handleClickDeleteButton,\n        isLoading,\n    };\n};\n\n","import React from 'react';\nimport {\n    ListSkeletonComponent,\n    BooksActivityListTable,\n    Pagination\n} from 'components/elements';\nimport useActivity from 'hook/useActivity';\n\nfunction BookActivityListPage() {\n\n    const {\n        booksActivityListItems,\n        listPageData,\n        __handleClickActivityDeleteButton,\n        __handlePaginate,\n        isLoading,\n    } = useActivity();\n\n    return (\n        <>\n            <ListSkeletonComponent\n                ListTable={\n                    <BooksActivityListTable\n                        isloading={isLoading}\n                        items={booksActivityListItems}\n                        handleClickActivityDeleteButton={__handleClickActivityDeleteButton}\n                    />\n                }\n                Pagination={\n                    <Pagination\n                    handlePaginate={__handlePaginate}\n                    listpagedata={listPageData}\n                    />\n                }\n            />\n        </>\n    );\n}\n\nexport default BookActivityListPage;","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'modules/redux';\nimport { attemptGetBookActivityListAction, attemptDeleteBookActivityAction } from 'modules/redux/pages';\nimport * as Interfaces from 'modules/Interfaces';\nimport history from 'routes/History';\nimport { useParams } from 'react-router-dom';\n\ninterface RouteParams {\n    page_number: string;\n    gubun: string;\n}\n\nexport default function useBookCreate() {\n\n    const params = useParams<RouteParams>();\n    const dispatch = useDispatch();\n\n    const state_book_activity_list = useSelector((state: RootState) => state.pages_state.books.book_activity_list);\n    const dtate_delete_book_activity = useSelector((state: RootState) => state.pages_state.books.delete_book_activity);\n    const [booksActivityListItems, setBooksActivityListItems ] = useState<Interfaces.activityListItem[]>([]);\n    const [listPageData, setlistPageData ] = useState<Interfaces.defaultPaginationData>({\n        current_page: 0,\n        from: 0,\n        last_page: '',\n        per_page: 0,\n        prev_page_url: '',\n        to: 0,\n        total: 0,\n        first_page: '',\n        next_page: '',\n        prev_page: '',\n    });\n\n    const [isLoading, setIsLoading] = useState<Interfaces.baseSagaStateType>('idle');\n\n    const __handleClickActivityDeleteButton = (list_uid : string) => {\n        dispatch(attemptDeleteBookActivityAction({\n            activity_uuid:list_uid\n        }));\n    }\n\n    const __handlePaginate = (e: any) => {\n        const selected_page = e.selected + 1;\n        history.push(process.env.PUBLIC_URL + `/books/activity/${params.gubun}/${selected_page}`);\n    }\n\n    useEffect(() => {\n        if(dtate_delete_book_activity.state === \"success\" && params.page_number && params.gubun) {\n            dispatch(attemptGetBookActivityListAction({\n                pageNumber: (params.page_number) ? params.page_number : '1',\n                gubun: (params.gubun) ? params.gubun : 'C11110'\n            }));\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, [dtate_delete_book_activity.state])\n\n    useEffect(() => {\n        if(state_book_activity_list.state === 'success' && typeof state_book_activity_list.list !== undefined && state_book_activity_list.list) {\n            setBooksActivityListItems(state_book_activity_list.list.items);\n            setlistPageData({\n                current_page: state_book_activity_list.list.current_page,\n                from: state_book_activity_list.list.from,\n                last_page: state_book_activity_list.list.last_page,\n                per_page: state_book_activity_list.list.per_page,\n                prev_page_url: state_book_activity_list.list.prev_page_url,\n                to: state_book_activity_list.list.to,\n                total: state_book_activity_list.list.total,\n                first_page: state_book_activity_list.list.first_page,\n                next_page: state_book_activity_list.list.next_page,\n                prev_page: state_book_activity_list.list.prev_page,\n            });\n        }\n    }, [state_book_activity_list])\n\n\n    useEffect(() => {\n        dispatch(attemptGetBookActivityListAction({\n            pageNumber: (params.page_number) ? params.page_number : '1',\n            gubun: (params.gubun) ? params.gubun : 'C11110'\n        }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, []);\n\n    useEffect(() => {\n        dispatch(attemptGetBookActivityListAction({\n            pageNumber: (params.page_number) ? params.page_number : '1',\n            gubun: (params.gubun) ? params.gubun : 'C11110'\n        }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, [params]);\n\n\n    useEffect(() => {\n\n        async function loadingState() {\n            await setIsLoading('loading');\n        }\n\n        async function idleState() {\n            await setIsLoading('idle');\n        }\n\n\n        if(state_book_activity_list.state === 'loading' || dtate_delete_book_activity.state === 'loading') {\n            loadingState()\n        } else {\n            idleState();\n        }\n\n    } ,[state_book_activity_list.state, dtate_delete_book_activity.state])\n\n\n    return {\n        booksActivityListItems,\n        listPageData,\n        __handleClickActivityDeleteButton,\n        __handlePaginate,\n        isLoading,\n    };\n};\n\n","import React from 'react';\nimport useDetail from 'hook/useDetail';\nimport { UserDetailForm, InfoSkeletonComponent } from 'components/elements';\n\nfunction UserDetail() {\n\n    const {\n        useFormCode,\n        userDetailPageData,\n        __handleUserEmailChange,\n        __handleUserNameChange,\n        __handleUserTypeChange,\n        __handleUserStateChange,\n        __handleUserLevelChange,\n        __handleUseDataSubmit,\n    } = useDetail();\n\n    return (\n        <>\n            <InfoSkeletonComponent\n                InfoTable={\n                    <UserDetailForm\n                        useformcode = {useFormCode}\n                        userdetaildata = {userDetailPageData}\n\n                        handleUserEmailChange = {__handleUserEmailChange}\n                        handleUserNameChange = {__handleUserNameChange}\n                        handleUserTypeChange = {__handleUserTypeChange}\n                        handleUserStateChange = {__handleUserStateChange}\n                        handleUserLevelChange = {__handleUserLevelChange}\n                        handleUseDataSubmit = {__handleUseDataSubmit}\n                    />\n                }\n            />\n        </>\n    );\n}\n\nexport default UserDetail;","import { useState, useEffect, MouseEvent} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'modules/redux';\nimport { attemptGetUserInfoAction, attemptUserDataUpdateAction, attemptGetUserInfoResetAction } from 'modules/redux/pages';\nimport { userDetailData } from 'modules/Interfaces';\nimport { useParams } from 'react-router-dom';\nimport GlobalAlert from 'lib/GlobalAlert';\n\ninterface formCode {\n    type_code: string[]\n    state_code: string[]\n    level_code: string[]\n}\n\ninterface RouteParams {\n    user_uuid: string\n}\n\nexport default function useDetail() {\n\n    const params = useParams<RouteParams>();\n\n    const dispatch = useDispatch();\n    const state_sitedata = useSelector((state: RootState) => state.sitedata);\n    const state_user_info = useSelector((state: RootState) => state.pages_state.users.user_info);\n    const state_user_data_update = useSelector((state: RootState) => state.pages_state.users.user_data_update);\n\n    //TODO: 배열처리를 어떻게 해야 할지 몰라서 나중에 수정하자.\n\n\n    const [useFormCode, setUserFormCode] = useState<Partial<{type_code: any, state_code: any, level_code: any}> | formCode>({\n        type_code: [],\n        state_code: [],\n        level_code: []\n    });\n\n\n    const [userDetailPageData, setUserDetailPageData] = useState<Partial<{user_uuid: string, user_id: number,user_email: string, user_name: string, user_type: string, user_state: string, user_level: string}> | userDetailData>({\n        user_uuid: '',\n        user_id: 0,\n        user_email: '',\n        user_name: '',\n        user_type: '',\n        user_state: '',\n        user_level: ''\n    });\n\n    const __handleUserEmailChange = (e: string) => {\n        setUserDetailPageData({\n            ...userDetailPageData,\n            user_email: e\n        });\n    }\n\n    const __handleUserNameChange = (e: string) => {\n        setUserDetailPageData({\n            ...userDetailPageData,\n            user_name: e\n        });\n    }\n\n    const __handleUserTypeChange = (e: string) => {\n        setUserDetailPageData({\n            ...userDetailPageData,\n            user_type: e\n        });\n    }\n\n    const __handleUserStateChange = (e: string) => {\n        setUserDetailPageData({\n            ...userDetailPageData,\n            user_state: e\n        });\n    }\n\n    const __handleUserLevelChange = (e: string) => {\n        setUserDetailPageData({\n            ...userDetailPageData,\n            user_level: e\n        });\n    }\n\n    const __handleUserInfoReset = () => {\n        dispatch(attemptGetUserInfoResetAction());\n    }\n\n    // const __handleUseDataSubmit = (e: FormEvent<HTMLFormElement>) => {\n    //     e.preventDefault();\n    // }\n\n    const __handleUseDataSubmit = (e: MouseEvent) => {\n        e.preventDefault();\n        dispatch(attemptUserDataUpdateAction({\n            user_uuid: userDetailPageData.user_uuid,\n            user_email: userDetailPageData.user_email,\n            user_name: userDetailPageData.user_name,\n            user_type: userDetailPageData.user_type,\n            user_state: userDetailPageData.user_state,\n            user_level: userDetailPageData.user_level,\n        }))\n    }\n\n    useEffect(() => {\n        if(state_user_info.state === 'success' && typeof state_user_info.data !== undefined && state_user_info.data) {\n            setUserDetailPageData({\n                user_uuid:state_user_info.data.user_uuid,\n                user_id:state_user_info.data.user_id,\n                user_email: state_user_info.data.user_email,\n                user_name: state_user_info.data.user_name,\n                user_type: state_user_info.data.user_type_code,\n                user_state: state_user_info.data.user_state_code,\n                user_level: state_user_info.data.user_level_code,\n            });\n        }\n    }, [state_user_info])\n\n    useEffect(() => {\n        if(state_sitedata.state === \"success\") {\n            setUserFormCode({\n                type_code: state_sitedata.code_list['A01'],\n                state_code: state_sitedata.code_list['A10'],\n                level_code: state_sitedata.code_list['A20']\n            });\n\n        }\n    }, [state_sitedata])\n\n    useEffect(() => {\n        dispatch(attemptGetUserInfoAction({\n            user_uuid: params.user_uuid\n        }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        if(state_user_data_update.state === \"failure\" && state_user_data_update.message) {\n            GlobalAlert.error({\n                text: state_user_data_update.message\n            });\n        } else if(state_user_data_update.state === \"success\") {\n            GlobalAlert.thenHistoryPush({\n                text: '완료 되었습니다.',\n                push_router: '/'\n            });\n        }\n    }, [state_user_data_update])\n\n\n    return {\n        userDetailPageData,\n        useFormCode,\n        __handleUserEmailChange,\n        __handleUserNameChange,\n        __handleUserTypeChange,\n        __handleUserStateChange,\n        __handleUserLevelChange,\n        __handleUseDataSubmit,\n        __handleUserInfoReset,\n    };\n};\n\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'modules/redux';\nimport { attemptGetUserInfoAction } from 'modules/redux/pages';\nimport * as Interfaces from 'modules/Interfaces';\nimport { useParams } from 'react-router-dom';\n\ninterface RouteParams {\n    user_uuid: string\n}\n\nexport default function useUserPage() {\n\n    const params = useParams<RouteParams>();\n\n    const dispatch = useDispatch();\n    const state_user_info = useSelector((state: RootState) => state.pages_state.users.user_info);\n\n    const [userInfoItems, setUserInfoItems ] = useState<Interfaces.userDetailData | undefined>({\n        user_id: 0,\n        user_uuid: '',\n        user_name: '',\n        user_email: '',\n        user_type: '',\n        user_type_code: '',\n        user_state: '',\n        user_state_code: '',\n        user_level: '',\n        user_level_code: '',\n        user_activity_state: '',\n        user_active: '',\n        activity_count: 0,\n        read_book_count: 0,\n        upload_book_count: 0,\n        user_created_at: '',\n        updated_at: '',\n        created_at_string: '',\n        updated_at_string: '',\n        email_verified_at_string: '',\n    });\n\n    const getUserInfo = (user_uuid : string) => {\n        dispatch(attemptGetUserInfoAction({\n            user_uuid: user_uuid\n        }));\n    }\n\n    useEffect(() => {\n        if(state_user_info !== undefined) {\n            setUserInfoItems(state_user_info.data);\n        }\n\n    }, [state_user_info])\n\n    useEffect(() => {\n        if(params.user_uuid) {\n            getUserInfo(params.user_uuid)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, [])\n\n    return {\n        userInfoItems,\n    };\n};","import React from 'react';\nimport useUserInfo from 'hook/useUserInfo';\nimport { InfoSkeletonComponent, UserInfoTable } from 'components/elements';\n\n\nfunction UserInfoPage() {\n\n    const {\n        userInfoItems\n    } = useUserInfo();\n\n    return (\n        <>\n            <InfoSkeletonComponent\n                InfoTable={\n                    <UserInfoTable\n                        userInfoData = {userInfoItems}\n                    />\n                }\n            />\n        </>\n    );\n}\n\nexport default UserInfoPage;","import React from 'react';\nimport { SearchSkeletonComponent, BookCreateForm, BookSearchListTable } from 'components/elements';\nimport useBookCreate from 'hook/useBookCreate';\n\n\nfunction BookCreatePage() {\n\n    const {\n        __handleBookSearchButtonClick,\n        __handleBookSearchInputCange,\n        bookSearchResultItem,\n        __handleClickBookServerCreate,\n        bookSearchString,\n        isLoading,\n        __handleEnterKeyPress,\n    } = useBookCreate();\n    return (\n        <>\n            <SearchSkeletonComponent\n                SearchTable={\n                    <>\n                        <BookCreateForm\n                            handleBookSearchButtonClick={__handleBookSearchButtonClick}\n                            handleBookSearchInputCange={__handleBookSearchInputCange}\n                            bookSearchString={bookSearchString}\n                            handleEnterKeyPress = { __handleEnterKeyPress }\n                        />\n                    </>\n                }\n                ListTable={\n                    <>\n                        <BookSearchListTable\n                            isloading={isLoading}\n                            items={bookSearchResultItem}\n                            handleClickBookCreate={__handleClickBookServerCreate}\n                        />\n                    </>\n                }\n            />\n        </>\n    );\n}\n\nexport default BookCreatePage;","import { useState, useEffect, MouseEvent} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'modules/redux';\nimport { attemptBookCreateAction, attemptBookCreateResetAction} from 'modules/redux/pages';\nimport * as Interfaces from 'modules/Interfaces';\nimport GlobalAlert from 'lib/GlobalAlert';\nimport * as API from 'lib/API';\nimport axios from 'axios';\n\nexport default function useBookCreate() {\n\n    const state_books = useSelector((state: RootState) => state.pages_state.books);\n\n    const dispatch = useDispatch();\n    const [bookSearchString, setBookSearchString] = useState('');\n    const [bookSearchResultItem, setBookSearchResultItem] = useState<Interfaces.searchBookInfoInterface[]>([]);\n\n    const [isLoading, setIsLoading] = useState<Interfaces.baseSagaStateType>('idle');\n\n    const searchDaumBookApi = () => {\n        setIsLoading('loading');\n        if(bookSearchString.length > 0) {\n            try {\n                axios.get(`https://dapi.kakao.com/v3/search/book?target=title&query=${bookSearchString}`, {headers: {'Authorization':'KakaoAK 2f818df48b7f3e5ec3b2e81689df6506'}})\n                .then(res => {\n                    setBookSearchResultItem(res.data.documents);\n                })\n            } catch (error) {\n                GlobalAlert.thenLocationReload({\n                    text: '문제가 발생 했습니다. 다시 시도해 주세요.'\n                });\n            }\n        } else {\n            GlobalAlert.default({\n                text: '검색어를 입력해 주세요.'\n            })\n        }\n\n        setIsLoading('success');\n    }\n\n    const __handleBookSearchButtonClick = (e: MouseEvent) => {\n        e.preventDefault();\n\n        searchDaumBookApi();\n    }\n\n    const __handleBookSearchInputCange = (e: string) => {\n        setBookSearchString(e);\n    }\n\n    const __handleEnterKeyPress = () => {\n        searchDaumBookApi();\n    }\n\n    const __handleClickBookServerCreate = (state_key: number) => {\n\n        const book_info = bookSearchResultItem[state_key];\n\n        book_info.isbn.split(' ').map( async (n:any, i:number) => {\n            if(i === 1) {\n                const respone = await API.attemptBookExitsCheckRequest({book_uuid: n})\n\n                if(respone.data.info === true) {\n                    GlobalAlert.default({\n                        text: '이미 등록 되어 있습니다.'\n                    })\n                } else {\n                    dispatch(attemptBookCreateAction({\n                        uuid: n,\n                        authors: book_info.authors.join(\", \"),\n                        contents: book_info.contents,\n                        isbn: book_info.isbn,\n                        publisher: book_info.publisher,\n                        thumbnail: book_info.thumbnail,\n                        title: book_info.title,\n                    }))\n                }\n            }\n        } );\n    }\n\n    useEffect(() => {\n    }, [bookSearchResultItem])\n\n    useEffect(() => {\n        if(state_books.book_create.state === 'success') {\n            GlobalAlert.thenHistoryPush({\n                text: '등록 처리 되었습니다.',\n                push_router: '/books/1'\n            });\n            dispatch(attemptBookCreateResetAction());\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps,\n    }, [state_books.book_create.state])\n\n    return {\n        __handleBookSearchButtonClick,\n        __handleBookSearchInputCange,\n        bookSearchResultItem,\n        bookSearchString,\n        __handleClickBookServerCreate,\n        isLoading,\n        __handleEnterKeyPress,\n    };\n};\n\n","import React from 'react';\n\nfunction TestPage() {\n    return (\n        <div>\n            Test Page\n        </div>\n    );\n}\n\nexport default TestPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction BlankPage() {\n\n    const modalTabIndex = -1;\n\n    return (\n        <>\n\n        {/* <!-- Page Wrapper --> */}\n        <div id=\"wrapper\">\n\n            {/* <!-- Sidebar --> */}\n            <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n\n                {/* <!-- Sidebar - Brand --> */}\n                <Link to={process.env.PUBLIC_URL + \"/\"} className=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"index.html\">\n                    <div className=\"sidebar-brand-icon rotate-n-15\">\n                        <i className=\"fas fa-laugh-wink\"></i>\n                    </div>\n                    <div className=\"sidebar-brand-text mx-3\">SB Admin <sup>2</sup></div>\n                </Link>\n\n                {/* <!-- Divider --> */}\n                <hr className=\"sidebar-divider my-0\"></hr>\n\n                {/* <!-- Nav Item - Dashboard --> */}\n                <li className=\"nav-item\">\n                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"nav-link\" href=\"index.html\"><i className=\"fas fa-fw fa-tachometer-alt\"></i><span>Dashboard</span></Link>\n                </li>\n\n                {/* <!-- Divider --> */}\n                <hr className=\"sidebar-divider\"></hr>\n\n                {/* <!-- Heading --> */}\n                <div className=\"sidebar-heading\">Interface</div>\n\n                {/* <!-- Nav Item - Pages Collapse Menu --> */}\n                <li className=\"nav-item\">\n                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\"><i className=\"fas fa-fw fa-cog\"></i><span>Components</span></Link>\n                    <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\n                        <div className=\"bg-white py-2 collapse-inner rounded\">\n                            <h6 className=\"collapse-header\">Custom Components:</h6>\n                            <Link to={process.env.PUBLIC_URL + \"/\"} className=\"collapse-item\" href=\"buttons.html\">Buttons</Link>\n                            <Link to={process.env.PUBLIC_URL + \"/\"} className=\"collapse-item\" href=\"cards.html\">Cards</Link>\n                        </div>\n                    </div>\n                </li>\n\n                {/* <!-- Nav Item - Utilities Collapse Menu --> */}\n                <li className=\"nav-item\">\n                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseUtilities\" aria-expanded=\"true\" aria-controls=\"collapseUtilities\"> <i className=\"fas fa-fw fa-wrench\"></i> <span>Utilities</span> </Link>\n                    <div id=\"collapseUtilities\" className=\"collapse\" aria-labelledby=\"headingUtilities\" data-parent=\"#accordionSidebar\">\n                        <div className=\"bg-white py-2 collapse-inner rounded\">\n                            <h6 className=\"collapse-header\">Custom Utilities:</h6>\n                            <Link to={process.env.PUBLIC_URL + \"/\"} className=\"collapse-item\" href=\"utilities-color.html\">Colors</Link>\n                            <Link to={process.env.PUBLIC_URL + \"/\"} className=\"collapse-item\" href=\"utilities-border.html\">Borders</Link>\n                            <Link to={process.env.PUBLIC_URL + \"/\"} className=\"collapse-item\" href=\"utilities-animation.html\">Animations</Link>\n                            <Link to={process.env.PUBLIC_URL + \"/\"} className=\"collapse-item\" href=\"utilities-other.html\">Other</Link>\n                        </div>\n                    </div>\n                </li>\n\n                {/* <!-- Divider --> */}\n                <hr className=\"sidebar-divider\"></hr>\n\n                {/* <!-- Heading --> */}\n                <div className=\"sidebar-heading\"> Addons </div>\n\n                {/* <!-- Nav Item - Pages Collapse Menu --> */}\n                <li className=\"nav-item\">\n                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapsePages\" aria-expanded=\"true\" aria-controls=\"collapsePages\"> <i className=\"fas fa-fw fa-folder\"></i> <span>Pages</span> </Link>\n                    <div id=\"collapsePages\" className=\"collapse\" aria-labelledby=\"headingPages\" data-parent=\"#accordionSidebar\">\n                        <div className=\"bg-white py-2 collapse-inner rounded\">\n                            <h6 className=\"collapse-header\">Login Screens:</h6>\n                            <Link to={process.env.PUBLIC_URL + \"/\"} className=\"collapse-item\" href=\"login.html\">Login</Link>\n                            <Link to={process.env.PUBLIC_URL + \"/\"} className=\"collapse-item\" href=\"register.html\">Register</Link>\n                            <Link to={process.env.PUBLIC_URL + \"/\"} className=\"collapse-item\" href=\"forgot-password.html\">Forgot Password</Link>\n                            <div className=\"collapse-divider\"></div>\n                            <h6 className=\"collapse-header\">Other Pages:</h6>\n                            <Link to={process.env.PUBLIC_URL + \"/\"} className=\"collapse-item\" href=\"404.html\">404 Page</Link>\n                            <Link to={process.env.PUBLIC_URL + \"/\"} className=\"collapse-item\" href=\"blank.html\">Blank Page</Link>\n                        </div>\n                    </div>\n                </li>\n\n                {/* <!-- Nav Item - Charts --> */}\n                <li className=\"nav-item\">\n                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"nav-link\" href=\"charts.html\"> <i className=\"fas fa-fw fa-chart-area\"></i> <span>Charts</span></Link>\n                </li>\n\n                {/* <!-- Nav Item - Tables --> */}\n                <li className=\"nav-item active\">\n                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"nav-link\" href=\"tables.html\"> <i className=\"fas fa-fw fa-table\"></i> <span>Tables</span></Link>\n                </li>\n\n                {/* <!-- Divider --> */}\n                <hr className=\"sidebar-divider d-none d-md-block\"></hr>\n\n                {/* <!-- Sidebar Toggler (Sidebar) --> */}\n                <div className=\"text-center d-none d-md-inline\">\n                    <button className=\"rounded-circle border-0\" id=\"sidebarToggle\"></button>\n                </div>\n\n            </ul>\n            {/* <!-- End of Sidebar --> */}\n\n            {/* <!-- Content Wrapper --> */}\n            <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n\n                {/* <!-- Main Content --> */}\n                <div id=\"content\">\n\n                    {/* <!-- Topbar --> */}\n                    <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n\n                        {/* <!-- Sidebar Toggle (Topbar) --> */}\n                        <button id=\"sidebarToggleTop\" className=\"btn btn-link d-md-none rounded-circle mr-3\">\n                            <i className=\"fa fa-bars\"></i>\n                        </button>\n\n                        {/* <!-- Topbar Search --> */}\n                        <form className=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\">\n                            <div className=\"input-group\">\n                                <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\"/>\n                                <div className=\"input-group-append\">\n                                    <button className=\"btn btn-primary\" type=\"button\">\n                                        <i className=\"fas fa-search fa-sm\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n\n                        {/* <!-- Topbar Navbar --> */}\n                        <ul className=\"navbar-nav ml-auto\">\n\n                            {/* <!-- Nav Item - Search Dropdown (Visible Only XS) --> */}\n                            <li className=\"nav-item dropdown no-arrow d-sm-none\">\n                                <Link to={process.env.PUBLIC_URL + \"/\"} className=\"nav-link dropdown-toggle\" href=\"#\" id=\"searchDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i className=\"fas fa-search fa-fw\"></i> </Link>\n                                {/* <!-- Dropdown - Messages --> */}\n                                <div className=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\" aria-labelledby=\"searchDropdown\">\n                                    <form className=\"form-inline mr-auto w-100 navbar-search\">\n                                        <div className=\"input-group\">\n                                            <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\n                                            <div className=\"input-group-append\">\n                                                <button className=\"btn btn-primary\" type=\"button\">\n                                                    <i className=\"fas fa-search fa-sm\"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div>\n                            </li>\n\n                            {/* <!-- Nav Item - Alerts --> */}\n                            <li className=\"nav-item dropdown no-arrow mx-1\">\n                                <Link to={process.env.PUBLIC_URL + \"/\"} className=\"nav-link dropdown-toggle\" href=\"#\" id=\"alertsDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    <i className=\"fas fa-bell fa-fw\"></i>\n                                    {/* <!-- Counter - Alerts --> */}\n                                    <span className=\"badge badge-danger badge-counter\">3+</span>\n                                </Link>\n                                {/* <!-- Dropdown - Alerts --> */}\n                                <div className=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"alertsDropdown\">\n                                    <h6 className=\"dropdown-header\">Alerts Center</h6>\n                                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                        <div className=\"mr-3\">\n                                            <div className=\"icon-circle bg-primary\"> <i className=\"fas fa-file-alt text-white\"></i> </div>\n                                        </div>\n                                        <div>\n                                            <div className=\"small text-gray-500\">December 12, 2019</div>\n                                            <span className=\"font-weight-bold\">A new monthly report is ready to download!</span>\n                                        </div>\n                                    </Link>\n                                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                        <div className=\"mr-3\">\n                                            <div className=\"icon-circle bg-success\"> <i className=\"fas fa-donate text-white\"></i> </div>\n                                        </div>\n                                        <div>\n                                            <div className=\"small text-gray-500\">December 7, 2019</div>\n                                            $290.29 has been deposited into your account!\n                                        </div>\n                                    </Link>\n                                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                        <div className=\"mr-3\">\n                                            <div className=\"icon-circle bg-warning\">\n                                                <i className=\"fas fa-exclamation-triangle text-white\"></i>\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <div className=\"small text-gray-500\">December 2, 2019</div>\n                                            Spending Alert: We've noticed unusually high spending for your account.\n                                        </div>\n                                    </Link>\n                                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item text-center small text-gray-500\" href=\"#\">Show All Alerts</Link>\n                                </div>\n                            </li>\n\n                            {/* <!-- Nav Item - Messages --> */}\n                            <li className=\"nav-item dropdown no-arrow mx-1\">\n                                <Link to={process.env.PUBLIC_URL + \"/\"} className=\"nav-link dropdown-toggle\" href=\"#\" id=\"messagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    <i className=\"fas fa-envelope fa-fw\"></i>\n                                    {/* <!-- Counter - Messages --> */}\n                                    <span className=\"badge badge-danger badge-counter\">7</span>\n                                </Link>\n                                {/* <!-- Dropdown - Messages --> */}\n                                <div className=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"messagesDropdown\">\n                                    <h6 className=\"dropdown-header\"> Message Center </h6>\n                                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                        <div className=\"dropdown-list-image mr-3\">\n                                            <img className=\"rounded-circle\" src=\"https://source.unsplash.com/fn_BT9fwg_E/60x60\" alt=\"\"/>>\n                                            <div className=\"status-indicator bg-success\"></div>\n                                        </div>\n                                        <div className=\"font-weight-bold\">\n                                            <div className=\"text-truncate\">Hi there! I am wondering if you can help me with a problem I've been having.</div>\n                                            <div className=\"small text-gray-500\">Emily Fowler · 58m</div>\n                                        </div>\n                                    </Link>\n                                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                        <div className=\"dropdown-list-image mr-3\">\n                                            <img className=\"rounded-circle\" src=\"https://source.unsplash.com/AU4VPcFN4LE/60x60\" alt=\"\"/>\n                                            <div className=\"status-indicator\"></div>\n                                        </div>\n                                        <div>\n                                            <div className=\"text-truncate\">I have the photos that you ordered last month, how would you like them sent to you?</div>\n                                            <div className=\"small text-gray-500\">Jae Chun · 1d</div>\n                                        </div>\n                                    </Link>\n                                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                        <div className=\"dropdown-list-image mr-3\">\n                                            <img className=\"rounded-circle\" src=\"https://source.unsplash.com/CS2uCrpNzJY/60x60\" alt=\"\"/>\n                                            <div className=\"status-indicator bg-warning\"></div>\n                                        </div>\n                                        <div>\n                                            <div className=\"text-truncate\">Last month's report looks great, I am very happy with the progress so far, keep up the good work!</div>\n                                            <div className=\"small text-gray-500\">Morgan Alvarez · 2d</div>\n                                        </div>\n                                    </Link>\n                                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                        <div className=\"dropdown-list-image mr-3\">\n                                            <img className=\"rounded-circle\" src=\"https://source.unsplash.com/Mv9hjnEUHR4/60x60\" alt=\"\"/>\n                                            <div className=\"status-indicator bg-success\"></div>\n                                        </div>\n                                        <div>\n                                            <div className=\"text-truncate\">Am I a good boy? The reason I ask is because someone told me that people say this to all dogs, even if they aren't good...</div>\n                                            <div className=\"small text-gray-500\">Chicken the Dog · 2w</div>\n                                        </div>\n                                    </Link>\n                                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item text-center small text-gray-500\" href=\"#\">Read More Messages</Link>\n                                </div>\n                            </li>\n\n                            <div className=\"topbar-divider d-none d-sm-block\"></div>\n\n                            {/* <!-- Nav Item - User Information --> */}\n                            <li className=\"nav-item dropdown no-arrow\">\n                                <Link to={process.env.PUBLIC_URL + \"/\"} className=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">Valerie Luna</span>\n                                    <img className=\"img-profile rounded-circle\" src=\"https://source.unsplash.com/QAB-WJcbgJk/60x60\" alt=\"\"/>\n                                </Link>\n                                {/* <!-- Dropdown - User Information --> */}\n                                <div className=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"userDropdown\">\n                                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item\" href=\"#\"> <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"></i> Profile </Link>\n                                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item\" href=\"#\"> <i className=\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\"></i> Settings </Link>\n                                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item\" href=\"#\"> <i className=\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\"></i> Activity Log </Link>\n                                    <div className=\"dropdown-divider\"></div>\n                                    <Link to={process.env.PUBLIC_URL + \"/\"} className=\"dropdown-item\" href=\"#\" data-toggle=\"modal\" data-target=\"#logoutModal\"> <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i> Logout </Link>\n                                </div>\n                            </li>\n\n                        </ul>\n\n                    </nav>\n                    {/* <!-- End of Topbar --> */}\n\n                    {/* <!-- Begin Page Content --> */}\n                    <div className=\"container-fluid\">\n\n                    {/* <!-- Page Heading --> */}\n                    <h1 className=\"h3 mb-4 text-gray-800\">Blank Page</h1>\n\n                    </div>\n                    {/* <!-- /.container-fluid --> */}\n\n                </div>\n                {/* <!-- End of Main Content --> */}\n\n                {/* <!-- Footer --> */}\n                <footer className=\"sticky-footer bg-white\">\n                    <div className=\"container my-auto\">\n                        <div className=\"copyright text-center my-auto\">\n                            <span>Copyright &copy; Your Website 2019</span>\n                        </div>\n                    </div>\n                </footer>\n                {/* <!-- End of Footer --> */}\n\n            </div>\n            {/* <!-- End of Content Wrapper --> */}\n\n        </div>\n        {/* <!-- End of Page Wrapper --> */}\n\n        {/* <!-- Scroll to Top Button--> */}\n        <Link to={process.env.PUBLIC_URL + \"/\"} className=\"scroll-to-top rounded\" href=\"#page-top\">\n            <i className=\"fas fa-angle-up\"></i>\n        </Link>\n\n        {/* <!-- Logout Modal--> */}\n        <div className=\"modal fade\" id=\"logoutModal\" tabIndex={modalTabIndex} role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Ready to Leave?</h5>\n                        <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">×</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">Select \"Logout\" below if you are ready to end your current session.</div>\n                    <div className=\"modal-footer\">\n                        <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\n                        <Link to={process.env.PUBLIC_URL + \"/\"} className=\"btn btn-primary\" href=\"login.html\">Logout</Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        </>\n    );\n}\n\nexport default BlankPage;","import React, {useEffect, useState} from \"react\";\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\nimport * as Helper from 'lib/Helper';\nimport history from 'routes/History';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n    TestPage,\n    LoginPage,\n    UsersPage,\n    UserDetail,\n    BlankPage,\n    BookCreatePage,\n    BooksListPage,\n    RecommendBooksListPage,\n    BookActivityListPage,\n    UserInfoPage,\n} from 'components/pages';\n\nimport {LoadingSpinner} from 'components/elements';\n\nimport { RootState } from 'modules/redux';\nimport { getRootDataAction } from 'modules/redux/sitedatas';\n\n\ninterface RootProps  {\n    Routerhistory: any\n};\n\nconst Root = ({\n    Routerhistory\n} : RootProps) => {\n\n    const dispatch = useDispatch();\n\n    const router_state = useSelector((state: RootState) => state.router);\n    const sitedata_state = useSelector((state: RootState) => state.sitedata.state);\n\n    const [ isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        if(!Helper.getAccessToken()) {\n            if(router_state.location.pathname !== process.env.PUBLIC_URL + '/login') {\n                history.push(process.env.PUBLIC_URL + '/login');\n            }\n        }\n    }, [router_state])\n\n    // TODO: 소스 정리 필요.\n    useEffect(() => {\n        setIsLoading(true);\n        if(!Helper.getAccessToken()) {\n            setIsLoading(false);\n            if(router_state.location.pathname !== process.env.PUBLIC_URL + '/login') {\n                history.push(process.env.PUBLIC_URL + '/login');\n            }\n        } else {\n            dispatch(getRootDataAction());\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, []);\n\n\n      useEffect(() => {\n          if(sitedata_state === 'success') {\n            setIsLoading(false);\n          }\n      }, [sitedata_state])\n\n    if(isLoading) {\n        return (\n            <div style={{ height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center',}}>\n                <LoadingSpinner />\n            </div>\n        );\n    } else {\n\n    return (\n            <Router history={ Routerhistory }>\n                <Switch>\n                    <Route path={process.env.PUBLIC_URL + \"/\"} exact={ true } component={ UsersPage } />\n                    <Route path={process.env.PUBLIC_URL + \"/blank\"} exact={ true } component={ BlankPage } />\n\n                    <Route path={process.env.PUBLIC_URL + \"/login\"} exact={ true } component={ LoginPage } />\n                    <Route path={process.env.PUBLIC_URL + \"/book/create\"} exact={ true } component={ BookCreatePage } />\n\n                    <Route path={process.env.PUBLIC_URL + \"/users/:page_number\"} exact={ true } component={ UsersPage } />\n                    <Route path={process.env.PUBLIC_URL + \"/books/:page_number\"} exact={ true } component={ BooksListPage } />\n                    <Route path={process.env.PUBLIC_URL + \"/books/activity/:gugun/:page_number\"} exact={ true } component={ BookActivityListPage } />\n                    <Route path={process.env.PUBLIC_URL + \"/books/recommend/:gubun/:page_number\"} exact={ true } component={ RecommendBooksListPage } />\n                    <Route path={process.env.PUBLIC_URL + \"/user/:user_uuid/detail\"} exact={ true } component={ UserDetail } />\n                    <Route path={process.env.PUBLIC_URL + \"/user/:user_uuid/info\"} exact={ true } component={ UserInfoPage } />\n\n\n                    <Route path={process.env.PUBLIC_URL + \"/test\"} exact={ true } component={ TestPage } />\n                    <Redirect path=\"*\" to={process.env.PUBLIC_URL + \"/login\"} />\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default Root;","import * as React from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport History from './routes/History';\nimport { createBrowserHistory } from 'history'\nimport configureStore from 'modules/configureStore'\n\nimport Root from './routes/Root';\n\nimport \"assets/css/sb-admin-2.css\";\n\n\nconst history = createBrowserHistory();\n\ndeclare var window: any;\nconst store = configureStore(history, window.INITIAL_REDUX_STATE);\n\nconst App = () => {\n    return (\n        <Provider store={ store }>\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <Root Routerhistory={ History }/>\n            </BrowserRouter>\n        </Provider>\n    );\n}\n\nexport default App;","import { Store, createStore, applyMiddleware } from 'redux'\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { History } from 'history';\n\nimport rootReducer, { RootState, rootSaga } from './redux';\n\nexport default function configureStore(history: History, initialState: RootState): Store<RootState> {\n\n    let compose;\n\n    const isDevelopment = process.env.REACT_APP_ENV === 'development1';\n\n    const composeEnhancers = composeWithDevTools({});\n    const sagaMiddleware = createSagaMiddleware();\n\n    if( isDevelopment ) {\n        compose = composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware, createLogger()));\n    } else {\n        compose = composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware));\n    }\n\n    const store = createStore(\n        rootReducer(history),\n        initialState,\n        compose\n    );\n    sagaMiddleware.run(rootSaga);\n    return store\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export { default } from './reducer';\nexport * from './actions';\nexport * from './types';\nexport * from './sagas';","// tslint:disable:interface-name\nimport { createBrowserHistory } from 'history';\n\ndeclare global {\n    interface Window {\n        dataLayer: any;\n    }\n}\n\nconst History = createBrowserHistory();\n\nexport default History;","/**\n * 개발 디버그\n * @param e\n * @constructor\n */\nexport const DEBUG = (e: object) => {\n    console.debug('%c::DEBUG::', 'color: green; font-weight: bold;',e);\n};\n\n/**\n * 로컬 스토리지 관리\n */\nexport const storageManager = {\n    set: (key: string, object: any) => {\n        if(!localStorage) return;\n        localStorage.setItem(key, (typeof object) === 'string' ? object : JSON.stringify(object) );\n    },\n    get: (key: string) => {\n        if(!localStorage) return null;\n\n        if(!localStorage[key]) {\n            return null;\n        }\n\n        try {\n            return JSON.parse(localStorage.getItem(key)!);\n        } catch(e) {\n            return localStorage.getItem(key);\n        }\n    },\n    remove: (key: string) => {\n        if(!localStorage) return null;\n\n        if(localStorage[key]) {\n            localStorage.removeItem(key);\n        }\n    }\n};\n\nexport function getAccessToken() {\n    return cookieManager.get('login_access_token');\n}\n\nexport function getRefreshToken() {\n    return cookieManager.get('login_refresh_token');\n}\n\nexport function setLoginInfo(payload: any): void {\n    cookieManager.set('login_token_type', payload.token_type!);\n    cookieManager.set('login_expires_in', payload.expires_in!);\n    cookieManager.set('login_access_token', payload.access_token!);\n    cookieManager.set('login_refresh_token', payload.refresh_token!);\n    cookieManager.set('login_user_name', payload.user_name!);\n}\n\nexport async function setLoginInfoRefresh(payload: any) {\n    await cookieManager.set('login_token_type', payload.token_type!);\n    await cookieManager.set('login_expires_in', payload.expires_in!);\n    await cookieManager.set('login_access_token', payload.access_token!);\n    await cookieManager.set('login_refresh_token', payload.refresh_token!);\n}\n\nexport function removeLoginInfo(): void {\n    cookieManager.remove('login_token_type');\n    cookieManager.remove('login_expires_in');\n    cookieManager.remove('login_access_token');\n    cookieManager.remove('login_refresh_token');\n    cookieManager.remove('login_user_name');\n}\n\n/**\n * 쿠키정보.\n */\nexport const cookieManager = {\n    set: (cname: string, cvalue: string | number, hours: number = 1) => {\n        let d = new Date();\n        d.setTime(d.getTime() + hours * 60 * 60 * 1000); // (exdays * 24 * 60 * 60 * 1000));\n        let expires = \"expires=\" + d.toUTCString();\n        document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n    },\n    get: (cname: string) => {\n\n        let name = cname + \"=\";\n        let ca = document.cookie.split(\";\");\n\n        for (let i = 0; i < ca.length; i++) {\n            let c = ca[i];\n            while (c.charAt(0) === \" \") {\n                c = c.substring(1);\n            }\n            if (c.indexOf(name) === 0) {\n                return c.substring(name.length, c.length);\n            }\n        }\n\n        return \"\";\n    },\n    remove: (cname: string) => {\n        let expires = \"expires=Thu, 01 Jan 1970 00:00:00 UTC;\"\n        document.cookie = cname + \"=;\" + expires + \";path=/\";\n    }\n}\n\nexport const isEmpty = function(value: any): boolean\n{\n    if( value === \"\" || value === null || value === undefined || ( value !== null && typeof value === \"object\" && !Object.keys(value).length ) ){\n      return true\n    }else{\n      return false\n    }\n};","import { defaultServerResponse } from 'modules/Interfaces';\nimport history from 'routes/History';\n\nimport axios ,{\n    AxiosInstance,\n    AxiosPromise\n} from 'axios';\n\nimport * as Helper from 'lib/Helper';\nimport GlobalAlert from 'lib/GlobalAlert';\n\nexport interface tokenRefreshInterface {\n    state: boolean;\n    data?: {\n        token_type?: string;\n        expires_in?: number;\n        access_token?: string;\n        refresh_token?: string;\n        user_name?: string;\n    }\n    message?: string;\n}\n\nexport interface apiRequest {\n    authType: boolean;\n    method: 'get'|'post'|'delete'|'put';\n    endpoint: string;\n    payload: any\n\n}\n\nconst promise = <T>(axiosPromise: AxiosPromise): Promise<T> => {\n    return new Promise<T | any>((resolve, reject) => {\n        axiosPromise.then(response => {\n            resolve({\n                state: true,\n                data: response.data\n            });\n        })\n        .catch(error => {\n            if (error.response) {\n                if(error.response.status === 401 || error.response.status === 403) {\n                    Helper.removeLoginInfo();\n                    GlobalAlert.default({\n                        text: error.response.data.error_message,\n                    });\n                    history.push(process.env.PUBLIC_URL + '/login');\n                }\n\n                const errorMessage = error.response.data.error_message;\n                if(typeof errorMessage === 'object') {\n                    // console.debug(errorMessage.toString());\n                    // 어떻게 할것 인지?\n                } else {\n                    resolve({\n                        state: false,\n                        message: (error.response.data.error_message) ? error.response.data.error_message : \"처리중 문제가 발생했습니다.\"\n                    });\n                }\n            } else if (error.request) {\n                resolve({\n                    status: 444,\n                    message: \"서버와의 통신중 문제가 발생했습니다.\"\n                });\n            } else {\n                resolve({\n                    status: 417,\n                    message: \"알수 없는 에러 입니다.\"\n                });\n            }\n        });\n    });\n};\n\nexport const refresh_token = async ()  => {\n\n    const defaultAxiosinstance: AxiosInstance = axios.create({\n        baseURL: process.env.REACT_APP_API_URL,\n        timeout: 20000,\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Request-Client-Type\": \"A01001\",\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\",\n            \"Authorization\" : \"Bearer \" + Helper.getAccessToken(),\n        }\n    });\n\n    await defaultAxiosinstance.post('/api/v1/auth/refresh_token', {\n        refresh_token: await Helper.getRefreshToken()\n    }).then(async response => {\n        await Helper.setLoginInfoRefresh(response.data);\n        return true;\n    }).catch(error => {\n        console.debug(error);\n        return false;\n    });\n\n    return true;\n}\n\nconst error = (message: string): never => {\n    throw new Error(message);\n};\n\nexport const start = async ( {authType, method, endpoint, payload}: apiRequest) => {\n    if(authType) {\n        // await refresh_token();\n    }\n    const defaultAxiosinstance: AxiosInstance = axios.create({\n        baseURL: process.env.REACT_APP_API_URL,\n        timeout: 20000,\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Request-Client-Type\": \"A01001\",\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\",\n            \"Authorization\" : \"Bearer \" + Helper.getAccessToken(),\n        }\n    });\n\n    switch(method) {\n        case 'get': {\n            return promise<defaultServerResponse>(defaultAxiosinstance.get(endpoint, payload));\n        }\n        case 'post': {\n            return promise<defaultServerResponse>(defaultAxiosinstance.post(endpoint, payload));\n        }\n        case 'put': {\n            return promise<defaultServerResponse>(defaultAxiosinstance.put(endpoint, payload));\n        }\n        case 'delete': {\n            return promise<defaultServerResponse>(defaultAxiosinstance.delete(endpoint, payload));\n        }\n        default:\n            return error(\"Should never get here\");\n    }\n}","import * as GlobalAxios from 'lib/GlobalAxios';\nimport * as Interfaces from 'modules/Interfaces';\n\nexport function attemptLogin(payload: Interfaces.loginRequest): Promise<Interfaces.defaultServerResponse> {\n    return GlobalAxios.start({ authType: false, method: 'post', endpoint: '/api/v1/auth/login', payload: payload});\n};\n\nexport function getSiteData(): Promise<Interfaces.defaultServerResponse> {\n    // return GlobalAxios.start(true , 'get', '/api/v1/system/basedata', {});\n    return GlobalAxios.start({ authType: true, method: 'get', endpoint: '/api/v1/system/basedata', payload: {} });\n};\n\nexport function attemptGetUserList(payload: Interfaces.getUserListRequest): Promise<Interfaces.defaultServerResponse> {\n    // return GlobalAxios.start(true, 'get', `/api/v1/admin/users/page/${payload.pageNumber}`, []);\n    return GlobalAxios.start({ authType: true, method: 'get', endpoint: `/api/v1/admin/users/page/${payload.pageNumber}`, payload: {} });\n};\n\nexport function attemptGetUserInfo(payload: Interfaces.getUserInfoRequest): Promise<Interfaces.defaultServerResponse> {\n    // return GlobalAxios.start(true, 'get', `/api/v1/admin/users/${payload.user_uuid}/info`, []);\n    return GlobalAxios.start({ authType: true, method: 'get', endpoint: `/api/v1/admin/users/${payload.user_uuid}/info`, payload: [] });\n};\n\nexport function attemptUserDataUpdate(payload: Interfaces.UserDataUpdate): Promise<Interfaces.defaultServerResponse> {\n    // return GlobalAxios.start(true, 'post', `/api/v1/admin/users/${payload.user_uuid}/info`, payload);\n    return GlobalAxios.start({ authType: true, method: 'post', endpoint: `/api/v1/admin/users/${payload.user_uuid}/info`, payload: {} });\n};\n\nexport function attemptUserActiveUpdate(payload: Interfaces.userActiveRequest): Promise<Interfaces.defaultServerResponse> {\n    // return GlobalAxios.start(true, 'post', `/api/v1/admin/users/active`, payload);\n    return GlobalAxios.start({ authType: true, method: 'post', endpoint: `/api/v1/admin/users/active`, payload: payload });\n};\n\nexport function attemptBookExitsCheckRequest(payload: Interfaces.bookExitsCheckRequest): Promise<Interfaces.defaultServerResponse> {\n    // return GlobalAxios.start(true, 'get', `/api/v1/admin/book/${payload.book_uuid}/exits`, {});\n    return GlobalAxios.start({ authType: true, method: 'get', endpoint: `/api/v1/admin/book/${payload.book_uuid}/exits`, payload: {} });\n};\n\nexport function attemptBookCreateRequest(payload: Interfaces.bookCreateRequest): Promise<Interfaces.defaultServerResponse> {\n    // return GlobalAxios.start(true, 'post', `/api/v1/user/books`, payload);\n    return GlobalAxios.start({ authType: true, method: 'post', endpoint: `/api/v1/user/books`, payload: payload });\n};\n\nexport function attemptGetBookListRequest(payload: Interfaces.getPageingListRequest): Promise<Interfaces.defaultServerResponse> {\n    // return GlobalAxios.start(true, 'get', `/api/v1/admin/books/page/${payload.pageNumber}`, payload);\n    return GlobalAxios.start({ authType: true, method: 'get', endpoint: `/api/v1/admin/books/page/${payload.pageNumber}`, payload: payload });\n};\n\nexport function attemptGetRecommendBookListRequest(payload: Interfaces.getRecommendRequest): Promise<Interfaces.defaultServerResponse> {\n    // return GlobalAxios.start(true, 'get', `/api/v1/admin/books/recommend/${payload.gubun}/page/${payload.pageNumber}`, payload);\n    return GlobalAxios.start({ authType: true, method: 'get', endpoint:  `/api/v1/admin/books/recommend/${payload.gubun}/page/${payload.pageNumber}`, payload: {} });\n};\n\nexport function attemptAddRecommendBookRequest(payload: Interfaces.addRecommendBookRequest): Promise<Interfaces.defaultServerResponse> {\n    // return GlobalAxios.start(true, 'post', `/api/v1/admin/books/recommend`, payload);\n    return GlobalAxios.start({ authType: true, method: 'post', endpoint: `/api/v1/admin/books/recommend`, payload: payload });\n};\n\nexport function attemptDeleteRecommendBookRequest(payload: Interfaces.deleteRecommendBookRequest): Promise<Interfaces.defaultServerResponse> {\n    // return GlobalAxios.start(true, 'delete', `/api/v1/admin/books/recommend`, {params:payload});\n    return GlobalAxios.start({ authType: true, method: 'delete', endpoint: `/api/v1/admin/books/recommend`, payload: {params:payload} });\n};\n\n\nexport function attemptGetBookActivityListRequest(payload: Interfaces.getGubunPageingListRequest): Promise<Interfaces.defaultServerResponse> {\n    // return GlobalAxios.start(true, 'get', `/api/v1/admin/books/activity/${payload.gubun}/page/${payload.pageNumber}`, payload);\n    return GlobalAxios.start({ authType: true, method: 'get', endpoint: `/api/v1/admin/books/activity/${payload.gubun}/page/${payload.pageNumber}`, payload: payload });\n};\n\nexport function attemptDeleteBookActivityRequest(payload: Interfaces.deleteBookActivityRequest): Promise<Interfaces.defaultServerResponse> {\n    // return GlobalAxios.start(true, 'delete', `/api/v1/admin/books/activity`, {params:payload});\n    return GlobalAxios.start({ authType: true, method: 'delete', endpoint: `/api/v1/admin/books/activity`, payload: {params:payload} });\n};","export enum ActionType {\n    // Root Data\n    GET_ROOTDATA_REQUEST = 'root/GET_ROOTDATA_REQUEST ',\n    GET_ROOTDATA_SUCCESS = 'root/GET_ROOTDATA_SUCCESS',\n    GET_ROOTDATA_ERROR = 'root/GET_ROOTDATA_ERROR',\n\n    // 로그인\n    LOGIN_DATA_REQUEST = 'login/LOGIN_DATA_REQUEST',\n    LOGIN_DATA_SUCCESS = 'login/LOGIN_DATA_SUCCESS',\n    LOGIN_DATA_ERROR = 'login/LOGIN_DATA_ERROR',\n    LOGIN_DATA_RESET = 'login/LOGIN_DATA_RESET',\n\n\n    // 회원 리스트\n    GET_USER_LIST_REQUEST = 'users/GET_USER_LIST_REQUEST',\n    GET_USER_LIST_SUCCESS = 'users/GET_USER_LIST_SUCCESS',\n    GET_USER_LIST_ERROR = 'users/GET_USER_LIST_ERROR',\n\n    GET_USER_INFO_REQUEST = 'users/GET_USER_INFO_REQUEST',\n    GET_USER_INFO_SUCCESS = 'users/GET_USER_INFO_SUCCESS',\n    GET_USER_INFO_ERROR = 'users/GET_USER_INFO_ERROR',\n    GET_USER_INFO_RESET = 'users/GET_USER_INFO_RESET',\n\n    USER_DATA_UPDATE_REQUEST = 'users/USER_DATA_UPDATE_REQUEST',\n    USER_DATA_UPDATE_SUCCESS = 'users/USER_DATA_UPDATE_SUCCESS',\n    USER_DATA_UPDATE_ERROR = 'users/USER_DATA_UPDATE_ERROR',\n\n    USER_ACTIVE_UPDATE_REQUEST = 'users/USER_ACTIVE_UPDATE_REQUEST',\n    USER_ACTIVE_UPDATE_SUCCESS = 'users/USER_ACTIVE_UPDATE_SUCCESS',\n    USER_ACTIVE_UPDATE_ERROR = 'users/USER_ACTIVE_UPDATE_ERROR',\n\n    BOOK_CREATE_REQUEST = 'book/BOOK_CREATE_REQUEST',\n    BOOK_CREATE_SUCCESS = 'book/BOOK_CREATE_SUCCESS',\n    BOOK_CREATE_ERROR = 'book/BOOK_CREATE_ERROR',\n    BOOK_CREATE_RESET = 'book/BOOK_CREATE_RESET',\n\n    GET_BOOKS_LIST_REQUEST = 'book/GET_BOOKS_LIST_REQUEST',\n    GET_BOOKS_LIST_SUCCESS = 'book/GET_BOOKS_LIST_SUCCESS',\n    GET_BOOKS_LIST_ERROR = 'book/GET_BOOKS_LIST_ERROR',\n\n    GET_BOOKS_ACTIVITY_LIST_REQUEST = 'book/GET_BOOKS_ACTIVITY_LIST_REQUEST',\n    GET_BOOKS_ACTIVITY_LIST_SUCCESS = 'book/GET_BOOKS_ACTIVITY_LIST_SUCCESS',\n    GET_BOOKS_ACTIVITY_LIST_ERROR = 'book/GET_BOOKS_ACTIVITY_LIST_ERROR',\n\n    DELETE_BOOKS_ACTIVITY_LIST_REQUEST = 'book/DELETE_BOOKS_ACTIVITY_LIST_REQUEST',\n    DELETE_BOOKS_ACTIVITY_LIST_SUCCESS = 'book/DELETE_BOOKS_ACTIVITY_LIST_SUCCESS',\n    DELETE_BOOKS_ACTIVITY_LIST_ERROR = 'book/DELETE_BOOKS_ACTIVITY_LIST_ERROR',\n\n    GET_RECOMMEND_BOOKS_LIST_REQUEST = 'book/GET_RECOMMEND_BOOKS_LIST_REQUEST',\n    GET_RECOMMEND_BOOKS_LIST_SUCCESS = 'book/GET_RECOMMEND_BOOKS_LIST_SUCCESS',\n    GET_RECOMMEND_BOOKS_LIST_ERROR = 'book/GET_RECOMMEND_BOOKS_LIST_ERROR',\n\n    ADD_RECOMMEND_BOOKS_REQUEST = 'book/ADD_RECOMMEND_BOOKS_REQUEST',\n    ADD_RECOMMEND_BOOKS_SUCCESS = 'book/ADD_RECOMMEND_BOOKS_SUCCESS',\n    ADD_RECOMMEND_BOOKS_ERROR = 'book/ADD_RECOMMEND_BOOKS_ERROR',\n\n    DELETE_RECOMMEND_BOOKS_REQUEST = 'book/DELETE_RECOMMEND_BOOKS_REQUEST',\n    DELETE_RECOMMEND_BOOKS_SUCCESS = 'book/DELETE_RECOMMEND_BOOKS_SUCCESS',\n    DELETE_RECOMMEND_BOOKS_ERROR = 'book/DELETE_RECOMMEND_BOOKS_ERROR',\n    DELETE_RECOMMEND_BOOKS_RESET = 'book/DELETE_RECOMMEND_BOOKS_RESET',\n}","\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport history from 'routes/History';\n\ninterface alertTypeInterface {\n    title?: string,\n    text?: string | null | undefined,\n    html?: string | null | undefined,\n    footer?: string,\n    push_router?: string,\n}\n\nclass GlobalAlert {\n\n    SwalAlert: any;\n    History: any;\n\n    constructor() {\n        this.SwalAlert = withReactContent(Swal);\n    }\n\n    default = (alertOption: alertTypeInterface): void => {\n        this.SwalAlert.fire({\n            text: alertOption.text,\n        });\n    };\n\n\n    thenHistoryPush = (alertOption: alertTypeInterface): void => {\n\n        const push_target = alertOption.push_router ? alertOption.push_router : '/';\n\n        this.SwalAlert.fire({\n            text: alertOption.text,\n        }).then(() => {\n            history.push(process.env.PUBLIC_URL + push_target);\n        });\n    };\n\n    thenLocationReload = (alertOption: alertTypeInterface): void => {\n        this.SwalAlert.fire({\n            text: alertOption.text,\n        }).then(() => {\n            window.location.reload();\n        });\n    };\n\n    defaultUserInfo = (alertOption: alertTypeInterface): void => {\n        this.SwalAlert.fire({\n            title: alertOption.title,\n            html: alertOption.html,\n            cancelButtonText:\n              '<i class=\"fa fa-thumbs-down\"></i>',\n            cancelButtonAriaLabel: 'Thumbs down'\n        });\n    };\n\n\n    error = (alertOption: alertTypeInterface): void => {\n        this.SwalAlert.fire({\n            icon: \"error\",\n            text: alertOption.text,\n        });\n    };\n\n}\n\nexport default new GlobalAlert();","export { default } from './reducer';\nexport * from './actions';\nexport * from './types';\nexport * from './sagas';","import { put, takeLatest, fork, call } from \"redux-saga/effects\";\nimport { getSiteData } from 'lib/API';\nimport { ActionType } from 'modules/ActionType';\n\nexport function* getSiteDataSaga() {\n    const response = yield call(getSiteData);\n    if(response.state === true) {\n        yield put({ type: ActionType.GET_ROOTDATA_SUCCESS, payload: response.data });\n    } else {\n        yield put({ type: ActionType.GET_ROOTDATA_ERROR, payload: response.message });\n    }\n};\n\nfunction* onSiteDataRequestWatcher() {\n    yield takeLatest(ActionType.GET_ROOTDATA_REQUEST as any, getSiteDataSaga);\n}\n\nexport default [\n    fork(onSiteDataRequestWatcher),\n];","import { put, takeLatest, fork, call } from \"redux-saga/effects\";\nimport { ActionType } from 'modules/ActionType';\nimport { loginRequest } from 'modules/Interfaces';\nimport { attemptLogin } from 'lib/API';\n\nexport function* loginActionSaga({ payload }: { payload: loginRequest }) {\n    const response = yield call(attemptLogin, payload);\n    if(response.state === true) {\n        yield put({ type: ActionType.LOGIN_DATA_SUCCESS, payload: response.data});\n    } else {\n        yield put({ type: ActionType.LOGIN_DATA_ERROR, payload: response});\n    }\n}\n\nfunction* onLoginRequestWatcher() {\n    yield takeLatest(ActionType.LOGIN_DATA_REQUEST as any, loginActionSaga);\n}\n\nexport default [\n    fork(onLoginRequestWatcher),\n];","import { takeLatest, fork, call, put } from \"redux-saga/effects\";\nimport { ActionType } from 'modules/ActionType';\nimport * as Interfaces from 'modules/Interfaces';\nimport * as API from 'lib/API';\n\nexport function* getUserListActionSaga({ payload }: { payload: Interfaces.getUserListRequest }) {\n    const response = yield call(API.attemptGetUserList, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.GET_USER_LIST_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.GET_USER_LIST_ERROR, payload: response.data});\n    }\n}\n\nexport function* getUserInfoActionSaga({ payload }: { payload: Interfaces.getUserInfoRequest }) {\n    const response = yield call(API.attemptGetUserInfo, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.GET_USER_INFO_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.GET_USER_INFO_ERROR, payload: response.data});\n    }\n}\n\nexport function* getUserInfoActionResetSaga() {\n    yield put({type:ActionType.GET_USER_INFO_RESET});\n}\n\nexport function* userUpdateActionSaga({ payload }: { payload: Interfaces.UserDataUpdate }) {\n    const response = yield call(API.attemptUserDataUpdate, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.USER_DATA_UPDATE_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.USER_DATA_UPDATE_ERROR, payload: response.data});\n    }\n}\n\nexport function* userUpdateActiveActionSaga({ payload }: { payload: Interfaces.userActiveRequest }) {\n    const response = yield call(API.attemptUserActiveUpdate, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.USER_ACTIVE_UPDATE_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.USER_ACTIVE_UPDATE_ERROR, payload: response.data});\n    }\n}\n\nexport function* bookCreateActionSaga({ payload }: { payload: Interfaces.bookCreateRequest }) {\n    const response = yield call(API.attemptBookCreateRequest, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.BOOK_CREATE_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.BOOK_CREATE_ERROR, payload: response.data});\n    }\n}\n\nexport function* bookCreateResetActionSaga() {\n    yield put({type:ActionType.BOOK_CREATE_RESET});\n}\n\nexport function* getBookListActionSaga({ payload }: { payload: Interfaces.getPageingListRequest }) {\n    const response = yield call(API.attemptGetBookListRequest, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.GET_BOOKS_LIST_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.GET_BOOKS_LIST_ERROR, payload: response.data});\n    }\n}\n\nexport function* getRecommendBookListActionSaga({ payload }: { payload: Interfaces.getRecommendRequest }) {\n    const response = yield call(API.attemptGetRecommendBookListRequest, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.GET_RECOMMEND_BOOKS_LIST_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.GET_RECOMMEND_BOOKS_LIST_ERROR, payload: response.data});\n    }\n}\n\n\nexport function* recommendBookAddActionSaga({ payload }: { payload: Interfaces.addRecommendBookRequest }) {\n    const response = yield call(API.attemptAddRecommendBookRequest, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.ADD_RECOMMEND_BOOKS_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.ADD_RECOMMEND_BOOKS_ERROR, payload: response.data});\n    }\n}\n\nexport function* recommendBookDeleteActionSaga({ payload }: { payload: Interfaces.deleteRecommendBookRequest }) {\n    const response = yield call(API.attemptDeleteRecommendBookRequest, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.DELETE_RECOMMEND_BOOKS_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.DELETE_RECOMMEND_BOOKS_ERROR, payload: response.data});\n    }\n}\n\nexport function* recommendBookDeleteResetActionSaga() {\n    yield put({type:ActionType.DELETE_RECOMMEND_BOOKS_RESET});\n}\n\n\n\nexport function* getBookActivityListActionSaga({ payload }: { payload: Interfaces.getGubunPageingListRequest }) {\n    const response = yield call(API.attemptGetBookActivityListRequest, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.GET_BOOKS_ACTIVITY_LIST_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.GET_BOOKS_ACTIVITY_LIST_ERROR, payload: response.data});\n    }\n}\n\nexport function* deleteBookActivityActionSaga({ payload }: { payload: Interfaces.deleteBookActivityRequest }) {\n    const response = yield call(API.attemptDeleteBookActivityRequest, payload);\n    if(response.state === true) {\n        yield put({type:ActionType.DELETE_BOOKS_ACTIVITY_LIST_SUCCESS, payload: response.data});\n    } else {\n        yield put({type:ActionType.DELETE_BOOKS_ACTIVITY_LIST_ERROR, payload: response.data});\n    }\n}\n\n\nfunction* onPagesRequestWatcher() {\n    yield takeLatest(ActionType.GET_USER_LIST_REQUEST as any, getUserListActionSaga);\n    yield takeLatest(ActionType.GET_USER_INFO_REQUEST as any, getUserInfoActionSaga);\n    yield takeLatest(ActionType.USER_DATA_UPDATE_REQUEST as any, userUpdateActionSaga);\n    yield takeLatest(ActionType.USER_ACTIVE_UPDATE_REQUEST as any, userUpdateActiveActionSaga);\n    yield takeLatest(ActionType.BOOK_CREATE_REQUEST as any, bookCreateActionSaga);\n    yield takeLatest(ActionType.GET_BOOKS_LIST_REQUEST as any, getBookListActionSaga);\n    yield takeLatest(ActionType.GET_RECOMMEND_BOOKS_LIST_REQUEST as any, getRecommendBookListActionSaga);\n    yield takeLatest(ActionType.ADD_RECOMMEND_BOOKS_REQUEST as any, recommendBookAddActionSaga);\n    yield takeLatest(ActionType.DELETE_RECOMMEND_BOOKS_REQUEST as any, recommendBookDeleteActionSaga);\n    yield takeLatest(ActionType.DELETE_RECOMMEND_BOOKS_RESET as any, recommendBookDeleteResetActionSaga);\n    yield takeLatest(ActionType.GET_BOOKS_ACTIVITY_LIST_REQUEST as any, getBookActivityListActionSaga);\n    yield takeLatest(ActionType.DELETE_BOOKS_ACTIVITY_LIST_REQUEST as any, deleteBookActivityActionSaga);\n\n}\n\nexport default [\n    fork(onPagesRequestWatcher),\n]","export { default } from './reducer';\nexport * from './actions';\nexport * from './types';\nexport * from './sagas';","import { SiteDataState } from './types';\nimport { ActionType } from 'modules/ActionType';\nimport { createReducer } from \"typesafe-actions\";\nimport { siteBaseDataResponse } from 'modules/Interfaces';\n\nexport type Action<T> = {\n    type: ActionType;\n    payload: T;\n}\n\n/**\n * 사이트 기본 리듀서 이니셜 데이터\n */\nconst initialState: SiteDataState = {\n    state: 'idle',\n    code_list: [],\n}\n\n/**\n * 사이트 기본 정보 리듀셔\n */\nexport const getSiteDataReducer = createReducer<SiteDataState>(initialState, {\n   [ActionType.GET_ROOTDATA_REQUEST](state: SiteDataState){\n       return {\n           ...state,\n           state: 'loading',\n       };\n   },\n   [ActionType.GET_ROOTDATA_SUCCESS](state: SiteDataState,  action: Action<siteBaseDataResponse>){\n        return {\n            ...state,\n            state: 'success',\n            code_list: action.payload.items.code_list\n        };\n    },\n    [ActionType.GET_ROOTDATA_ERROR](state: SiteDataState, action: Action<siteBaseDataResponse>) {\n        return {\n            ...state,\n            state: 'failure'\n        }\n    },\n});\nexport default getSiteDataReducer;","import { ActionType } from \"modules/ActionType\";\n\nexport const getRootDataAction = () => {\n    return {\n        type:ActionType.GET_ROOTDATA_REQUEST\n    };\n}\n","import { ActionType } from 'modules/ActionType';\nimport { createReducer } from \"typesafe-actions\";\nimport { LoginState } from './types';\nimport { defaultServerResponse, loginState } from 'modules/Interfaces';\n\n\ntype Action<T> = {\n    type: ActionType;\n    payload: T;\n}\n\nconst initialState: LoginState = {\n    state: 'idle',\n    data: {}\n}\n\nexport const loginActionReducer = createReducer<loginState>(initialState, {\n    [ActionType.LOGIN_DATA_REQUEST](state: loginState) {\n        return {\n            ...state,\n            state: 'loading',\n        };\n    },\n    [ActionType.LOGIN_DATA_SUCCESS](state: loginState, action: Action<defaultServerResponse>) {\n        return {\n            ...state,\n            state: 'success',\n            data: {\n                token_type: action.payload.token_type,\n                expires_in: action.payload.expires_in,\n                access_token: action.payload.access_token,\n                refresh_token: action.payload.refresh_token,\n                user_name: action.payload.user_name,\n            }\n        };\n    },\n    [ActionType.LOGIN_DATA_ERROR](state: loginState, action: Action<defaultServerResponse>) {\n        return {\n            ...state,\n            state: 'failure',\n            message: action.payload.message\n        };\n    },\n    [ActionType.LOGIN_DATA_RESET](state: loginState) {\n        return {\n            ...state,\n            state: 'idle',\n            data: {}\n        };\n    }\n});\n\nexport default loginActionReducer;","import { ActionType } from 'modules/ActionType';\nimport { loginRequest } from 'modules/Interfaces';\n\nexport const attemptLoginAction = (payload: loginRequest) => {\n    return {\n        type: ActionType.LOGIN_DATA_REQUEST,\n        payload\n    }\n}\n\nexport const attemptLoginResetAction = () => {\n    return {\n        type: ActionType.LOGIN_DATA_RESET,\n    }\n}","import { ActionType } from 'modules/ActionType';\nimport { createReducer } from \"typesafe-actions\";\nimport { PageState } from './types';\nimport * as Interfaces from 'modules/Interfaces';\n\ntype Action<T> = {\n    type: ActionType;\n    payload: T;\n}\n\nconst initialState: PageState = {\n    users: {\n        user_list: {\n            state: 'idle',\n        },\n        user_info: {\n            state: 'idle',\n        },\n        user_data_update : {\n            state: 'idle',\n        },\n        user_active_update : {\n            state: 'idle',\n        },\n    },\n    books:{\n        book_create : {\n            state: 'idle',\n        },\n        book_list : {\n            state: 'idle',\n        },\n        recommend_book_list : {\n            state: 'idle',\n        },\n        delete_recommend_book : {\n            state: 'idle',\n        },\n        add_recommend_book : {\n            state: 'idle',\n        },\n        book_activity_list : {\n            state: 'idle',\n        },\n        delete_book_activity : {\n            state: 'idle',\n        }\n    }\n}\n\nexport const pagesActionReducer = createReducer<PageState>(initialState, {\n    [ActionType.GET_USER_LIST_REQUEST](state: PageState) {\n        return {\n            ...state,\n            users: {\n                ...state.users,\n                user_list : {\n                    state: 'loading',\n                },\n            }\n        }\n    },\n    [ActionType.GET_USER_LIST_SUCCESS](state: PageState, action: Action<Interfaces.listTypeServerResponse>) {\n        return {\n            ...state,\n            users: {\n                ...state.users,\n                user_list : Object.assign({}, state.users.user_list, {\n                    state: 'success',\n                    list: action.payload\n                })\n            }\n        };\n    },\n    [ActionType.GET_USER_LIST_ERROR](state: PageState, action: Action<Interfaces.listTypeServerResponse>) {\n        return {\n            ...state,\n            users: {\n                ...state.users,\n                user_list: {\n                    state: 'failure'\n                }\n            },\n        };\n    },\n\n    [ActionType.GET_USER_INFO_REQUEST](state: PageState) {\n        return {\n            ...state,\n            users: {\n                ...state.users,\n                user_info: {\n                    state: 'loading'\n                }\n            },\n        };\n    },\n    [ActionType.GET_USER_INFO_SUCCESS](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            users: {\n                ...state.users,\n                user_info: {\n                    state: 'success',\n                    data: action.payload\n                }\n            },\n        };\n    },\n    [ActionType.GET_USER_INFO_ERROR](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            users: {\n                ...state.users,\n                user_info: {\n                    state: 'failure',\n                }\n            },\n        };\n    },\n    [ActionType.GET_USER_INFO_RESET](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            users: {\n                ...state.users,\n                user_info: {\n                    state: 'idle',\n                }\n            },\n        };\n    },\n    [ActionType.USER_DATA_UPDATE_SUCCESS](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            users: {\n                ...state.users,\n                user_data_update: {\n                    state: 'success',\n                }\n            },\n        };\n    },\n    [ActionType.USER_DATA_UPDATE_ERROR](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            users: {\n                ...state.users,\n                user_data_update: {\n                    state: 'failure',\n                }\n            },\n        };\n    },\n    [ActionType.USER_ACTIVE_UPDATE_REQUEST](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            users: {\n                ...state.users,\n                user_active_update: {\n                    state: 'loading'\n                }\n            },\n        };\n    },\n    [ActionType.USER_ACTIVE_UPDATE_SUCCESS](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            users: {\n                ...state.users,\n                user_active_update: {\n                    state: 'success'\n                }\n            },\n        };\n    },\n    [ActionType.USER_ACTIVE_UPDATE_ERROR](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            users: {\n                ...state.users,\n                user_active_update: {\n                    state: 'failure'\n                }\n            },\n        };\n    },\n    [ActionType.BOOK_CREATE_REQUEST](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                book_create: {\n                    state: 'loading'\n                }\n            },\n        };\n    },\n    [ActionType.BOOK_CREATE_SUCCESS](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                book_create: {\n                    state: 'success',\n                    info: action.payload.data\n                }\n            },\n        };\n    },\n    [ActionType.BOOK_CREATE_ERROR](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                book_create: {\n                    state: 'failure',\n                }\n            },\n        };\n    },\n    [ActionType.BOOK_CREATE_RESET](state: PageState) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                book_create: {\n                    state: 'idle',\n                }\n            },\n        };\n    },\n    [ActionType.GET_BOOKS_LIST_REQUEST](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                book_list: {\n                    state: 'loading',\n                }\n            },\n        };\n    },\n    [ActionType.GET_BOOKS_LIST_SUCCESS](state: PageState, action: Action<Interfaces.booklistTypeServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                book_list: {\n                    state: 'success',\n                    list: action.payload\n                }\n            },\n        };\n    },\n    [ActionType.GET_BOOKS_LIST_ERROR](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                book_list: {\n                    state: 'failure',\n                }\n            },\n        };\n    },\n    [ActionType.GET_RECOMMEND_BOOKS_LIST_REQUEST](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                recommend_book_list: {\n                    state: 'loading',\n                }\n            },\n        };\n    },\n    [ActionType.GET_RECOMMEND_BOOKS_LIST_SUCCESS](state: PageState, action: Action<Interfaces.RecommendlistTypeServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                recommend_book_list : {\n                    state: 'success',\n                    list: action.payload\n                },\n            }\n        };\n    },\n    [ActionType.GET_RECOMMEND_BOOKS_LIST_ERROR](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                recommend_book_list : {\n                    state: 'failure',\n                },\n            }\n        };\n    },\n    [ActionType.DELETE_RECOMMEND_BOOKS_REQUEST](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                delete_recommend_book : {\n                    state: 'loading',\n                },\n            }\n        };\n    },\n    [ActionType.DELETE_RECOMMEND_BOOKS_SUCCESS](state: PageState, action: Action<Interfaces.RecommendlistTypeServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                delete_recommend_book : {\n                    state: 'success'\n                },\n            }\n        };\n    },\n    [ActionType.DELETE_RECOMMEND_BOOKS_ERROR](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                delete_recommend_book : {\n                    state: 'failure'\n                },\n            }\n        };\n    },\n    [ActionType.DELETE_RECOMMEND_BOOKS_RESET](state: PageState) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                delete_recommend_book : {\n                    state: 'idle'\n                },\n            }\n        };\n    },\n    [ActionType.ADD_RECOMMEND_BOOKS_REQUEST](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                delete_recommend_book : {\n                    state: 'loading'\n                },\n            }\n        };\n    },\n    [ActionType.ADD_RECOMMEND_BOOKS_SUCCESS](state: PageState, action: Action<Interfaces.RecommendlistTypeServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                add_recommend_book : {\n                    state: 'success'\n                },\n            }\n        };\n    },\n    [ActionType.ADD_RECOMMEND_BOOKS_ERROR](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                add_recommend_book : {\n                    state: 'failure'\n                },\n            }\n        };\n    },\n    [ActionType.GET_BOOKS_ACTIVITY_LIST_REQUEST](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                book_activity_list : {\n                    state: 'loading'\n                },\n            }\n        };\n    },\n    [ActionType.GET_BOOKS_ACTIVITY_LIST_SUCCESS](state: PageState, action: Action<Interfaces.activitylistTypeServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                book_activity_list : {\n                    state: 'success',\n                    list:action.payload\n                },\n            }\n        };\n    },\n    [ActionType.GET_BOOKS_ACTIVITY_LIST_ERROR](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                book_activity_list : {\n                    state: 'failure',\n                },\n            }\n        };\n    },\n    [ActionType.DELETE_BOOKS_ACTIVITY_LIST_REQUEST](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                delete_book_activity : {\n                    state: 'loading',\n                },\n            }\n        };\n    },\n    [ActionType.DELETE_BOOKS_ACTIVITY_LIST_SUCCESS](state: PageState, action: Action<Interfaces.activitylistTypeServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                delete_book_activity : {\n                    state: 'success',\n                },\n            }\n        };\n    },\n    [ActionType.DELETE_BOOKS_ACTIVITY_LIST_ERROR](state: PageState, action: Action<Interfaces.defaultServerResponse>) {\n        return {\n            ...state,\n            books: {\n                ...state.books,\n                delete_book_activity : {\n                    state: 'failure',\n                },\n            }\n        };\n    }\n\n\n\n});\n\nexport default pagesActionReducer;","import { ActionType } from 'modules/ActionType';\nimport * as Interfaces from 'modules/Interfaces';\n\nexport const attemptGetUserListAction = (payload: Interfaces.getUserListRequest) => {\n    return {\n        type: ActionType.GET_USER_LIST_REQUEST,\n        payload\n    };\n}\n\nexport const attemptGetBooksListAction = (payload: Interfaces.getPageingListRequest) => {\n    return {\n        type: ActionType.GET_BOOKS_LIST_REQUEST,\n        payload\n    };\n}\n\nexport const attemptGetUserInfoAction = (payload: Interfaces.getUserInfoRequest) => {\n    return {\n        type: ActionType.GET_USER_INFO_REQUEST,\n        payload\n    };\n}\n\nexport const attemptGetUserInfoResetAction = () => {\n    return {\n        type: ActionType.GET_USER_INFO_RESET\n    };\n}\n\nexport const attemptUserDataUpdateAction = (payload: Interfaces.UserDataUpdate) => {\n    return {\n        type: ActionType.USER_DATA_UPDATE_REQUEST,\n        payload\n    };\n}\n\nexport const attemptUserActiveUpdateAction = (payload: Interfaces.userActiveRequest) => {\n    return {\n        type: ActionType.USER_ACTIVE_UPDATE_REQUEST,\n        payload\n    };\n}\n\nexport const attemptBookCreateAction = (payload: Interfaces.bookCreateRequest) => {\n    return {\n        type: ActionType.BOOK_CREATE_REQUEST,\n        payload\n    };\n}\n\nexport const attemptBookCreateResetAction = () => {\n    return {\n        type: ActionType.BOOK_CREATE_RESET\n    };\n}\n\nexport const attemptRecommendBookListAction = (payload: Interfaces.getRecommendRequest) => {\n    return {\n        type: ActionType.GET_RECOMMEND_BOOKS_LIST_REQUEST,\n        payload\n    };\n}\n\nexport const attemptAddRecommendBookAction = (payload: Interfaces.addRecommendBookRequest) => {\n    return {\n        type: ActionType.ADD_RECOMMEND_BOOKS_REQUEST,\n        payload\n    };\n}\n\nexport const attemptDeleteRecommendBookAction = (payload: Interfaces.deleteRecommendBookRequest) => {\n    return {\n        type: ActionType.DELETE_RECOMMEND_BOOKS_REQUEST,\n        payload\n    };\n}\n\nexport const attemptDeleteRecommendBookResetAction = () => {\n    return {\n        type: ActionType.DELETE_RECOMMEND_BOOKS_RESET\n    };\n}\n\nexport const attemptGetBookActivityListAction = (payload: Interfaces.getGubunPageingListRequest) => {\n    return {\n        type: ActionType.GET_BOOKS_ACTIVITY_LIST_REQUEST,\n        payload\n    };\n}\n\nexport const attemptDeleteBookActivityAction = (payload: Interfaces.deleteBookActivityRequest) => {\n    return {\n        type: ActionType.DELETE_BOOKS_ACTIVITY_LIST_REQUEST,\n        payload\n    };\n}"],"sourceRoot":""}